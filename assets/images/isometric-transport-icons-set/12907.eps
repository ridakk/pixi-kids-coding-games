%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1502.i039.007.P.m004.c23.isometric transport icons.eps
%%Creator: Adobe Illustrator(R) 17.0
%%For: IvAN
%%CreationDate: 2/6/2015
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.0.0 x256 R agm 4.7700 ct 5.3328%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Print</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2015-02-06T12:58:56+02:00</xmp:MetadataDate>
         <xmp:ModifyDate>2015-02-06T12:58:56+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2015-02-06T12:58:56+02:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A6n5i8wWWgaa2o3yTNaRk&#xA;CV4UMhQH9pgOi++ZMY2adMTTEf8AlefkH/ftz/yIP9ct/LyYeKHf8rz8g/79uf8AkQf64/l5L4od&#xA;/wArz8g/79uf+RB/rj+Xkvih3/K8/IP+/bn/AJEH+uP5eS+KHf8AK8/IP+/bn/kQf64/l5L4od/y&#xA;vPyD/v25/wCRB/rj+Xkvih3/ACvPyD/v25/5EH+uP5eS+KHf8rz8g/79uf8AkQf64/l5L4od/wAr&#xA;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&#xA;uxV2KuxV2Kv/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:526b0471-c8e9-b94d-8127-97b19d666cd5</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:526b0471-c8e9-b94d-8127-97b19d666cd5</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:257943cd-c3cc-c643-9532-a27812f84d13</stRef:instanceID>
            <stRef:documentID>xmp.did:257943cd-c3cc-c643-9532-a27812f84d13</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:607cea21-2ef1-4442-b16e-d686abe6070c</stEvt:instanceID>
                  <stEvt:when>2015-02-06T01:12:19+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:257943cd-c3cc-c643-9532-a27812f84d13</stEvt:instanceID>
                  <stEvt:when>2015-02-06T01:15:48+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:526b0471-c8e9-b94d-8127-97b19d666cd5</stEvt:instanceID>
                  <stEvt:when>2015-02-06T12:58:56+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
450 450 mo
0 450 li
0 0 li
450 0 li
450 450 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.686275 .85098 .847059 rgb
f
123.134 108.896 mo
123.595 108.629 li
123.754 108.536 123.975 108.549 124.219 108.69 cv
123.758 108.957 li
123.515 108.817 123.294 108.804 123.134 108.896 cv
cp
.00784314 .380392 .54902 rgb
f
gsave
123.134 108.896 mo
123.595 108.629 li
123.754 108.536 123.975 108.549 124.219 108.69 cv
123.758 108.957 li
123.515 108.817 123.294 108.804 123.134 108.896 cv
cp
clp
123.134 108.896 mo
123.595 108.629 li
123.754 108.536 123.975 108.549 124.219 108.69 cv
123.758 108.957 li
123.515 108.817 123.294 108.804 123.134 108.896 cv
123.134 108.896 li
cp
f
grestore
126.44 111.689 mo
125.979 111.957 li
126.043 111.92 126.097 111.866 126.139 111.797 cv
126.6 111.529 li
126.558 111.598 126.504 111.652 126.44 111.689 cv
cp
f
gsave
126.44 111.689 mo
125.979 111.957 li
126.043 111.92 126.097 111.866 126.139 111.797 cv
126.6 111.529 li
126.558 111.598 126.504 111.652 126.44 111.689 cv
cp
clp
126.139 111.797 mo
126.6 111.529 li
126.558 111.598 126.504 111.652 126.44 111.689 cv
125.979 111.957 li
126.043 111.92 126.097 111.866 126.139 111.797 cv
126.139 111.797 li
cp
f
grestore
126.238 111.395 mo
126.699 111.128 li
126.695 111.188 li
126.234 111.455 li
126.238 111.395 li
cp
f
123.758 108.957 mo
124.219 108.69 li
125.828 109.618 li
125.367 109.886 li
123.758 108.957 li
cp
f
127.445 113.214 mo
127.906 112.946 li
127.707 113.133 li
127.246 113.401 li
127.445 113.214 li
cp
f
126.234 111.455 mo
126.695 111.188 li
127.906 112.946 li
127.445 113.214 li
126.234 111.455 li
cp
f
125.367 109.886 mo
125.828 109.618 li
126.312 109.898 126.7 110.574 126.699 111.128 cv
126.238 111.395 li
126.24 110.841 125.851 110.165 125.367 109.886 cv
cp
f
gsave
125.367 109.886 mo
125.828 109.618 li
126.312 109.898 126.7 110.574 126.699 111.128 cv
126.238 111.395 li
126.24 110.841 125.851 110.165 125.367 109.886 cv
cp
clp
125.367 109.886 mo
125.828 109.618 li
125.871 109.644 125.914 109.672 125.955 109.703 cv
125.495 109.97 li
125.453 109.939 125.41 109.911 125.367 109.886 cv
125.367 109.886 li
cp
f
125.495 109.97 mo
125.955 109.703 li
126.32 109.975 126.61 110.464 126.682 110.916 cv
126.221 111.184 li
126.15 110.731 125.86 110.243 125.495 109.97 cv
125.495 109.97 li
cp
f
126.221 111.184 mo
126.682 110.916 li
126.693 110.988 126.699 111.059 126.699 111.128 cv
126.238 111.395 li
126.239 111.326 126.233 111.256 126.221 111.184 cv
126.221 111.184 li
cp
f
grestore
125.367 109.886 mo
125.851 110.165 126.24 110.841 126.238 111.395 cv
126.234 111.455 li
127.445 113.214 li
127.246 113.401 li
126.139 111.797 li
125.994 112.037 125.701 112.094 125.361 111.897 cv
123.753 110.969 li
123.269 110.689 122.878 110.012 122.879 109.456 cv
122.881 108.902 123.274 108.678 123.758 108.957 cv
125.367 109.886 li
cp
.00784314 .313726 .454902 rgb
f
194.897 102.642 mo
194.163 102.215 193.173 102.227 192.073 102.762 cv
191.954 102.82 191.833 102.883 191.712 102.953 cv
190.114 103.876 188.715 105.647 187.927 107.552 cv
187.495 108.595 187.247 109.677 187.25 110.682 cv
187.254 112.093 187.752 113.086 188.556 113.553 cv
191.588 115.316 li
190.785 114.849 190.286 113.856 190.282 112.444 cv
190.28 111.439 190.528 110.357 190.959 109.315 cv
191.747 107.41 193.147 105.638 194.744 104.716 cv
194.866 104.646 194.986 104.582 195.105 104.524 cv
196.206 103.99 197.195 103.977 197.93 104.404 cv
194.897 102.642 li
cp
.00392157 .109804 .168627 rgb
f
194.744 104.716 mo
197.217 103.288 199.228 104.434 199.236 107.275 cv
199.244 110.116 197.246 113.576 194.774 115.004 cv
192.301 116.431 190.29 115.285 190.282 112.444 cv
190.274 109.603 192.272 106.143 194.744 104.716 cv
cp
.760784 .760784 .760784 rgb
f
194.744 104.716 mo
197.217 103.288 199.228 104.434 199.236 107.275 cv
199.244 110.116 197.246 113.576 194.774 115.004 cv
192.301 116.431 190.29 115.285 190.282 112.444 cv
190.274 109.603 192.272 106.143 194.744 104.716 cv
cp
.00784314 .313726 .454902 rgb
f
194.752 107.637 mo
195.901 106.974 196.836 107.506 196.839 108.826 cv
196.843 110.146 195.915 111.755 194.766 112.418 cv
193.617 113.081 192.682 112.549 192.679 111.229 cv
192.675 109.908 193.603 108.3 194.752 107.637 cv
cp
.760784 .760784 .760784 rgb
f
205.295 96.7164 mo
204.561 96.2895 203.571 96.3022 202.47 96.8365 cv
202.351 96.8943 202.231 96.9582 202.11 97.0283 cv
200.512 97.9508 199.112 99.7225 198.324 101.627 cv
197.893 102.67 197.645 103.752 197.648 104.757 cv
197.652 106.168 198.15 107.161 198.954 107.628 cv
201.986 109.391 li
201.182 108.923 200.684 107.93 200.68 106.519 cv
200.677 105.514 200.925 104.432 201.357 103.39 cv
202.145 101.485 203.544 99.7129 205.142 98.7905 cv
205.263 98.7204 205.384 98.6565 205.503 98.5988 cv
206.603 98.0643 207.593 98.0518 208.327 98.4786 cv
205.295 96.7164 li
cp
.00392157 .109804 .168627 rgb
f
205.142 98.7905 mo
207.614 97.3631 209.625 98.509 209.633 101.35 cv
209.641 104.191 207.644 107.651 205.171 109.079 cv
202.699 110.506 200.688 109.36 200.68 106.519 cv
200.672 103.678 202.67 100.218 205.142 98.7905 cv
cp
.760784 .760784 .760784 rgb
f
205.142 98.7905 mo
207.614 97.3631 209.625 98.509 209.633 101.35 cv
209.641 104.191 207.644 107.651 205.171 109.079 cv
202.699 110.506 200.688 109.36 200.68 106.519 cv
200.672 103.678 202.67 100.218 205.142 98.7905 cv
cp
.00784314 .313726 .454902 rgb
f
205.15 101.711 mo
206.299 101.048 207.233 101.58 207.237 102.9 cv
207.241 104.221 206.312 105.829 205.164 106.492 cv
204.015 107.156 203.08 106.623 203.076 105.303 cv
203.073 103.982 204.001 102.374 205.15 101.711 cv
cp
.760784 .760784 .760784 rgb
f
159.69 131.295 mo
138.464 118.96 li
138.458 116.933 li
159.685 129.269 li
159.69 131.295 li
cp
.0980392 .141176 .180392 rgb
f
159.685 129.269 mo
138.458 116.933 li
195.639 83.8433 li
214.634 97.4036 li
159.685 129.269 li
cp
.247059 .521569 .596078 rgb
f
214.634 97.4036 mo
214.639 99.43 li
159.69 131.295 li
159.685 129.269 li
214.634 97.4036 li
cp
.168627 .243137 .309804 rgb
f
159.69 129.281 mo
138.464 116.946 li
138.458 93.3415 li
159.685 105.677 li
159.69 129.281 li
cp
.145098 .447059 .65098 rgb
f
159.685 105.677 mo
138.458 93.3415 li
193.407 61.4766 li
214.634 73.8121 li
159.685 105.677 li
cp
.203922 .592157 .854902 rgb
f
214.634 73.8121 mo
214.639 97.4164 li
159.69 129.281 li
159.685 105.677 li
214.634 73.8121 li
cp
.109804 .513726 .721569 rgb
f
149.576 128.36 mo
148.842 127.933 147.852 127.945 146.752 128.48 cv
146.633 128.538 146.512 128.602 146.391 128.672 cv
144.793 129.594 143.393 131.366 142.605 133.27 cv
142.174 134.313 141.926 135.395 141.929 136.4 cv
141.933 137.811 142.431 138.805 143.235 139.271 cv
146.267 141.034 li
145.463 140.567 144.965 139.574 144.961 138.162 cv
144.958 137.158 145.206 136.075 145.638 135.033 cv
146.426 133.128 147.825 131.356 149.423 130.434 cv
149.545 130.364 149.665 130.3 149.784 130.242 cv
150.884 129.708 151.874 129.695 152.609 130.122 cv
149.576 128.36 li
cp
.00392157 .109804 .168627 rgb
f
149.423 130.434 mo
151.896 129.006 153.906 130.152 153.915 132.993 cv
153.923 135.834 151.925 139.294 149.452 140.722 cv
146.98 142.149 144.969 141.003 144.961 138.162 cv
144.953 135.322 146.951 131.861 149.423 130.434 cv
cp
.760784 .760784 .760784 rgb
f
149.423 130.434 mo
151.896 129.006 153.906 130.152 153.915 132.993 cv
153.923 135.834 151.925 139.294 149.452 140.722 cv
146.98 142.149 144.969 141.003 144.961 138.162 cv
144.953 135.322 146.951 131.861 149.423 130.434 cv
cp
.00784314 .313726 .454902 rgb
f
149.431 133.187 mo
150.58 132.524 151.514 133.057 151.518 134.377 cv
151.522 135.697 150.594 137.305 149.445 137.968 cv
148.296 138.632 147.361 138.099 147.358 136.779 cv
147.354 135.459 148.282 133.851 149.431 133.187 cv
cp
.760784 .760784 .760784 rgb
f
135.896 142.663 mo
119.925 133.381 li
119.911 124.091 li
135.882 133.372 li
135.896 142.663 li
cp
.862745 .862745 .862745 rgb
f
135.882 133.372 mo
119.911 124.091 li
140.48 115.14 li
156.451 123.02 li
135.882 133.372 li
cp
.188235 .168627 .188235 rgb
f
135.882 133.372 mo
119.911 124.091 li
124.909 118.102 li
140.881 127.384 li
135.882 133.372 li
cp
.980392 .984314 .992157 rgb
f
140.881 127.384 mo
124.909 118.102 li
140.463 109.096 li
156.434 118.377 li
140.881 127.384 li
cp
.188235 .168627 .188235 rgb
f
155.703 117.904 mo
139.732 108.623 li
139.71 100.86 li
155.681 110.142 li
155.703 117.904 li
cp
.164706 .145098 .160784 rgb
f
141.606 126.07 mo
125.635 116.788 li
139.732 108.623 li
155.703 117.904 li
141.606 126.07 li
cp
.188235 .168627 .188235 rgb
f
155.681 110.142 mo
155.703 117.904 li
142.013 126.118 li
145.151 116.222 li
155.681 110.142 li
cp
.109804 .513726 .721569 rgb
f
141.606 126.07 mo
125.635 116.788 li
129.18 106.94 li
145.151 116.222 li
141.606 126.07 li
cp
.239216 .505882 .576471 rgb
f
145.151 116.222 mo
129.18 106.94 li
139.71 100.86 li
155.681 110.142 li
145.151 116.222 li
cp
.258824 .54902 .627451 rgb
f
140.881 127.384 mo
124.909 118.102 li
128.449 106.466 li
144.42 115.747 li
140.881 127.384 li
cp
.862745 .862745 .862745 rgb
f
125.492 117.817 mo
128.877 107.339 li
143.838 116.033 li
140.452 126.511 li
125.492 117.817 li
cp
.203922 .592157 .854902 rgb
f
144.42 115.747 mo
128.449 106.466 li
140.436 99.5453 li
156.407 108.827 li
144.42 115.747 li
cp
.980392 .984314 .992157 rgb
f
155.703 117.904 mo
155.681 110.142 li
145.151 116.222 li
142.013 126.118 li
155.703 117.904 li
155.703 117.904 li
cp
144.42 115.747 mo
156.407 108.827 li
156.434 118.377 li
140.881 127.384 li
144.42 115.747 li
cp
.74902 .752941 .760784 rgb
f
149.136 129.937 mo
149.931 129.479 150.703 129.246 151.432 129.246 cv
152.975 129.246 154.065 130.27 154.388 131.93 cv
156.465 130.727 li
156.451 123.02 li
156.434 118.377 li
140.881 127.384 li
135.882 133.372 li
135.896 142.663 li
144.402 137.713 li
144.584 134.747 146.594 131.404 149.136 129.937 cv
cp
f
135.896 142.663 mo
144.402 137.713 li
144.482 136.42 144.909 135.055 145.576 133.805 cv
135.891 139.423 li
135.896 142.663 li
cp
.168627 .243137 .309804 rgb
f
152.857 129.601 mo
153.636 130.034 154.177 130.844 154.388 131.93 cv
156.465 130.727 li
156.459 127.521 li
152.857 129.601 li
cp
f
130.897 132.11 mo
124.013 128.109 li
123.324 130.46 li
131.585 135.229 li
130.897 132.11 li
cp
.247059 .521569 .596078 rgb
f
119.92 130.172 mo
119.925 133.381 li
135.896 142.663 li
135.891 139.393 li
119.92 130.172 li
cp
.0980392 .141176 .180392 rgb
f
135.348 134.627 mo
135.34 137.386 li
132.369 135.665 li
131.755 132.546 li
135.348 134.627 li
cp
.992157 .721569 .0745098 rgb
f
123.139 127.754 mo
120.26 126.092 li
120.253 128.763 li
122.608 130.127 li
123.139 127.754 li
cp
f
170.659 99.3129 mo
170.659 122.921 li
174.316 120.8 li
174.316 97.1926 li
170.659 99.3129 li
cp
.145098 .454902 .658824 rgb
f
177.972 95.0723 mo
177.972 118.68 li
181.628 116.56 li
181.628 92.9519 li
177.972 95.0723 li
cp
f
163.347 103.553 mo
163.347 127.161 li
167.003 125.041 li
167.003 101.433 li
163.347 103.553 li
cp
f
207.223 78.1097 mo
207.223 101.717 li
210.879 99.597 li
210.879 75.9893 li
207.223 78.1097 li
cp
f
199.91 82.3503 mo
199.91 105.958 li
203.566 103.838 li
203.566 80.23 li
199.91 82.3503 li
cp
f
185.285 90.8316 mo
185.285 114.439 li
188.941 112.319 li
188.941 88.7113 li
185.285 90.8316 li
cp
f
192.597 86.591 mo
192.597 110.199 li
196.254 108.078 li
196.254 84.4706 li
192.597 86.591 li
cp
f
142.428 122.544 mo
142.959 122.235 li
144.364 121.824 li
143.833 122.133 li
142.428 122.544 li
cp
.00784314 .380392 .54902 rgb
f
144.123 121.412 mo
144.654 121.103 li
144.838 120.997 145.092 121.011 145.371 121.173 cv
144.84 121.482 li
144.56 121.32 144.306 121.306 144.123 121.412 cv
144.123 121.412 li
cp
f
144.84 121.482 mo
145.371 121.173 li
147.23 122.246 li
146.698 122.555 li
144.84 121.482 li
cp
f
146.698 122.555 mo
147.23 122.246 li
147.28 122.275 147.329 122.307 147.376 122.343 cv
146.845 122.652 li
146.797 122.616 146.748 122.584 146.698 122.555 cv
146.698 122.555 li
cp
f
146.845 122.652 mo
147.376 122.343 li
147.797 122.656 148.133 123.222 148.216 123.745 cv
147.684 124.054 li
147.602 123.53 147.265 122.965 146.845 122.652 cv
146.845 122.652 li
cp
f
147.684 124.054 mo
148.216 123.745 li
148.229 123.827 148.236 123.909 148.235 123.988 cv
148.235 124.307 148.122 124.531 147.94 124.637 cv
147.409 124.946 li
147.59 124.84 147.703 124.616 147.704 124.296 cv
147.704 124.217 147.697 124.136 147.684 124.054 cv
147.684 124.054 li
cp
f
146.698 122.555 mo
147.255 122.876 147.706 123.657 147.704 124.296 cv
147.702 124.938 147.248 125.197 146.692 124.876 cv
144.833 123.803 li
144.441 123.576 144.105 123.122 143.94 122.652 cv
142.656 123.025 li
142.428 122.544 li
143.833 122.133 li
143.828 122.059 li
143.83 121.42 144.284 121.161 144.84 121.482 cv
146.698 122.555 li
cp
.00784314 .313726 .454902 rgb
f
21.6628 108.749 mo
22.146 108.469 li
22.3132 108.371 22.545 108.385 22.8008 108.533 cv
22.3176 108.814 li
22.0617 108.666 21.83 108.652 21.6628 108.749 cv
cp
.00784314 .380392 .54902 rgb
f
gsave
21.6628 108.749 mo
22.146 108.469 li
22.3132 108.371 22.545 108.385 22.8008 108.533 cv
22.3176 108.814 li
22.0617 108.666 21.83 108.652 21.6628 108.749 cv
cp
clp
21.6628 108.749 mo
22.146 108.469 li
22.3132 108.371 22.545 108.385 22.8008 108.533 cv
22.3176 108.814 li
22.0617 108.666 21.83 108.652 21.6628 108.749 cv
21.6628 108.749 li
cp
f
grestore
25.1309 111.68 mo
24.6476 111.961 li
24.7146 111.922 24.7713 111.865 24.8151 111.792 cv
25.2984 111.512 li
25.2546 111.584 25.1979 111.641 25.1309 111.68 cv
cp
f
gsave
25.1309 111.68 mo
24.6476 111.961 li
24.7146 111.922 24.7713 111.865 24.8151 111.792 cv
25.2984 111.512 li
25.2546 111.584 25.1979 111.641 25.1309 111.68 cv
cp
clp
24.8151 111.792 mo
25.2984 111.512 li
25.2546 111.584 25.1979 111.641 25.1309 111.68 cv
24.6476 111.961 li
24.7146 111.922 24.7713 111.865 24.8151 111.792 cv
24.8151 111.792 li
cp
f
grestore
24.9193 111.371 mo
25.4026 111.091 li
25.398 111.153 li
24.9148 111.434 li
24.9193 111.371 li
cp
f
22.3176 108.814 mo
22.8008 108.533 li
24.4884 109.507 li
24.0052 109.788 li
22.3176 108.814 li
cp
f
26.1855 113.279 mo
26.6688 112.998 li
26.46 113.195 li
25.9767 113.476 li
26.1855 113.279 li
cp
f
24.9148 111.434 mo
25.398 111.153 li
26.6688 112.998 li
26.1855 113.279 li
24.9148 111.434 li
cp
f
24.0052 109.788 mo
24.4884 109.507 li
24.9962 109.8 25.4043 110.51 25.4026 111.091 cv
24.9193 111.371 li
24.921 110.79 24.513 110.081 24.0052 109.788 cv
cp
f
gsave
24.0052 109.788 mo
24.4884 109.507 li
24.9962 109.8 25.4043 110.51 25.4026 111.091 cv
24.9193 111.371 li
24.921 110.79 24.513 110.081 24.0052 109.788 cv
cp
clp
24.0052 109.788 mo
24.4884 109.507 li
24.5339 109.534 24.5786 109.563 24.6224 109.596 cv
24.1391 109.877 li
24.0954 109.844 24.0507 109.814 24.0052 109.788 cv
24.0052 109.788 li
cp
f
24.1391 109.877 mo
24.6224 109.596 li
25.0055 109.881 25.3098 110.394 25.3848 110.869 cv
24.9015 111.15 li
24.8265 110.675 24.5223 110.162 24.1391 109.877 cv
24.1391 109.877 li
cp
f
24.9015 111.15 mo
25.3848 110.869 li
25.3967 110.944 25.4028 111.018 25.4026 111.091 cv
24.9193 111.371 li
24.9196 111.299 24.9134 111.225 24.9015 111.15 cv
24.9015 111.15 li
cp
f
grestore
24.0052 109.788 mo
24.513 110.081 24.921 110.79 24.9193 111.371 cv
24.9148 111.434 li
26.1855 113.279 li
25.9767 113.476 li
24.8151 111.792 li
24.6631 112.045 24.356 112.104 23.9992 111.898 cv
22.3115 110.924 li
21.8037 110.631 21.3936 109.92 21.3952 109.337 cv
21.3969 108.756 21.8097 108.521 22.3176 108.814 cv
24.0052 109.788 li
cp
.00784314 .313726 .454902 rgb
f
87.0241 107.715 mo
86.2534 107.267 85.215 107.28 84.0605 107.841 cv
83.9357 107.902 83.8095 107.969 83.6821 108.042 cv
82.0058 109.01 80.5373 110.869 79.7105 112.867 cv
79.258 113.961 78.9977 115.096 79.0007 116.151 cv
79.0048 117.631 79.5277 118.673 80.3708 119.163 cv
83.5522 121.012 li
82.7091 120.522 82.1864 119.48 82.1821 118 cv
82.1791 116.945 82.4395 115.81 82.892 114.716 cv
83.7188 112.718 85.1872 110.859 86.8635 109.891 cv
86.9909 109.817 87.1171 109.751 87.242 109.69 cv
88.3965 109.129 89.4349 109.116 90.2055 109.564 cv
87.0241 107.715 li
cp
.00392157 .109804 .168627 rgb
f
86.8635 109.891 mo
89.4574 108.394 91.5671 109.596 91.5756 112.576 cv
91.5841 115.557 89.488 119.187 86.8942 120.685 cv
84.3004 122.182 82.1906 120.98 82.1821 118 cv
82.1737 115.019 84.2698 111.388 86.8635 109.891 cv
cp
.00784314 .313726 .454902 rgb
f
86.8718 112.955 mo
88.0771 112.259 89.0576 112.818 89.0615 114.203 cv
89.0654 115.588 88.0914 117.275 86.886 117.971 cv
85.6806 118.667 84.7002 118.108 84.6962 116.723 cv
84.6923 115.338 85.6664 113.651 86.8718 112.955 cv
cp
.760784 .760784 .760784 rgb
f
60.7784 132.128 mo
36.5808 120.298 li
38.5024 117.06 li
60.7725 130.002 li
60.7784 132.128 li
cp
f
60.7725 130.002 mo
38.5024 117.06 li
75.288 95.7891 li
95.2168 110.016 li
60.7725 130.002 li
cp
.247059 .521569 .596078 rgb
f
95.2168 110.016 mo
95.2228 112.142 li
60.7784 132.128 li
60.7725 130.002 li
95.2168 110.016 li
cp
1 .988235 .87451 rgb
f
60.7784 130.016 mo
38.5083 117.074 li
38.5024 92.309 li
60.7725 105.251 li
60.7784 130.016 li
cp
.741176 .266667 .0901961 rgb
f
60.7725 105.251 mo
38.5024 92.309 li
72.9467 72.3228 li
95.2168 85.2647 li
60.7725 105.251 li
cp
.976471 .505882 .164706 rgb
f
95.2168 85.2647 mo
95.2228 110.029 li
60.7784 130.016 li
60.7725 105.251 li
95.2168 85.2647 li
cp
1 .356863 .121569 rgb
f
50.1672 129.049 mo
49.3965 128.601 48.3581 128.614 47.2036 129.175 cv
47.0787 129.235 46.9526 129.302 46.8252 129.376 cv
45.1489 130.344 43.6804 132.202 42.8536 134.201 cv
42.4011 135.295 42.1408 136.43 42.1437 137.484 cv
42.148 138.965 42.6708 140.007 43.5138 140.497 cv
46.6953 142.346 li
45.8522 141.856 45.3294 140.814 45.3253 139.333 cv
45.3222 138.279 45.5825 137.143 46.035 136.05 cv
46.8618 134.051 48.3303 132.193 50.0067 131.225 cv
50.134 131.151 50.2602 131.084 50.385 131.023 cv
51.5396 130.463 52.5779 130.45 53.3486 130.897 cv
50.1672 129.049 li
cp
.00392157 .109804 .168627 rgb
f
50.0067 131.225 mo
52.6005 129.727 54.7102 130.929 54.7187 133.91 cv
54.7271 136.89 52.631 140.521 50.0373 142.018 cv
47.4434 143.516 45.3337 142.314 45.3253 139.333 cv
45.3167 136.353 47.4128 132.722 50.0067 131.225 cv
cp
.00784314 .313726 .454902 rgb
f
50.0148 134.114 mo
51.2203 133.418 52.2006 133.976 52.2046 135.361 cv
52.2085 136.747 51.2345 138.434 50.029 139.13 cv
48.8237 139.826 47.8433 139.267 47.8394 137.882 cv
47.8354 136.497 48.8095 134.809 50.0148 134.114 cv
cp
.760784 .760784 .760784 rgb
f
38.5285 142.495 mo
21.7722 132.757 li
21.7581 123.01 li
38.5143 132.747 li
38.5285 142.495 li
cp
.00784314 .309804 .45098 rgb
f
38.5143 132.747 mo
21.7581 123.01 li
23.421 118.768 li
40.1773 128.505 li
38.5143 132.747 li
cp
.00784314 .380392 .54902 rgb
f
40.1773 128.505 mo
23.421 118.768 li
40.606 108.838 li
57.3622 118.576 li
40.1773 128.505 li
cp
.188235 .168627 .188235 rgb
f
56.5956 118.079 mo
39.8393 108.341 li
39.8163 100.198 li
56.5725 109.935 li
56.5956 118.079 li
cp
.164706 .145098 .160784 rgb
f
40.9386 127.126 mo
27.3149 115.572 li
39.8393 108.341 li
56.5956 118.079 li
40.9386 127.126 li
cp
.188235 .168627 .188235 rgb
f
56.5725 109.935 mo
56.5956 118.079 li
41.8242 126.615 li
45.5241 116.314 li
56.5725 109.935 li
cp
.372549 .788235 .901961 rgb
f
40.9386 127.127 mo
27.3149 115.572 li
28.7679 106.576 li
45.5241 116.314 li
40.9386 127.127 li
cp
.239216 .505882 .576471 rgb
f
45.5241 116.314 mo
28.7679 106.576 li
39.8162 100.198 li
56.5725 109.935 li
45.5241 116.314 li
cp
.258824 .54902 .627451 rgb
f
40.1773 128.505 mo
23.4211 118.768 li
28.0012 106.079 li
44.7574 115.816 li
40.1773 128.505 li
cp
.00784314 .380392 .54902 rgb
f
24.032 118.468 mo
28.4504 106.994 li
44.1465 116.116 li
39.7282 127.59 li
24.032 118.468 li
cp
.372549 .788235 .901961 rgb
f
44.7574 115.816 mo
28.0012 106.079 li
40.5776 98.8178 li
57.3338 108.555 li
44.7574 115.816 li
cp
.00784314 .380392 .54902 rgb
f
56.5956 118.079 mo
56.5725 109.935 li
45.5241 116.314 li
41.8242 126.615 li
56.5956 118.079 li
56.5956 118.079 li
cp
44.7574 115.816 mo
57.3338 108.555 li
57.3622 118.576 li
40.1773 128.505 li
44.7574 115.816 li
cp
.00784314 .247059 .360784 rgb
f
49.7057 130.703 mo
50.5388 130.223 51.3491 129.979 52.114 129.979 cv
53.7332 129.979 54.8768 131.053 55.2157 132.794 cv
57.3943 131.532 li
57.3802 123.446 li
57.3622 118.576 li
40.1773 128.505 li
38.5143 132.747 li
38.5285 142.495 li
44.7389 138.862 li
44.9296 135.75 47.0388 132.243 49.7057 130.703 cv
cp
f
38.5285 142.495 mo
44.7389 138.862 li
44.822 137.505 45.2702 136.073 45.9704 134.761 cv
38.5235 139.096 li
38.5285 142.495 li
cp
1 .988235 .87451 rgb
f
53.6095 130.351 mo
54.427 130.805 54.9942 131.656 55.2158 132.794 cv
57.3943 131.532 li
57.3885 128.169 li
53.6095 130.351 li
cp
f
21.7674 129.391 mo
21.7722 132.757 li
38.5285 142.495 li
38.5234 139.065 li
21.7674 129.391 li
cp
.862745 .862745 .862745 rgb
f
34.0376 136.773 mo
25.0295 131.572 li
25.0295 134.43 li
34.0376 139.656 li
34.0376 136.773 li
cp
.00392157 .109804 .168627 rgb
f
42.0173 123.618 mo
42.5748 123.294 li
44.0485 122.863 li
43.4909 123.187 li
42.0173 123.618 li
cp
.00784314 .380392 .54902 rgb
f
43.7951 122.431 mo
44.3528 122.107 li
44.5453 121.995 44.8118 122.01 45.1054 122.18 cv
44.5478 122.504 li
44.2541 122.334 43.9876 122.319 43.7951 122.431 cv
43.7951 122.431 li
cp
f
44.5478 122.504 mo
45.1054 122.18 li
47.0553 123.305 li
46.4976 123.63 li
44.5478 122.504 li
cp
f
46.4976 123.63 mo
47.0553 123.305 li
47.1074 123.336 47.1587 123.369 47.2088 123.407 cv
46.6512 123.731 li
46.601 123.694 46.5498 123.66 46.4976 123.63 cv
46.4976 123.63 li
cp
f
46.6512 123.731 mo
47.2088 123.407 li
47.6502 123.736 48.003 124.329 48.0897 124.878 cv
47.5321 125.202 li
47.4455 124.653 47.0925 124.06 46.6512 123.731 cv
46.6512 123.731 li
cp
f
47.5321 125.202 mo
48.0897 124.878 li
48.1033 124.964 48.1104 125.049 48.1101 125.132 cv
48.1092 125.467 47.9909 125.703 47.8004 125.813 cv
47.2428 126.138 li
47.4333 126.027 47.5515 125.791 47.5525 125.457 cv
47.5527 125.374 47.5457 125.288 47.5321 125.202 cv
47.5321 125.202 li
cp
f
46.4976 123.63 mo
47.0811 123.966 47.5544 124.786 47.5525 125.457 cv
47.5506 126.13 47.0742 126.401 46.4907 126.065 cv
44.5409 124.939 li
44.1292 124.701 43.7763 124.224 43.6032 123.732 cv
42.2562 124.123 li
42.0173 123.618 li
43.4909 123.187 li
43.486 123.109 li
43.4879 122.438 43.9644 122.167 44.5478 122.504 cv
46.4976 123.63 li
cp
.00784314 .313726 .454902 rgb
f
25.8638 128.723 mo
25.8638 129.79 24.9984 130.156 23.9309 129.54 cv
23.8705 129.505 li
22.8029 128.889 21.9375 127.524 21.9375 126.456 cv
21.9375 126.456 li
21.9375 125.389 22.8029 125.023 23.8705 125.639 cv
23.9309 125.674 li
24.9984 126.29 25.8638 127.656 25.8638 128.723 cv
25.8638 128.723 li
cp
.00784314 .247059 .360784 rgb
f
24.8959 129.488 mo
24.6654 129.488 24.3926 129.401 24.1067 129.236 cv
24.0461 129.201 li
23.0936 128.651 22.2889 127.394 22.2889 126.456 cv
22.2889 126.107 22.3958 125.691 22.9054 125.691 cv
23.1358 125.691 23.4089 125.779 23.6948 125.944 cv
23.7554 125.979 li
24.7077 126.528 25.5123 127.785 25.5123 128.723 cv
25.5123 129.072 25.4054 129.488 24.8959 129.488 cv
cp
.992157 .721569 .0745098 rgb
f
38.1752 135.895 mo
38.1752 136.962 37.3098 137.328 36.2423 136.712 cv
36.1819 136.677 li
35.1144 136.06 34.249 134.695 34.249 133.628 cv
34.249 133.628 li
34.249 132.56 35.1144 132.195 36.1819 132.811 cv
36.2423 132.846 li
37.3098 133.462 38.1752 134.827 38.1752 135.895 cv
38.1752 135.895 li
cp
.00784314 .247059 .360784 rgb
f
37.2075 136.66 mo
36.977 136.66 36.704 136.572 36.418 136.407 cv
36.3575 136.372 li
35.4052 135.822 34.6005 134.566 34.6005 133.628 cv
34.6005 133.279 34.7074 132.863 35.2168 132.863 cv
35.4472 132.863 35.7203 132.95 36.0062 133.115 cv
36.0668 133.15 li
37.019 133.7 37.8237 134.957 37.8237 135.895 cv
37.8237 136.243 37.7168 136.66 37.2075 136.66 cv
cp
.992157 .721569 .0745098 rgb
f
33.6196 133.194 mo
33.6196 134.51 32.5528 134.961 31.2369 134.201 cv
28.8541 132.826 li
27.5382 132.066 26.4714 130.383 26.4714 129.067 cv
26.4714 129.067 li
26.4714 127.751 27.5382 127.3 28.8541 128.06 cv
31.2369 129.436 li
32.5528 130.196 33.6196 131.878 33.6196 133.194 cv
33.6196 133.194 li
cp
.760784 .760784 .760784 rgb
f
23.0215 387.192 mo
23.5945 386.859 li
23.7928 386.743 24.0676 386.759 24.3709 386.935 cv
23.7979 387.268 li
23.4945 387.092 23.2197 387.077 23.0215 387.192 cv
cp
.00784314 .380392 .54902 rgb
f
gsave
23.0215 387.192 mo
23.5945 386.859 li
23.7928 386.743 24.0676 386.759 24.3709 386.935 cv
23.7979 387.268 li
23.4945 387.092 23.2197 387.077 23.0215 387.192 cv
cp
clp
23.0215 387.192 mo
23.5945 386.859 li
23.7928 386.743 24.0676 386.759 24.3709 386.935 cv
23.7979 387.268 li
23.4945 387.092 23.2197 387.077 23.0215 387.192 cv
23.0215 387.192 li
cp
f
grestore
27.134 390.667 mo
26.5609 391 li
26.6404 390.953 26.7077 390.886 26.7595 390.8 cv
27.3327 390.467 li
27.2807 390.553 27.2135 390.621 27.134 390.667 cv
cp
f
gsave
27.134 390.667 mo
26.5609 391 li
26.6404 390.953 26.7077 390.886 26.7595 390.8 cv
27.3327 390.467 li
27.2807 390.553 27.2135 390.621 27.134 390.667 cv
cp
clp
26.7595 390.8 mo
27.3327 390.467 li
27.2807 390.553 27.2135 390.621 27.134 390.667 cv
26.5609 391 li
26.6404 390.953 26.7077 390.886 26.7595 390.8 cv
26.7595 390.8 li
cp
f
grestore
26.8831 390.301 mo
27.4563 389.968 li
27.4508 390.042 li
26.8778 390.375 li
26.8831 390.301 li
cp
f
23.7979 387.268 mo
24.3709 386.935 li
26.3722 388.09 li
25.7992 388.423 li
23.7979 387.268 li
cp
f
28.3847 392.563 mo
28.9578 392.23 li
28.7101 392.463 li
28.137 392.796 li
28.3847 392.563 li
cp
f
26.8778 390.375 mo
27.4508 390.042 li
28.9578 392.23 li
28.3847 392.563 li
26.8778 390.375 li
cp
f
25.7992 388.423 mo
26.3722 388.09 li
26.9743 388.438 27.4582 389.279 27.4563 389.968 cv
26.8831 390.301 li
26.8851 389.612 26.4013 388.771 25.7992 388.423 cv
cp
f
gsave
25.7992 388.423 mo
26.3722 388.09 li
26.9743 388.438 27.4582 389.279 27.4563 389.968 cv
26.8831 390.301 li
26.8851 389.612 26.4013 388.771 25.7992 388.423 cv
cp
clp
25.7992 388.423 mo
26.3722 388.09 li
26.4261 388.121 26.4792 388.156 26.531 388.195 cv
25.9579 388.528 li
25.9061 388.489 25.8531 388.454 25.7992 388.423 cv
25.7992 388.423 li
cp
f
25.9579 388.528 mo
26.531 388.195 li
26.9853 388.534 27.3462 389.142 27.4352 389.705 cv
26.862 390.038 li
26.7731 389.474 26.4123 388.867 25.9579 388.528 cv
25.9579 388.528 li
cp
f
26.862 390.038 mo
27.4352 389.705 li
27.4492 389.794 27.4565 389.882 27.4563 389.968 cv
26.8831 390.301 li
26.8835 390.215 26.8762 390.127 26.862 390.038 cv
26.862 390.038 li
cp
f
grestore
25.7992 388.423 mo
26.4013 388.771 26.8851 389.612 26.8831 390.301 cv
26.8778 390.375 li
28.3847 392.563 li
28.137 392.796 li
26.7595 390.8 li
26.5793 391.099 26.2151 391.17 25.792 390.926 cv
23.7907 389.77 li
23.1885 389.422 22.7022 388.58 22.7041 387.888 cv
22.7061 387.199 23.1956 386.92 23.7979 387.268 cv
25.7992 388.423 li
cp
.00784314 .313726 .454902 rgb
f
90.1629 391.953 mo
89.2489 391.422 88.0177 391.437 86.6485 392.102 cv
86.5006 392.174 86.3509 392.254 86.1999 392.341 cv
84.212 393.488 82.4706 395.693 81.4901 398.063 cv
80.9535 399.359 80.6449 400.706 80.6485 401.956 cv
80.6534 403.712 81.2734 404.948 82.2732 405.529 cv
86.0458 407.721 li
85.046 407.14 84.4261 405.905 84.4211 404.149 cv
84.4175 402.898 84.7263 401.552 85.2629 400.255 cv
86.2434 397.885 87.9846 395.681 89.9725 394.533 cv
90.1235 394.446 90.2732 394.367 90.4213 394.295 cv
91.7903 393.63 93.0217 393.614 93.9355 394.145 cv
90.1629 391.953 li
cp
.00392157 .109804 .168627 rgb
f
89.9725 394.533 mo
93.0484 392.757 95.5502 394.183 95.5602 397.717 cv
95.5703 401.252 93.0847 405.557 90.0088 407.333 cv
86.933 409.109 84.4311 407.683 84.4211 404.149 cv
84.4111 400.614 86.8967 396.309 89.9725 394.533 cv
cp
.00784314 .313726 .454902 rgb
f
89.9823 398.167 mo
91.4116 397.342 92.5743 398.004 92.5789 399.647 cv
92.5836 401.289 91.4285 403.29 89.9992 404.115 cv
88.5697 404.94 87.4071 404.278 87.4024 402.635 cv
87.3978 400.993 88.5528 398.992 89.9823 398.167 cv
cp
.760784 .760784 .760784 rgb
f
56.823 411.263 mo
55.909 410.732 54.6777 410.748 53.3086 411.412 cv
53.1606 411.484 53.011 411.564 52.86 411.651 cv
50.8721 412.799 49.1307 415.003 48.1502 417.373 cv
47.6136 418.67 47.305 420.016 47.3085 421.266 cv
47.3135 423.022 47.9335 424.258 48.9332 424.839 cv
52.7059 427.031 li
51.7061 426.45 51.0861 425.215 51.0812 423.459 cv
51.0776 422.209 51.3863 420.862 51.9229 419.565 cv
52.9033 417.195 54.6447 414.991 56.6326 413.843 cv
56.7836 413.756 56.9333 413.677 57.0813 413.605 cv
58.4504 412.94 59.6816 412.924 60.5956 413.455 cv
56.823 411.263 li
cp
.00392157 .109804 .168627 rgb
f
56.6326 413.844 mo
59.7085 412.068 62.2103 413.493 62.2203 417.028 cv
62.2303 420.562 59.7447 424.867 56.6689 426.643 cv
53.593 428.419 51.0912 426.993 51.0812 423.459 cv
51.0711 419.924 53.5567 415.619 56.6326 413.844 cv
cp
.00784314 .313726 .454902 rgb
f
56.6423 417.269 mo
58.0717 416.444 59.2343 417.107 59.239 418.749 cv
59.2436 420.391 58.0886 422.392 56.6591 423.217 cv
55.2298 424.043 54.0672 423.38 54.0625 421.738 cv
54.0579 420.095 55.2129 418.094 56.6423 417.269 cv
cp
.760784 .760784 .760784 rgb
f
43.0214 427.208 mo
23.1512 415.661 li
23.1345 404.102 li
43.0045 415.649 li
43.0214 427.208 li
cp
.00784314 .309804 .45098 rgb
f
44.9766 410.619 mo
25.1064 399.071 li
78.2337 367.328 li
98.1039 378.875 li
44.9766 410.619 li
cp
.188235 .168627 .188235 rgb
f
30.5378 384.025 mo
25.1065 399.071 li
25.1064 399.071 li
23.1344 404.102 li
43.0045 415.649 li
44.9766 410.619 li
44.9766 410.619 li
50.4079 395.572 li
30.5378 384.025 li
cp
.00784314 .443137 .639216 rgb
f
27.0756 399.786 mo
26.3054 399.339 25.9371 398.292 26.2572 397.461 cv
30.3325 386.878 li
30.6527 386.047 31.5448 385.733 32.315 386.181 cv
47.8002 395.18 li
48.5704 395.627 48.9561 396.68 48.6573 397.519 cv
44.8315 408.263 li
44.5327 409.103 43.658 409.423 42.8878 408.975 cv
27.0756 399.786 li
cp
.372549 .788235 .901961 rgb
f
50.4079 395.572 mo
30.5378 384.025 li
78.2001 355.446 li
98.0702 366.993 li
50.4079 395.572 li
cp
.00784314 .380392 .54902 rgb
f
98.0702 366.993 mo
50.4079 395.572 li
44.9766 410.619 li
98.1039 378.875 li
98.0702 366.993 li
cp
.00784314 .247059 .360784 rgb
f
56.2757 413.225 mo
57.2637 412.655 58.2245 412.366 59.1316 412.366 cv
61.0516 412.366 62.4078 413.639 62.8097 415.704 cv
98.1419 394.24 li
98.1252 384.651 li
98.1039 378.875 li
44.9766 410.619 li
43.0045 415.649 li
43.0214 427.208 li
50.3859 422.9 li
50.612 419.21 53.1132 415.051 56.2757 413.225 cv
cp
f
43.0214 427.208 mo
50.3859 422.9 li
50.4845 421.291 51.016 419.592 51.8462 418.037 cv
43.0155 423.177 li
43.0214 427.208 li
cp
1 .988235 .87451 rgb
f
60.905 412.807 mo
61.8744 413.346 62.547 414.354 62.8098 415.704 cv
98.1419 394.24 li
98.135 390.251 li
60.905 412.807 li
cp
f
23.1454 411.668 mo
23.1512 415.661 li
43.0214 427.208 li
43.0154 423.14 li
23.1454 411.668 li
cp
.862745 .862745 .862745 rgb
f
37.4501 420.246 mo
26.768 414.078 li
26.768 417.467 li
37.4501 423.664 li
37.4501 420.246 li
cp
.00392157 .109804 .168627 rgb
f
28.0031 410.877 mo
28.0031 412.143 26.9769 412.577 25.711 411.846 cv
25.6394 411.804 li
24.3735 411.073 23.3472 409.455 23.3472 408.189 cv
23.3472 408.189 li
23.3472 406.923 24.3735 406.489 25.6394 407.22 cv
25.711 407.261 li
26.9769 407.992 28.0031 409.611 28.0031 410.877 cv
28.0031 410.877 li
cp
.00784314 .247059 .360784 rgb
f
26.8554 411.784 mo
26.5821 411.784 26.2585 411.68 25.9195 411.485 cv
25.8476 411.443 li
24.7182 410.791 23.7639 409.301 23.7639 408.189 cv
23.7639 407.775 23.8907 407.282 24.4949 407.282 cv
24.7682 407.282 25.092 407.385 25.431 407.581 cv
25.5029 407.622 li
26.6321 408.275 27.5864 409.765 27.5864 410.877 cv
27.5864 411.291 27.4596 411.784 26.8554 411.784 cv
cp
.992157 .721569 .0745098 rgb
f
42.6024 419.381 mo
42.6024 420.647 41.5762 421.081 40.3103 420.35 cv
40.2387 420.309 li
38.9728 419.578 37.9466 417.959 37.9466 416.693 cv
37.9466 416.693 li
37.9466 415.427 38.9728 414.993 40.2387 415.724 cv
40.3103 415.766 li
41.5762 416.497 42.6024 418.115 42.6024 419.381 cv
42.6024 419.381 li
cp
.00784314 .247059 .360784 rgb
f
41.4549 420.288 mo
41.1816 420.288 40.8578 420.185 40.5187 419.989 cv
40.4469 419.948 li
39.3177 419.296 38.3634 417.805 38.3634 416.693 cv
38.3634 416.279 38.4902 415.786 39.0942 415.786 cv
39.3675 415.786 39.6913 415.89 40.0303 416.085 cv
40.1022 416.127 li
41.2314 416.779 42.1857 418.269 42.1857 419.381 cv
42.1857 419.795 42.0589 420.288 41.4549 420.288 cv
cp
.992157 .721569 .0745098 rgb
f
37.2002 416.179 mo
37.2002 417.74 35.9352 418.274 34.3747 417.373 cv
31.5492 415.742 li
29.9887 414.841 28.7237 412.846 28.7237 411.285 cv
28.7237 411.285 li
28.7237 409.725 29.9887 409.19 31.5492 410.091 cv
34.3747 411.722 li
35.9352 412.623 37.2002 414.619 37.2002 416.179 cv
37.2002 416.179 li
cp
.760784 .760784 .760784 rgb
f
63.0158 389.407 mo
63.7873 388.962 64.4206 389.327 64.4232 390.217 cv
64.4414 396.635 li
64.4439 397.526 63.8149 398.619 63.0436 399.065 cv
48.3319 407.566 li
47.5606 408.012 47.1759 407.691 47.477 406.853 cv
50.7695 397.686 li
51.0706 396.848 51.9482 395.797 52.7197 395.352 cv
63.0158 389.407 li
cp
.372549 .788235 .901961 rgb
f
47.1585 404.824 mo
47.8197 404.439 li
49.5672 403.928 li
48.9059 404.312 li
47.1585 404.824 li
cp
.00784314 .380392 .54902 rgb
f
49.2667 403.415 mo
49.928 403.031 li
50.1563 402.898 50.4724 402.917 50.8206 403.117 cv
50.1593 403.502 li
49.8111 403.301 49.495 403.282 49.2667 403.415 cv
49.2667 403.415 li
cp
f
50.1593 403.502 mo
50.8206 403.117 li
53.1328 404.453 li
52.4715 404.837 li
50.1593 403.502 li
cp
f
52.4715 404.837 mo
53.1328 404.453 li
53.1946 404.488 53.2554 404.529 53.3149 404.573 cv
52.6536 404.957 li
52.5941 404.913 52.5333 404.872 52.4715 404.837 cv
52.4715 404.837 li
cp
f
52.6536 404.957 mo
53.3149 404.573 li
53.8382 404.963 54.2566 405.666 54.3594 406.317 cv
53.6982 406.702 li
53.5954 406.05 53.1769 405.347 52.6536 404.957 cv
52.6536 404.957 li
cp
f
53.6982 406.702 mo
54.3594 406.317 li
54.3756 406.42 54.3839 406.521 54.3836 406.619 cv
54.3825 407.016 54.2423 407.295 54.0164 407.427 cv
53.3551 407.811 li
53.581 407.68 53.7212 407.401 53.7224 407.003 cv
53.7226 406.905 53.7143 406.804 53.6982 406.702 cv
53.6982 406.702 li
cp
f
52.4715 404.837 mo
53.1634 405.236 53.7246 406.208 53.7224 407.003 cv
53.7201 407.802 53.1552 408.124 52.4633 407.724 cv
50.1511 406.389 li
49.6629 406.108 49.2445 405.542 49.0391 404.958 cv
47.4418 405.422 li
47.1585 404.824 li
48.9059 404.312 li
48.9002 404.219 li
48.9024 403.424 49.4674 403.102 50.1593 403.502 cv
52.4715 404.837 li
cp
.00784314 .313726 .454902 rgb
f
255.467 114.507 mo
231.232 100.436 li
231.246 121.323 li
255.481 135.319 li
255.467 114.507 li
cp
.992157 .721569 .0745098 rgb
f
231.246 118.819 mo
231.251 128.592 li
255.486 142.663 li
255.481 132.815 li
231.246 118.819 li
cp
f
255.482 135.169 mo
255.481 132.815 li
231.246 118.819 li
231.247 121.173 li
255.482 135.169 li
cp
1 1 1 rgb
f
231.246 124.995 mo
231.251 128.592 li
255.486 142.663 li
255.481 138.991 li
231.246 124.995 li
cp
f
245.547 133.711 mo
238.447 129.611 li
238.447 132.323 li
245.547 136.446 li
245.547 133.711 li
cp
.00784314 .313726 .454902 rgb
f
273.01 122.585 mo
272.143 122.081 270.975 122.096 269.677 122.727 cv
269.537 122.795 269.395 122.87 269.252 122.953 cv
267.367 124.041 265.715 126.131 264.786 128.378 cv
264.277 129.608 263.984 130.885 263.987 132.07 cv
263.992 133.735 264.58 134.907 265.528 135.458 cv
269.106 137.537 li
268.157 136.986 267.57 135.814 267.565 134.149 cv
267.562 132.964 267.854 131.687 268.363 130.457 cv
269.293 128.21 270.944 126.12 272.829 125.032 cv
272.972 124.949 273.114 124.873 273.254 124.805 cv
274.553 124.175 275.72 124.16 276.587 124.664 cv
273.01 122.585 li
cp
.00392157 .109804 .168627 rgb
f
272.829 125.032 mo
275.746 123.348 278.118 124.7 278.128 128.051 cv
278.137 131.403 275.78 135.485 272.863 137.169 cv
269.947 138.853 267.574 137.501 267.565 134.149 cv
267.555 130.798 269.912 126.716 272.829 125.032 cv
cp
.00784314 .313726 .454902 rgb
f
272.838 128.28 mo
274.194 127.498 275.296 128.126 275.301 129.683 cv
275.305 131.241 274.21 133.138 272.854 133.921 cv
271.499 134.703 270.396 134.075 270.392 132.517 cv
270.388 130.96 271.483 129.063 272.838 128.28 cv
cp
.760784 .760784 .760784 rgb
f
320.03 95.4632 mo
319.164 94.9595 317.996 94.9744 316.698 95.6049 cv
316.557 95.673 316.416 95.7484 316.272 95.8311 cv
314.387 96.9194 312.736 99.0095 311.806 101.257 cv
311.298 102.487 311.005 103.763 311.008 104.949 cv
311.013 106.614 311.601 107.785 312.549 108.336 cv
316.126 110.415 li
315.178 109.864 314.59 108.693 314.586 107.028 cv
314.582 105.842 314.875 104.565 315.384 103.336 cv
316.314 101.089 317.965 98.9984 319.85 97.91 cv
319.993 97.8273 320.135 97.752 320.275 97.6838 cv
321.573 97.0534 322.741 97.0385 323.608 97.5421 cv
320.03 95.4632 li
cp
.00392157 .109804 .168627 rgb
f
319.85 97.9101 mo
322.767 96.2261 325.139 97.5781 325.148 100.929 cv
325.158 104.281 322.801 108.363 319.884 110.047 cv
316.968 111.731 314.595 110.379 314.586 107.028 cv
314.576 103.676 316.933 99.594 319.85 97.9101 cv
cp
.00784314 .313726 .454902 rgb
f
319.859 101.159 mo
321.214 100.376 322.317 101.004 322.321 102.562 cv
322.326 104.119 321.23 106.016 319.875 106.799 cv
318.52 107.581 317.417 106.953 317.413 105.396 cv
317.408 103.838 318.504 101.941 319.859 101.159 cv
cp
.760784 .760784 .760784 rgb
f
233.364 118.457 mo
232.638 118.031 232.043 116.993 232.042 116.151 cv
232.029 104.665 li
232.028 103.823 232.621 103.482 233.348 103.909 cv
253 115.445 li
253.727 115.871 254.322 116.909 254.323 117.751 cv
254.336 129.238 li
254.337 130.08 253.743 130.42 253.017 129.994 cv
233.364 118.457 li
cp
.00784314 .313726 .454902 rgb
f
253.609 129.871 mo
253.481 129.871 253.33 129.822 253.172 129.73 cv
233.519 118.193 li
232.885 117.821 232.349 116.885 232.348 116.15 cv
232.335 104.664 li
232.335 104.425 232.393 104.236 232.498 104.13 cv
232.565 104.063 232.649 104.031 232.755 104.031 cv
232.883 104.031 233.035 104.08 233.193 104.173 cv
252.845 115.709 li
253.479 116.081 254.016 117.017 254.016 117.752 cv
254.029 129.238 li
254.03 129.477 253.972 129.666 253.866 129.772 cv
253.799 129.839 253.715 129.871 253.609 129.871 cv
cp
.396078 .784314 .815686 rgb
f
235.749 127.013 mo
235.639 127.013 235.523 126.979 235.407 126.911 cv
232.526 125.237 li
232.154 125.021 231.863 124.515 231.863 124.085 cv
231.861 122.939 li
231.86 122.751 231.916 122.596 232.021 122.491 cv
232.107 122.404 232.22 122.358 232.348 122.358 cv
232.459 122.358 232.574 122.393 232.691 122.46 cv
235.571 124.135 li
235.943 124.35 236.235 124.856 236.235 125.286 cv
236.237 126.433 li
236.237 126.62 236.182 126.775 236.077 126.88 cv
235.99 126.967 235.877 127.013 235.749 127.013 cv
cp
.00784314 .313726 .454902 rgb
f
236.069 126.433 mo
236.07 126.801 235.81 126.951 235.491 126.766 cv
232.61 125.092 li
232.292 124.907 232.031 124.454 232.03 124.085 cv
232.028 122.939 li
232.028 122.57 232.288 122.42 232.606 122.605 cv
235.487 124.279 li
235.806 124.465 236.067 124.918 236.068 125.286 cv
236.069 126.433 li
cp
.443137 .811765 .952941 rgb
f
254.017 137.575 mo
253.906 137.575 253.79 137.54 253.674 137.473 cv
250.793 135.799 li
250.422 135.583 250.13 135.077 250.129 134.648 cv
250.128 133.501 li
250.127 133.313 250.183 133.158 250.288 133.053 cv
250.374 132.966 250.487 132.921 250.615 132.921 cv
250.726 132.921 250.841 132.955 250.957 133.023 cv
253.838 134.697 li
254.21 134.912 254.501 135.418 254.502 135.848 cv
254.504 136.995 li
254.504 137.182 254.449 137.337 254.344 137.442 cv
254.257 137.529 254.144 137.575 254.017 137.575 cv
cp
.00784314 .313726 .454902 rgb
f
254.336 136.995 mo
254.337 137.363 254.077 137.513 253.758 137.328 cv
250.877 135.654 li
250.559 135.469 250.298 135.016 250.297 134.647 cv
250.295 133.501 li
250.295 133.132 250.555 132.982 250.873 133.167 cv
253.754 134.842 li
254.073 135.027 254.334 135.48 254.335 135.848 cv
254.336 136.995 li
cp
.443137 .811765 .952941 rgb
f
255.486 114.507 mo
231.251 100.436 li
310.732 54.5515 li
334.967 68.6227 li
255.486 114.507 li
cp
1 .823529 .160784 rgb
f
334.967 68.6227 mo
255.486 114.507 li
255.486 142.663 li
326.899 101.447 li
335.022 94.516 li
334.967 68.6227 li
cp
.992157 .721569 .0745098 rgb
f
286.962 97.826 mo
267.61 109.001 li
267.61 123.985 li
286.962 112.809 li
286.962 97.826 li
cp
.00784314 .313726 .454902 rgb
f
267.916 109.177 mo
286.656 98.3564 li
286.656 112.632 li
267.916 123.454 li
267.916 109.177 li
cp
.396078 .784314 .815686 rgb
f
307.023 86.2114 mo
287.672 97.3861 li
287.672 112.37 li
307.023 101.194 li
307.023 86.2114 li
cp
.00784314 .313726 .454902 rgb
f
287.978 97.5628 mo
306.717 86.7417 li
306.717 101.018 li
287.978 111.84 li
287.978 97.5628 li
cp
.396078 .784314 .815686 rgb
f
334.501 70.3285 mo
317.777 79.9741 li
317.777 94.9555 li
327.211 89.5178 li
334.533 82.9576 li
334.501 70.3285 li
cp
.00784314 .313726 .454902 rgb
f
318.083 80.1508 mo
334.196 70.8582 li
334.226 82.8211 li
327.031 89.2685 li
318.083 94.4252 li
318.083 80.1508 li
cp
.396078 .784314 .815686 rgb
f
229.11 113.284 mo
229.708 112.937 li
229.707 113.105 229.648 113.224 229.552 113.28 cv
228.954 113.627 li
229.05 113.571 229.109 113.453 229.11 113.284 cv
229.11 113.284 li
cp
.584314 .584314 .584314 rgb
f
226.238 107.367 mo
226.836 107.02 li
226.912 106.975 227.011 106.971 227.122 107.012 cv
226.524 107.359 li
226.413 107.318 226.314 107.323 226.238 107.367 cv
226.238 107.367 li
cp
f
226.524 107.359 mo
227.122 107.012 li
227.153 107.023 227.184 107.038 227.217 107.057 cv
226.619 107.405 li
226.586 107.386 226.555 107.371 226.524 107.359 cv
226.524 107.359 li
cp
.666667 .666667 .666667 rgb
f
229.121 109.465 mo
229.719 109.118 li
229.708 112.937 li
229.11 113.284 li
229.121 109.465 li
cp
.556863 .556863 .556863 rgb
f
226.619 107.405 mo
227.217 107.057 li
229.184 108.193 li
228.586 108.54 li
226.619 107.405 li
cp
.666667 .666667 .666667 rgb
f
228.586 108.54 mo
229.184 108.193 li
229.354 108.291 229.506 108.47 229.604 108.668 cv
229.006 109.016 li
228.908 108.817 228.756 108.639 228.586 108.54 cv
228.586 108.54 li
cp
f
229.006 109.016 mo
229.604 108.668 li
229.676 108.815 229.719 108.973 229.719 109.118 cv
229.121 109.465 li
229.121 109.321 229.078 109.163 229.006 109.016 cv
229.006 109.016 li
cp
.584314 .584314 .584314 rgb
f
228.586 108.54 mo
228.882 108.711 229.122 109.125 229.121 109.465 cv
229.11 113.284 li
229.109 113.624 228.868 113.76 228.572 113.59 cv
226.605 112.454 li
226.309 112.283 226.07 111.87 226.071 111.53 cv
226.082 107.711 li
226.083 107.371 226.323 107.234 226.619 107.405 cv
228.586 108.54 li
cp
.94902 .94902 .94902 rgb
f
228.487 104.547 mo
227.89 104.199 li
231.591 102.063 li
232.188 102.41 li
228.487 104.547 li
cp
.858824 .858824 .858824 rgb
f
228.049 104.8 mo
227.452 104.452 li
227.89 104.199 li
228.487 104.547 li
228.049 104.8 li
cp
f
227.886 104.894 mo
227.288 104.547 li
227.452 104.452 li
228.049 104.8 li
227.886 104.894 li
cp
f
227.895 108.15 mo
227.298 107.803 li
227.288 104.547 li
227.886 104.894 li
227.895 108.15 li
cp
.533333 .533333 .533333 rgb
f
232.188 102.41 mo
232.19 103.1 li
228.489 105.237 li
228.497 107.803 li
227.895 108.15 li
227.886 104.894 li
228.049 104.8 li
228.487 104.547 li
232.188 102.41 li
cp
.772549 .772549 .772549 rgb
f
252.152 126.088 mo
252.75 125.74 li
252.749 125.909 252.69 126.027 252.594 126.083 cv
251.996 126.431 li
252.092 126.375 252.151 126.256 252.152 126.088 cv
252.152 126.088 li
cp
.584314 .584314 .584314 rgb
f
249.28 120.171 mo
249.878 119.823 li
249.954 119.779 250.053 119.774 250.164 119.815 cv
249.566 120.163 li
249.455 120.122 249.356 120.127 249.28 120.171 cv
249.28 120.171 li
cp
f
249.566 120.163 mo
250.164 119.815 li
250.194 119.827 250.226 119.842 250.259 119.861 cv
249.661 120.208 li
249.628 120.189 249.596 120.174 249.566 120.163 cv
249.566 120.163 li
cp
.666667 .666667 .666667 rgb
f
252.163 122.269 mo
252.76 121.921 li
252.75 125.74 li
252.152 126.088 li
252.163 122.269 li
cp
.556863 .556863 .556863 rgb
f
249.661 120.208 mo
250.259 119.861 li
252.226 120.996 li
251.628 121.344 li
249.661 120.208 li
cp
.666667 .666667 .666667 rgb
f
251.628 121.344 mo
252.226 120.996 li
252.396 121.095 252.548 121.273 252.645 121.472 cv
252.047 121.819 li
251.95 121.621 251.798 121.442 251.628 121.344 cv
251.628 121.344 li
cp
f
252.047 121.819 mo
252.645 121.472 li
252.718 121.619 252.761 121.777 252.76 121.921 cv
252.163 122.269 li
252.163 122.124 252.12 121.966 252.047 121.819 cv
252.047 121.819 li
cp
.584314 .584314 .584314 rgb
f
251.628 121.344 mo
251.924 121.515 252.163 121.929 252.163 122.269 cv
252.152 126.088 li
252.151 126.428 251.909 126.564 251.614 126.393 cv
249.646 125.257 li
249.35 125.087 249.112 124.673 249.113 124.333 cv
249.124 120.514 li
249.125 120.174 249.365 120.037 249.661 120.208 cv
251.628 121.344 li
cp
.94902 .94902 .94902 rgb
f
251.529 117.35 mo
250.932 117.003 li
254.632 114.867 li
255.23 115.214 li
251.529 117.35 li
cp
.858824 .858824 .858824 rgb
f
251.091 117.603 mo
250.493 117.256 li
250.932 117.003 li
251.529 117.35 li
251.091 117.603 li
cp
f
250.927 117.698 mo
250.33 117.35 li
250.493 117.256 li
251.091 117.603 li
250.927 117.698 li
cp
f
250.937 120.954 mo
250.339 120.606 li
250.33 117.35 li
250.927 117.698 li
250.937 120.954 li
cp
.533333 .533333 .533333 rgb
f
255.23 115.214 mo
255.232 115.904 li
251.531 118.04 li
251.538 120.606 li
250.937 120.954 li
250.927 117.698 li
251.091 117.603 li
251.529 117.35 li
255.23 115.214 li
cp
.772549 .772549 .772549 rgb
f
253.292 90.509 mo
244.4 94.9276 li
244.4 95.6505 li
263.495 106.735 li
263.495 96.0456 li
253.292 90.509 li
cp
.862745 .862745 .862745 rgb
f
263.495 96.0456 mo
263.495 106.735 li
272.387 101.594 li
272.387 100.871 li
263.495 96.0456 li
cp
.788235 .788235 .788235 rgb
f
244.4 94.9276 mo
253.292 89.786 li
272.387 100.871 li
263.495 106.012 li
244.4 94.9276 li
cp
1 1 1 rgb
f
301.215 62.3367 mo
292.323 66.7553 li
292.323 67.4783 li
311.418 78.5629 li
311.418 67.8733 li
301.215 62.3367 li
cp
.862745 .862745 .862745 rgb
f
311.418 67.8733 mo
311.418 78.5629 li
320.31 73.4213 li
320.31 72.6984 li
311.418 67.8733 li
cp
.788235 .788235 .788235 rgb
f
292.323 66.7553 mo
301.215 61.6138 li
320.31 72.6985 li
311.418 77.84 li
292.323 66.7553 li
cp
1 1 1 rgb
f
255.486 132.815 mo
255.486 142.663 li
326.899 101.447 li
335.022 94.516 li
335.006 86.9044 li
255.486 132.815 li
cp
.992157 .721569 .0745098 rgb
f
315.41 100.589 mo
335.011 89.2718 li
335.006 86.9044 li
315.41 98.2182 li
315.41 100.589 li
cp
1 1 1 rgb
f
310.72 100.926 mo
264.389 127.675 li
264.389 130.045 li
310.72 103.296 li
310.72 100.926 li
cp
f
260.347 130.008 mo
255.486 132.815 li
255.486 135.185 li
260.347 132.379 li
260.347 130.008 li
cp
f
256.734 115.267 mo
261.615 112.449 li
261.615 137.905 li
256.734 140.723 li
256.734 115.267 li
cp
.00784314 .313726 .454902 rgb
f
261.348 112.913 mo
257.002 115.422 li
257.002 140.259 li
261.348 137.75 li
261.348 112.913 li
cp
.396078 .784314 .815686 rgb
f
262.019 112.216 mo
266.515 109.62 li
266.515 135.076 li
262.019 137.672 li
262.019 112.216 li
cp
.00784314 .313726 .454902 rgb
f
262.287 112.371 mo
262.287 137.208 li
266.248 134.921 li
266.248 110.085 li
262.287 112.371 li
cp
.396078 .784314 .815686 rgb
f
307.527 85.9548 mo
312.408 83.1369 li
312.408 108.593 li
307.527 111.411 li
307.527 85.9548 li
cp
.00784314 .313726 .454902 rgb
f
312.14 83.6011 mo
307.795 86.1096 li
307.795 110.947 li
312.14 108.438 li
312.14 83.6011 li
cp
.396078 .784314 .815686 rgb
f
312.811 82.9043 mo
317.308 80.3081 li
317.308 105.764 li
312.811 108.36 li
312.811 82.9043 li
cp
.00784314 .313726 .454902 rgb
f
313.079 83.059 mo
313.079 107.896 li
317.04 105.609 li
317.04 80.7723 li
313.079 83.059 li
cp
.396078 .784314 .815686 rgb
f
239.124 130.757 mo
239.439 130.726 li
239.942 131.017 li
239.942 132.938 li
239.433 132.644 li
239.433 131.206 li
239.124 131.08 li
239.124 130.757 li
cp
1 1 1 rgb
f
240.822 132.989 mo
240.932 133.053 li
241.019 133.103 241.079 133.127 241.079 132.986 cv
241.079 132.282 li
241.079 132.162 241.024 132.098 240.953 132.057 cv
240.804 131.971 li
240.667 131.892 240.673 132.013 240.673 132.048 cv
240.673 132.748 li
240.673 132.895 240.764 132.956 240.822 132.989 cv
cp
240.163 131.675 mo
240.163 131.334 240.344 131.249 240.673 131.439 cv
241.103 131.687 li
241.483 131.907 241.588 132.199 241.588 132.471 cv
241.588 133.385 li
241.588 133.697 241.415 133.788 241.1 133.607 cv
240.67 133.358 li
240.329 133.161 240.163 132.877 240.163 132.562 cv
240.163 131.675 li
cp
f
241.749 132.113 mo
241.965 132.19 242.169 132.277 242.547 132.495 cv
242.957 132.731 243.146 133.103 243.146 133.47 cv
243.146 133.832 242.757 133.96 242.594 134.013 cv
243.146 134.331 li
243.146 134.788 li
241.77 133.993 li
241.77 133.553 li
241.983 133.534 242.636 133.381 242.636 133.184 cv
242.636 133.024 242.55 132.956 242.337 132.833 cv
241.749 132.493 li
241.749 132.113 li
cp
f
243.918 134.084 mo
244.186 134.238 li
244.186 133.96 244.146 133.898 243.975 133.8 cv
243.931 133.774 li
243.844 133.724 243.818 133.732 243.818 133.829 cv
243.818 133.882 li
243.818 133.995 243.821 134.028 243.918 134.084 cv
cp
243.309 133.428 mo
243.309 133.087 243.506 133.072 243.81 133.248 cv
244.172 133.457 li
244.492 133.641 244.695 133.942 244.695 134.768 cv
244.695 135.464 244.477 135.522 244.243 135.424 cv
243.981 135.314 243.616 135.059 243.372 134.866 cv
243.372 134.477 li
243.947 134.809 li
244.186 134.947 244.186 134.805 244.186 134.614 cv
244.088 134.607 244.004 134.564 243.784 134.437 cv
243.401 134.216 243.309 133.953 243.309 133.667 cv
243.309 133.428 li
cp
f
50.3261 229.237 mo
49.4738 228.742 48.3256 228.757 47.0489 229.376 cv
46.9108 229.443 46.7713 229.518 46.6305 229.599 cv
44.7768 230.669 43.1529 232.725 42.2386 234.934 cv
41.7382 236.144 41.4504 237.4 41.4537 238.566 cv
41.4583 240.203 42.0365 241.355 42.9687 241.897 cv
46.4869 243.941 li
45.5545 243.399 44.9764 242.247 44.9718 240.61 cv
44.9685 239.444 45.2563 238.189 45.7567 236.979 cv
46.671 234.769 48.2948 232.714 50.1485 231.643 cv
50.2894 231.562 50.429 231.488 50.5669 231.421 cv
51.8436 230.801 52.9918 230.786 53.8441 231.282 cv
50.3261 229.237 li
cp
.00392157 .109804 .168627 rgb
f
50.1485 231.643 mo
53.0169 229.987 55.3498 231.317 55.3591 234.613 cv
55.3685 237.909 53.0506 241.923 50.1824 243.579 cv
47.3141 245.235 44.9811 243.906 44.9718 240.61 cv
44.9624 237.314 47.2802 233.299 50.1485 231.643 cv
cp
.00784314 .313726 .454902 rgb
f
50.1576 234.838 mo
51.4906 234.068 52.5747 234.686 52.579 236.218 cv
52.5834 237.749 51.5063 239.615 50.1733 240.385 cv
48.8404 241.154 47.7563 240.536 47.7519 239.005 cv
47.7476 237.473 48.8247 235.608 50.1576 234.838 cv
cp
.760784 .760784 .760784 rgb
f
97.1775 202.483 mo
96.3252 201.987 95.1771 202.002 93.9003 202.622 cv
93.7623 202.689 93.6228 202.763 93.482 202.844 cv
91.6282 203.915 90.0044 205.97 89.0901 208.18 cv
88.5897 209.389 88.3019 210.645 88.3051 211.811 cv
88.3098 213.448 88.8879 214.6 89.8202 215.142 cv
93.3383 217.187 li
92.406 216.645 91.8278 215.493 91.8233 213.855 cv
91.8199 212.69 92.1077 211.434 92.6081 210.224 cv
93.5224 208.014 95.1462 205.959 97 204.889 cv
97.1408 204.807 97.2804 204.733 97.4184 204.666 cv
98.6951 204.046 99.8433 204.032 100.695 204.527 cv
97.1775 202.483 li
cp
.00392157 .109804 .168627 rgb
f
97 204.889 mo
99.8683 203.233 102.201 204.562 102.211 207.858 cv
102.22 211.154 99.9021 215.169 97.0338 216.825 cv
94.1655 218.481 91.8326 217.151 91.8233 213.855 cv
91.8138 210.559 94.1317 206.545 97 204.889 cv
cp
.00784314 .313726 .454902 rgb
f
97.009 208.083 mo
98.342 207.314 99.4261 207.932 99.4305 209.463 cv
99.4348 210.995 98.3577 212.861 97.0247 213.63 cv
95.6918 214.4 94.6077 213.782 94.6034 212.25 cv
94.599 210.719 95.6761 208.853 97.009 208.083 cv
cp
.760784 .760784 .760784 rgb
f
35.8424 246.045 mo
10.4799 231.323 li
10.4598 221.868 li
35.8222 236.589 li
35.8424 246.045 li
cp
.886275 .321569 .356863 rgb
f
35.8222 236.589 mo
10.4598 221.868 li
13.0075 203.445 li
38.37 218.167 li
35.8222 236.589 li
cp
.996078 .756863 .0666667 rgb
f
11.767 221.231 mo
13.9572 205.394 li
37.0626 218.804 li
34.8725 234.641 li
11.767 221.231 li
cp
.00784314 .313726 .454902 rgb
f
12.0937 221.071 mo
14.1944 205.881 li
36.7358 218.963 li
34.6352 234.153 li
12.0937 221.071 li
cp
.333333 .839216 .823529 rgb
f
38.37 218.167 mo
13.0075 203.445 li
87.2107 160.604 li
112.573 175.326 li
38.37 218.167 li
cp
1 .823529 .160784 rgb
f
112.573 175.326 mo
112.631 199.828 li
106.125 205.467 li
35.8424 246.045 li
35.8222 236.589 li
38.37 218.167 li
112.573 175.326 li
cp
.921569 .67451 .0666667 rgb
f
35.8222 236.589 mo
35.8424 246.045 li
106.125 205.467 li
112.631 199.828 li
112.612 192.401 li
35.8222 236.589 li
cp
.843137 .176471 .211765 rgb
f
91.6348 188.46 mo
74.8374 198.158 li
74.8374 211.552 li
91.6348 201.854 li
91.6348 188.46 li
cp
.00784314 .313726 .454902 rgb
f
75.1391 198.332 mo
91.3328 188.983 li
91.3328 201.68 li
75.1391 211.029 li
75.1391 198.332 li
cp
.333333 .839216 .823529 rgb
f
92.8559 201.149 mo
111.71 190.264 li
111.672 176.892 li
92.8559 187.755 li
92.8559 201.149 li
cp
.00784314 .313726 .454902 rgb
f
93.1578 187.93 mo
111.371 177.414 li
111.407 190.09 li
93.1578 200.626 li
93.1578 187.93 li
cp
.333333 .839216 .823529 rgb
f
54.3325 209.997 mo
39.2064 218.73 li
37.1933 233.286 li
54.3325 223.391 li
54.3325 209.997 li
cp
.00784314 .313726 .454902 rgb
f
39.4854 218.917 mo
54.0307 210.52 li
54.0307 223.216 li
37.577 232.716 li
39.4854 218.917 li
cp
.333333 .839216 .823529 rgb
f
55.5536 222.686 mo
73.6163 212.257 li
73.6163 198.863 li
55.5536 209.292 li
55.5536 222.686 li
cp
.00784314 .313726 .454902 rgb
f
55.8554 209.466 mo
73.3145 199.386 li
73.3145 212.083 li
55.8554 222.163 li
55.8554 209.466 li
cp
.333333 .839216 .823529 rgb
f
10.9532 215.571 mo
11.4921 215.258 li
11.4916 215.41 11.438 215.516 11.3514 215.567 cv
10.8125 215.88 li
10.8991 215.83 10.9528 215.723 10.9532 215.571 cv
10.9532 215.571 li
cp
.839216 .117647 .164706 rgb
f
8.36489 210.238 mo
8.90379 209.925 li
8.99149 209.874 9.11289 209.881 9.24709 209.959 cv
8.70819 210.272 li
8.574 210.195 8.45259 210.187 8.36489 210.238 cv
cp
f
gsave
8.36489 210.238 mo
8.90379 209.925 li
8.99149 209.874 9.11289 209.881 9.24709 209.959 cv
8.70819 210.272 li
8.574 210.195 8.45259 210.187 8.36489 210.238 cv
cp
clp
8.36489 210.238 mo
8.90379 209.925 li
8.97239 209.885 9.06159 209.881 9.16149 209.918 cv
8.62259 210.231 li
8.52269 210.194 8.43349 210.199 8.36489 210.238 cv
8.36489 210.238 li
cp
f
8.62259 210.231 mo
9.16149 209.918 li
9.18919 209.928 9.21789 209.942 9.24709 209.959 cv
8.70819 210.272 li
8.679 210.255 8.65039 210.242 8.62259 210.231 cv
8.62259 210.231 li
cp
f
grestore
10.9629 212.129 mo
11.5018 211.816 li
11.4921 215.258 li
10.9532 215.571 li
10.9629 212.129 li
cp
f
8.70819 210.272 mo
9.24709 209.959 li
11.0201 210.982 li
10.4812 211.296 li
8.70819 210.272 li
cp
f
10.4812 211.296 mo
11.0201 210.982 li
11.2867 211.136 11.5027 211.51 11.5018 211.816 cv
10.9629 212.129 li
10.9638 211.823 10.7478 211.45 10.4812 211.296 cv
cp
f
gsave
10.4812 211.296 mo
11.0201 210.982 li
11.2867 211.136 11.5027 211.51 11.5018 211.816 cv
10.9629 212.129 li
10.9638 211.823 10.7478 211.45 10.4812 211.296 cv
cp
clp
10.4812 211.296 mo
11.0201 210.982 li
11.1734 211.071 11.3099 211.232 11.3982 211.411 cv
10.8593 211.724 li
10.771 211.545 10.6345 211.384 10.4812 211.296 cv
10.4812 211.296 li
cp
f
10.8593 211.724 mo
11.3982 211.411 li
11.4634 211.543 11.5022 211.686 11.5018 211.816 cv
10.9629 212.129 li
10.9633 211.999 10.9245 211.857 10.8593 211.724 cv
10.8593 211.724 li
cp
f
grestore
10.4812 211.296 mo
10.7478 211.45 10.9638 211.823 10.9629 212.129 cv
10.9532 215.571 li
10.9523 215.877 10.7349 216 10.4683 215.846 cv
8.69529 214.822 li
8.42869 214.669 8.21369 214.296 8.21449 213.99 cv
8.22429 210.548 li
8.22509 210.242 8.44159 210.118 8.70819 210.272 cv
10.4812 211.296 li
cp
.886275 .321569 .356863 rgb
f
10.3922 207.696 mo
9.85379 207.383 li
13.1887 205.458 li
13.7271 205.771 li
10.3922 207.696 li
cp
.886275 .435294 .462745 rgb
f
9.99719 207.924 mo
9.45879 207.611 li
9.85379 207.383 li
10.3922 207.696 li
9.99719 207.924 li
cp
f
9.84989 208.009 mo
9.31149 207.697 li
9.45879 207.611 li
9.99719 207.924 li
9.84989 208.009 li
cp
f
9.85819 210.944 mo
9.31979 210.631 li
9.31149 207.697 li
9.84989 208.009 li
9.85819 210.944 li
cp
.886275 .321569 .356863 rgb
f
13.7271 205.771 mo
13.7288 206.393 li
10.394 208.318 li
10.4005 210.631 li
9.85819 210.944 li
9.84989 208.009 li
9.99719 207.924 li
10.3922 207.696 li
13.7271 205.771 li
cp
.839216 .227451 .266667 rgb
f
35.0435 229.728 mo
35.5824 229.414 li
35.582 229.566 35.5283 229.673 35.4418 229.723 cv
34.9029 230.036 li
34.9894 229.986 35.0431 229.879 35.0435 229.728 cv
35.0435 229.728 li
cp
.839216 .117647 .164706 rgb
f
32.4553 224.395 mo
32.9942 224.082 li
33.0627 224.042 33.152 224.038 33.2518 224.075 cv
32.7129 224.388 li
32.6131 224.351 32.5239 224.355 32.4553 224.395 cv
32.4553 224.395 li
cp
f
32.7129 224.388 mo
33.2518 224.075 li
33.2796 224.085 33.3082 224.099 33.3374 224.115 cv
32.7985 224.429 li
32.7693 224.412 32.7407 224.398 32.7129 224.388 cv
32.7129 224.388 li
cp
f
35.0533 226.286 mo
35.5922 225.972 li
35.5824 229.414 li
35.0435 229.728 li
35.0533 226.286 li
cp
f
32.7985 224.429 mo
33.3374 224.115 li
35.1105 225.139 li
34.5716 225.452 li
32.7985 224.429 li
cp
f
34.5716 225.452 mo
35.1105 225.139 li
35.2637 225.228 35.4003 225.389 35.4885 225.568 cv
34.9496 225.881 li
34.8614 225.702 34.7248 225.541 34.5716 225.452 cv
34.5716 225.452 li
cp
f
34.9496 225.881 mo
35.4885 225.568 li
35.5537 225.7 35.5926 225.842 35.5922 225.972 cv
35.0533 226.286 li
35.0537 226.155 35.0148 226.013 34.9496 225.881 cv
34.9496 225.881 li
cp
f
34.5716 225.452 mo
34.8381 225.606 35.0542 225.979 35.0533 226.286 cv
35.0435 229.728 li
35.0427 230.034 34.8252 230.157 34.5587 230.003 cv
32.7856 228.979 li
32.5191 228.825 32.304 228.453 32.3049 228.146 cv
32.3146 224.704 li
32.3155 224.398 32.532 224.275 32.7985 224.429 cv
34.5716 225.452 li
cp
.886275 .321569 .356863 rgb
f
34.4826 221.853 mo
33.9442 221.54 li
37.2791 219.615 li
37.8174 219.928 li
34.4826 221.853 li
cp
.886275 .435294 .462745 rgb
f
34.0875 222.081 mo
33.5492 221.768 li
33.9442 221.54 li
34.4826 221.853 li
34.0875 222.081 li
cp
f
33.9402 222.166 mo
33.4019 221.853 li
33.5492 221.768 li
34.0875 222.081 li
33.9402 222.166 li
cp
f
33.9485 225.1 mo
33.4102 224.788 li
33.4019 221.853 li
33.9402 222.166 li
33.9485 225.1 li
cp
.886275 .321569 .356863 rgb
f
37.8174 219.928 mo
37.8192 220.55 li
34.4843 222.475 li
34.4909 224.787 li
33.9485 225.1 li
33.9402 222.166 li
34.0875 222.081 li
34.4826 221.853 li
37.8174 219.928 li
cp
.839216 .227451 .266667 rgb
f
15.6936 233.588 mo
15.5126 233.588 15.323 233.531 15.1296 233.42 cv
11.7774 231.509 li
11.2255 231.191 10.7945 230.5 10.7945 229.937 cv
10.7945 227.903 li
10.7945 227.425 11.0922 227.211 11.3877 227.211 cv
11.6058 227.211 11.8497 227.322 12.0926 227.531 cv
15.5229 230.887 li
16.0159 231.31 16.413 232.077 16.413 232.621 cv
16.413 232.807 li
16.413 233.267 16.117 233.588 15.6936 233.588 cv
cp
.843137 .176471 .211765 rgb
f
16.1112 232.807 mo
16.1112 233.264 15.7374 233.422 15.2806 233.158 cv
11.9269 231.247 li
11.4701 230.983 11.0963 230.394 11.0963 229.937 cv
11.0963 227.903 li
11.0963 227.446 11.456 227.382 11.8956 227.76 cv
15.3119 231.103 li
15.7515 231.481 16.1112 232.164 16.1112 232.621 cv
16.1112 232.807 li
cp
1 .823529 .160784 rgb
f
34.2683 244.104 mo
34.0876 244.104 33.8977 244.048 33.7046 243.936 cv
30.1036 241.865 li
29.5529 241.546 29.1218 240.856 29.1218 240.293 cv
29.1218 240.107 li
29.1218 239.568 29.4939 239.177 30.0063 239.177 cv
30.1054 239.177 30.2071 239.192 30.3085 239.222 cv
33.9443 239.927 li
34.5419 240.102 34.988 240.697 34.988 241.29 cv
34.988 243.324 li
34.988 243.783 34.692 244.104 34.2683 244.104 cv
cp
.843137 .176471 .211765 rgb
f
34.6861 243.324 mo
34.6861 243.78 34.3124 243.938 33.8555 243.674 cv
30.2543 241.603 li
29.7975 241.339 29.4237 240.75 29.4237 240.293 cv
29.4237 240.107 li
29.4237 239.65 29.7834 239.382 30.223 239.512 cv
33.8868 240.223 li
34.3264 240.353 34.6861 240.833 34.6861 241.29 cv
34.6861 243.324 li
cp
1 .823529 .160784 rgb
f
33.8948 195.489 mo
25.8814 199.471 li
25.8814 200.123 li
43.09 210.113 li
43.09 200.479 li
33.8948 195.489 li
cp
.862745 .862745 .862745 rgb
f
43.09 200.479 mo
43.09 210.113 li
51.1036 205.479 li
51.1036 204.827 li
43.09 200.479 li
cp
.788235 .788235 .788235 rgb
f
25.8814 199.471 mo
33.8948 194.838 li
51.1036 204.827 li
43.09 209.461 li
25.8814 199.471 li
cp
1 1 1 rgb
f
77.5256 170.221 mo
69.5122 174.203 li
69.5122 174.854 li
86.7209 184.844 li
86.7209 175.21 li
77.5256 170.221 li
cp
.862745 .862745 .862745 rgb
f
86.7209 175.21 mo
86.7209 184.844 li
94.7344 180.21 li
94.7344 179.559 li
86.7209 175.21 li
cp
.788235 .788235 .788235 rgb
f
69.5122 174.203 mo
77.5256 169.569 li
94.7344 179.559 li
86.7208 184.192 li
69.5122 174.203 li
cp
1 1 1 rgb
f
354.13 201.371 mo
354.713 201.033 li
354.914 200.916 355.193 200.932 355.501 201.11 cv
354.919 201.449 li
354.611 201.271 354.332 201.254 354.13 201.371 cv
cp
.709804 .709804 .709804 rgb
f
gsave
354.13 201.371 mo
354.713 201.033 li
354.914 200.916 355.193 200.932 355.501 201.11 cv
354.919 201.449 li
354.611 201.271 354.332 201.254 354.13 201.371 cv
cp
clp
354.13 201.371 mo
354.713 201.033 li
354.914 200.916 355.193 200.932 355.501 201.11 cv
354.919 201.449 li
354.611 201.271 354.332 201.254 354.13 201.371 cv
354.13 201.371 li
cp
f
grestore
358.309 204.902 mo
357.727 205.24 li
357.807 205.193 357.876 205.125 357.928 205.037 cv
358.511 204.699 li
358.458 204.787 358.39 204.855 358.309 204.902 cv
cp
f
gsave
358.309 204.902 mo
357.727 205.24 li
357.807 205.193 357.876 205.125 357.928 205.037 cv
358.511 204.699 li
358.458 204.787 358.39 204.855 358.309 204.902 cv
cp
clp
357.928 205.037 mo
358.511 204.699 li
358.458 204.787 358.39 204.855 358.309 204.902 cv
357.727 205.24 li
357.807 205.193 357.876 205.125 357.928 205.037 cv
357.928 205.037 li
cp
f
grestore
358.054 204.53 mo
358.636 204.192 li
358.631 204.268 li
358.048 204.606 li
358.054 204.53 li
cp
f
354.919 201.449 mo
355.501 201.11 li
357.535 202.284 li
356.953 202.622 li
354.919 201.449 li
cp
f
359.579 206.829 mo
360.162 206.49 li
359.91 206.727 li
359.328 207.066 li
359.579 206.829 li
cp
.00784314 .380392 .54902 rgb
f
358.048 204.606 mo
358.631 204.268 li
360.162 206.49 li
359.579 206.829 li
358.048 204.606 li
cp
.709804 .709804 .709804 rgb
f
356.953 202.622 mo
357.535 202.284 li
358.147 202.637 358.638 203.492 358.636 204.192 cv
358.054 204.53 li
358.056 203.83 357.564 202.976 356.953 202.622 cv
cp
f
gsave
356.953 202.622 mo
357.535 202.284 li
358.147 202.637 358.638 203.492 358.636 204.192 cv
358.054 204.53 li
358.056 203.83 357.564 202.976 356.953 202.622 cv
cp
clp
356.953 202.622 mo
357.535 202.284 li
357.59 202.316 357.643 202.352 357.696 202.391 cv
357.114 202.729 li
357.061 202.69 357.007 202.654 356.953 202.622 cv
356.953 202.622 li
cp
f
357.114 202.729 mo
357.696 202.391 li
358.158 202.735 358.524 203.352 358.615 203.925 cv
358.032 204.263 li
357.942 203.691 357.576 203.073 357.114 202.729 cv
357.114 202.729 li
cp
f
358.032 204.263 mo
358.615 203.925 li
358.629 204.015 358.636 204.105 358.636 204.192 cv
358.054 204.53 li
358.054 204.443 358.047 204.354 358.032 204.263 cv
358.032 204.263 li
cp
f
grestore
356.953 202.622 mo
357.564 202.976 358.056 203.83 358.054 204.53 cv
358.048 204.606 li
359.579 206.829 li
359.328 207.066 li
357.928 205.037 li
357.745 205.342 357.375 205.413 356.945 205.165 cv
354.912 203.991 li
354.3 203.638 353.806 202.782 353.808 202.079 cv
353.81 201.379 354.307 201.095 354.919 201.449 cv
356.953 202.622 li
cp
.933333 .929412 .882353 rgb
f
424.581 207.885 mo
423.801 207.432 422.751 207.445 421.584 208.012 cv
421.457 208.074 421.33 208.142 421.201 208.216 cv
419.505 209.195 418.02 211.075 417.184 213.096 cv
416.726 214.202 416.463 215.351 416.466 216.417 cv
416.47 217.915 416.999 218.968 417.852 219.464 cv
421.07 221.334 li
420.217 220.838 419.688 219.784 419.684 218.287 cv
419.681 217.221 419.944 216.072 420.402 214.966 cv
421.238 212.945 422.723 211.065 424.419 210.086 cv
424.547 210.012 424.675 209.944 424.801 209.882 cv
425.969 209.315 427.019 209.302 427.799 209.755 cv
424.581 207.885 li
cp
.00392157 .109804 .168627 rgb
f
424.419 210.086 mo
427.042 208.571 429.176 209.787 429.184 212.802 cv
429.193 215.816 427.073 219.488 424.45 221.003 cv
421.826 222.517 419.692 221.301 419.684 218.287 cv
419.675 215.272 421.795 211.6 424.419 210.086 cv
cp
.760784 .760784 .760784 rgb
f
424.419 210.086 mo
427.042 208.571 429.176 209.787 429.184 212.802 cv
429.193 215.816 427.073 219.488 424.45 221.003 cv
421.826 222.517 419.692 221.301 419.684 218.287 cv
419.675 215.272 421.795 211.6 424.419 210.086 cv
cp
.00784314 .313726 .454902 rgb
f
424.427 213.008 mo
425.646 212.304 426.638 212.869 426.642 214.27 cv
426.646 215.671 425.66 217.377 424.441 218.081 cv
423.222 218.785 422.231 218.22 422.227 216.819 cv
422.223 215.418 423.208 213.712 424.427 213.008 cv
cp
.760784 .760784 .760784 rgb
f
384.214 230.771 mo
383.435 230.318 382.385 230.332 381.217 230.899 cv
381.091 230.96 380.963 231.028 380.834 231.102 cv
379.139 232.081 377.654 233.961 376.817 235.982 cv
376.36 237.089 376.096 238.237 376.099 239.303 cv
376.104 240.801 376.632 241.855 377.485 242.35 cv
380.703 244.22 li
379.85 243.725 379.321 242.671 379.317 241.173 cv
379.314 240.107 379.577 238.959 380.035 237.852 cv
380.871 235.831 382.356 233.951 384.052 232.972 cv
384.181 232.898 384.308 232.83 384.435 232.769 cv
385.602 232.202 386.652 232.188 387.432 232.641 cv
384.214 230.771 li
cp
.00392157 .109804 .168627 rgb
f
384.052 232.972 mo
386.675 231.458 388.809 232.674 388.818 235.688 cv
388.826 238.703 386.706 242.374 384.083 243.889 cv
381.459 245.404 379.326 244.188 379.317 241.173 cv
379.308 238.159 381.428 234.487 384.052 232.972 cv
cp
.760784 .760784 .760784 rgb
f
384.052 232.972 mo
386.675 231.458 388.809 232.674 388.818 235.688 cv
388.826 238.703 386.706 242.374 384.083 243.889 cv
381.459 245.404 379.326 244.188 379.317 241.173 cv
379.308 238.159 381.428 234.487 384.052 232.972 cv
cp
.00784314 .313726 .454902 rgb
f
384.06 235.894 mo
385.279 235.19 386.271 235.755 386.275 237.156 cv
386.279 238.557 385.294 240.264 384.074 240.967 cv
382.855 241.671 381.864 241.106 381.86 239.705 cv
381.856 238.304 382.841 236.598 384.06 235.894 cv
cp
.760784 .760784 .760784 rgb
f
435.003 196.705 mo
435.003 208.548 li
370.165 246.045 li
370.165 238.201 li
382.432 227.51 li
411.827 210.428 li
435.003 196.705 li
cp
.933333 .282353 .211765 rgb
f
370.165 238.201 mo
370.165 246.045 li
340.114 228.644 li
340.114 220.922 li
370.165 238.201 li
cp
.74902 .223529 .168627 rgb
f
370.165 242.99 mo
370.165 246.045 li
340.114 228.644 li
340.114 225.712 li
370.165 242.99 li
cp
.862745 .870588 .866667 rgb
f
386.007 218.425 mo
387.327 219.986 388.634 221.556 389.945 223.122 cv
403.359 215.349 li
435.003 196.705 li
405.593 179.725 li
369.345 200.86 li
374.908 206.025 381.106 212.631 386.007 218.425 cv
cp
.996078 .4 .388235 rgb
f
431.786 196.717 mo
405.628 181.615 li
376.285 200.267 li
401.176 214.638 li
431.786 196.717 li
cp
.439216 .196078 .160784 rgb
f
375.241 199.245 mo
378.98 201.404 li
405.539 186.207 li
405.539 181.672 li
375.241 199.245 li
cp
.709804 .258824 .192157 rgb
f
405.628 181.615 mo
405.539 181.672 li
405.539 186.207 li
405.628 186.15 li
427.885 199.001 li
431.786 196.717 li
405.628 181.615 li
cp
.54902 .196078 .141176 rgb
f
387.499 221.136 mo
382.668 215.304 377.653 209.601 372.216 204.323 cv
371.466 203.595 370.704 202.878 369.939 202.165 cv
355.253 211.408 li
340.114 220.922 li
370.165 238.201 li
382.458 227.51 li
389.404 223.439 li
388.769 222.672 388.135 221.904 387.499 221.136 cv
cp
.996078 .372549 .356863 rgb
f
395.451 216.686 mo
391.287 212.61 387.547 208.133 383.523 203.923 cv
381.851 202.173 380.136 200.456 378.332 198.841 cv
373.305 201.995 li
374.448 203.178 375.541 204.409 376.591 205.674 cv
379.988 209.768 383.082 214.112 386.63 218.08 cv
387.628 219.196 388.634 220.303 389.648 221.405 cv
396.295 217.497 li
396.014 217.227 395.73 216.959 395.451 216.686 cv
cp
.439216 .196078 .160784 rgb
f
389.476 211.475 mo
364.989 197.283 li
355.274 211.387 li
382.458 227.51 li
389.476 211.475 li
cp
.996078 .4 .388235 rgb
f
388.181 211.941 mo
365.361 198.717 li
356.723 211.01 li
382.22 225.805 li
388.181 211.941 li
cp
.584314 .156863 .105882 rgb
f
357.191 210.908 mo
365.455 199.146 li
387.77 212.077 li
382.067 225.342 li
357.191 210.908 li
cp
.333333 .839216 .823529 rgb
f
403.359 203.366 mo
379.021 189.174 li
364.989 197.283 li
389.476 211.475 li
403.359 203.366 li
cp
.996078 .372549 .356863 rgb
f
389.327 211.475 mo
382.458 227.51 li
403.338 215.834 li
403.359 203.366 li
389.327 211.475 li
cp
.933333 .282353 .211765 rgb
f
402.51 205.075 mo
390.183 212.197 li
384.978 224.905 li
402.51 214.702 li
402.51 205.075 li
cp
.584314 .156863 .105882 rgb
f
390.441 212.422 mo
402.186 205.636 li
402.186 214.515 li
385.639 224.146 li
390.441 212.422 li
cp
.333333 .839216 .823529 rgb
f
384.904 222.515 mo
385.576 222.124 li
387.352 221.605 li
386.68 221.995 li
384.904 222.515 li
cp
.709804 .709804 .709804 rgb
f
387.046 221.084 mo
387.718 220.693 li
387.95 220.559 388.271 220.577 388.625 220.781 cv
387.953 221.172 li
387.599 220.967 387.278 220.949 387.046 221.084 cv
387.046 221.084 li
cp
f
387.953 221.172 mo
388.625 220.781 li
390.974 222.138 li
390.302 222.528 li
387.953 221.172 li
cp
f
390.302 222.528 mo
390.974 222.138 li
391.037 222.174 391.099 222.215 391.159 222.26 cv
390.487 222.65 li
390.427 222.605 390.365 222.564 390.302 222.528 cv
390.302 222.528 li
cp
f
390.487 222.65 mo
391.159 222.26 li
391.691 222.656 392.116 223.371 392.22 224.032 cv
391.549 224.423 li
391.444 223.761 391.019 223.047 390.487 222.65 cv
390.487 222.65 li
cp
f
391.549 224.423 mo
392.22 224.032 li
392.237 224.136 392.245 224.239 392.245 224.339 cv
392.244 224.742 392.101 225.026 391.872 225.159 cv
391.2 225.55 li
391.43 225.416 391.572 225.133 391.573 224.729 cv
391.573 224.629 391.565 224.527 391.549 224.423 cv
391.549 224.423 li
cp
f
390.302 222.528 mo
391.005 222.934 391.575 223.922 391.573 224.729 cv
391.571 225.541 390.997 225.868 390.294 225.462 cv
387.945 224.105 li
387.449 223.819 387.024 223.244 386.815 222.651 cv
385.192 223.122 li
384.904 222.515 li
386.68 221.995 li
386.674 221.901 li
386.676 221.093 387.25 220.766 387.953 221.172 cv
390.302 222.528 li
cp
.933333 .929412 .882353 rgb
f
356.076 235.215 mo
349.915 231.656 li
349.915 234.01 li
356.076 237.587 li
356.076 235.215 li
cp
.00784314 .313726 .454902 rgb
f
345.6 228.223 mo
345.464 228.223 345.323 228.181 345.18 228.098 cv
341.647 226.044 li
341.191 225.78 340.833 225.159 340.833 224.633 cv
340.831 223.227 li
340.83 222.996 340.898 222.806 341.027 222.677 cv
341.133 222.571 341.272 222.515 341.428 222.515 cv
341.564 222.515 341.706 222.557 341.848 222.64 cv
345.381 224.693 li
345.837 224.958 346.195 225.578 346.196 226.105 cv
346.198 227.511 li
346.198 227.741 346.13 227.931 346.001 228.06 cv
345.895 228.167 345.756 228.223 345.6 228.223 cv
cp
.588235 .176471 .133333 rgb
f
345.992 227.511 mo
345.993 227.963 345.674 228.147 345.283 227.92 cv
341.75 225.867 li
341.359 225.64 341.039 225.084 341.038 224.633 cv
341.036 223.226 li
341.035 222.774 341.355 222.59 341.745 222.817 cv
345.278 224.87 li
345.669 225.098 345.989 225.653 345.99 226.105 cv
345.992 227.511 li
cp
.443137 .811765 .952941 rgb
f
368.963 241.587 mo
368.827 241.587 368.686 241.544 368.543 241.461 cv
365.01 239.408 li
364.554 239.143 364.197 238.523 364.196 237.996 cv
364.194 236.59 li
364.194 236.36 364.261 236.17 364.39 236.041 cv
364.496 235.934 364.635 235.878 364.792 235.878 cv
364.928 235.878 365.069 235.921 365.212 236.003 cv
368.745 238.057 li
369.201 238.321 369.558 238.941 369.559 239.468 cv
369.561 240.875 li
369.561 241.105 369.493 241.295 369.365 241.424 cv
369.258 241.53 369.12 241.587 368.963 241.587 cv
cp
.588235 .176471 .133333 rgb
f
369.355 240.875 mo
369.356 241.327 369.037 241.511 368.646 241.284 cv
365.113 239.231 li
364.723 239.004 364.402 238.448 364.402 237.996 cv
364.399 236.59 li
364.399 236.138 364.718 235.954 365.109 236.181 cv
368.642 238.234 li
369.032 238.461 369.353 239.017 369.353 239.469 cv
369.355 240.875 li
cp
.443137 .811765 .952941 rgb
f
213.883 207.201 mo
213.882 207.729 li
147.961 246.045 li
147.963 245.517 li
213.883 207.201 li
cp
.00392157 .109804 .168627 rgb
f
147.963 245.517 mo
147.961 246.045 li
146.342 245.11 li
146.343 244.582 li
147.963 245.517 li
cp
f
213.883 207.201 mo
147.963 245.517 li
146.343 244.582 li
212.264 206.266 li
213.883 207.201 li
cp
f
194.765 192.813 mo
194.763 193.341 li
126.163 233.21 li
126.165 232.682 li
194.765 192.813 li
cp
f
126.165 232.682 mo
126.163 233.21 li
124.544 232.275 li
124.545 231.747 li
126.165 232.682 li
cp
f
194.765 192.813 mo
126.165 232.682 li
124.545 231.747 li
193.145 191.878 li
194.765 192.813 li
cp
f
149.152 214.656 mo
125.717 201.049 li
125.73 221.247 li
149.166 234.781 li
149.152 214.656 li
cp
.819608 .819608 .819608 rgb
f
125.73 218.758 mo
125.735 228.275 li
149.171 241.882 li
149.166 232.292 li
125.73 218.758 li
cp
.792157 .188235 .0862745 rgb
f
158.952 231.367 mo
158.349 231.016 157.536 231.027 156.632 231.465 cv
156.535 231.513 156.436 231.565 156.336 231.623 cv
155.024 232.381 153.875 233.835 153.227 235.4 cv
152.873 236.256 152.67 237.145 152.672 237.97 cv
152.675 239.129 153.084 239.944 153.744 240.328 cv
154.506 240.75 li
153.846 240.367 153.436 239.551 153.433 238.392 cv
153.431 237.567 153.634 236.678 153.989 235.822 cv
154.636 234.258 155.785 232.803 157.097 232.045 cv
157.197 231.988 157.296 231.935 157.394 231.888 cv
158.297 231.449 159.11 231.439 159.713 231.789 cv
158.952 231.367 li
cp
.00392157 .109804 .168627 rgb
f
157.097 232.045 mo
159.128 230.873 160.779 231.814 160.786 234.147 cv
160.792 236.48 159.152 239.322 157.121 240.494 cv
155.091 241.666 153.44 240.725 153.433 238.392 cv
153.426 236.059 155.067 233.218 157.097 232.045 cv
cp
.00784314 .313726 .454902 rgb
f
157.1 232.854 mo
158.741 231.906 160.076 232.667 160.082 234.554 cv
160.087 236.44 158.761 238.738 157.119 239.685 cv
155.478 240.633 154.142 239.872 154.137 237.986 cv
154.132 236.1 155.458 233.802 157.1 232.854 cv
cp
.760784 .760784 .760784 rgb
f
157.105 234.57 mo
157.922 234.098 158.586 234.477 158.589 235.416 cv
158.591 236.355 157.931 237.498 157.114 237.97 cv
156.297 238.441 155.633 238.063 155.63 237.124 cv
155.627 236.185 156.288 235.042 157.105 234.57 cv
cp
.00392157 .109804 .168627 rgb
f
166.817 227.176 mo
166.214 226.825 165.401 226.835 164.498 227.274 cv
164.4 227.322 164.301 227.374 164.201 227.432 cv
162.889 228.189 161.74 229.644 161.093 231.208 cv
160.738 232.065 160.535 232.953 160.537 233.779 cv
160.54 234.938 160.95 235.753 161.609 236.137 cv
162.371 236.559 li
161.711 236.176 161.301 235.36 161.298 234.201 cv
161.296 233.376 161.5 232.487 161.854 231.631 cv
162.501 230.067 163.65 228.612 164.963 227.854 cv
165.062 227.796 165.161 227.744 165.259 227.697 cv
166.162 227.258 166.975 227.247 167.578 227.598 cv
166.817 227.176 li
cp
f
164.963 227.854 mo
166.993 226.682 168.644 227.623 168.651 229.956 cv
168.658 232.289 167.017 235.131 164.987 236.303 cv
162.956 237.475 161.305 236.534 161.298 234.201 cv
161.292 231.868 162.932 229.026 164.963 227.854 cv
cp
.00784314 .313726 .454902 rgb
f
164.965 228.663 mo
166.606 227.715 167.942 228.476 167.947 230.363 cv
167.952 232.249 166.626 234.546 164.984 235.494 cv
163.343 236.442 162.008 235.681 162.002 233.795 cv
161.997 231.908 163.323 229.611 164.965 228.663 cv
cp
.760784 .760784 .760784 rgb
f
164.97 230.379 mo
165.787 229.907 166.451 230.286 166.454 231.225 cv
166.457 232.163 165.796 233.307 164.979 233.778 cv
164.162 234.25 163.498 233.871 163.495 232.933 cv
163.493 231.994 164.153 230.85 164.97 230.379 cv
cp
.00392157 .109804 .168627 rgb
f
198.673 208.486 mo
198.07 208.136 197.257 208.146 196.353 208.585 cv
196.255 208.633 196.157 208.685 196.057 208.742 cv
194.745 209.5 193.595 210.955 192.948 212.519 cv
192.594 213.375 192.39 214.264 192.393 215.089 cv
192.396 216.248 192.805 217.064 193.465 217.447 cv
194.226 217.87 li
193.566 217.486 193.157 216.671 193.154 215.512 cv
193.151 214.687 193.355 213.798 193.709 212.942 cv
194.357 211.378 195.506 209.923 196.818 209.165 cv
196.918 209.107 197.017 209.055 197.114 209.008 cv
198.018 208.569 198.831 208.558 199.434 208.909 cv
198.673 208.486 li
cp
f
196.818 209.165 mo
198.849 207.993 200.5 208.934 200.507 211.267 cv
200.513 213.6 198.872 216.442 196.842 217.614 cv
194.812 218.786 193.16 217.845 193.154 215.512 cv
193.147 213.179 194.788 210.337 196.818 209.165 cv
cp
.00784314 .313726 .454902 rgb
f
196.82 209.974 mo
198.462 209.026 199.797 209.787 199.803 211.673 cv
199.808 213.559 198.481 215.857 196.84 216.805 cv
195.198 217.753 193.863 216.992 193.858 215.105 cv
193.852 213.219 195.179 210.921 196.82 209.974 cv
cp
.760784 .760784 .760784 rgb
f
196.825 211.689 mo
197.642 211.218 198.307 211.596 198.31 212.535 cv
198.312 213.474 197.652 214.618 196.835 215.089 cv
196.018 215.561 195.354 215.182 195.351 214.243 cv
195.348 213.305 196.008 212.161 196.825 211.689 cv
cp
.00392157 .109804 .168627 rgb
f
206.538 204.295 mo
205.935 203.945 205.122 203.955 204.218 204.394 cv
204.121 204.441 204.022 204.494 203.922 204.551 cv
202.61 205.309 201.461 206.764 200.813 208.328 cv
200.459 209.184 200.255 210.073 200.258 210.898 cv
200.261 212.057 200.67 212.873 201.33 213.256 cv
202.091 213.679 li
201.431 213.295 201.022 212.48 201.019 211.321 cv
201.017 210.495 201.22 209.607 201.575 208.751 cv
202.222 207.186 203.371 205.731 204.683 204.974 cv
204.783 204.916 204.882 204.864 204.98 204.816 cv
205.883 204.377 206.696 204.367 207.299 204.717 cv
206.538 204.295 li
cp
f
204.683 204.974 mo
206.714 203.801 208.365 204.743 208.372 207.076 cv
208.378 209.408 206.738 212.25 204.707 213.423 cv
202.677 214.595 201.026 213.654 201.019 211.321 cv
201.012 208.988 202.653 206.146 204.683 204.974 cv
cp
.00784314 .313726 .454902 rgb
f
204.686 205.783 mo
206.327 204.835 207.662 205.596 207.668 207.482 cv
207.673 209.368 206.347 211.666 204.705 212.614 cv
203.063 213.561 201.728 212.801 201.723 210.914 cv
201.718 209.028 203.044 206.73 204.686 205.783 cv
cp
.760784 .760784 .760784 rgb
f
204.691 207.498 mo
205.508 207.027 206.172 207.405 206.175 208.344 cv
206.177 209.283 205.517 210.426 204.7 210.898 cv
203.883 211.37 203.219 210.991 203.216 210.052 cv
203.213 209.113 203.874 207.97 204.691 207.498 cv
cp
.00392157 .109804 .168627 rgb
f
127.778 218.475 mo
127.076 218.063 126.501 217.059 126.5 216.245 cv
126.487 205.138 li
126.486 204.324 127.06 203.995 127.762 204.407 cv
146.767 215.563 li
147.469 215.975 148.045 216.979 148.045 217.793 cv
148.058 228.9 li
148.059 229.714 147.485 230.044 146.783 229.631 cv
127.778 218.475 li
cp
.168627 .243137 .309804 rgb
f
147.356 229.513 mo
147.232 229.513 147.086 229.465 146.933 229.376 cv
127.928 218.22 li
127.315 217.86 126.797 216.956 126.796 216.245 cv
126.783 205.138 li
126.783 204.907 126.839 204.723 126.941 204.621 cv
127.006 204.557 127.087 204.525 127.19 204.525 cv
127.314 204.525 127.46 204.572 127.613 204.662 cv
146.617 215.818 li
147.23 216.178 147.749 217.083 147.749 217.793 cv
147.762 228.9 li
147.762 229.131 147.706 229.315 147.604 229.417 cv
147.539 229.482 147.458 229.513 147.356 229.513 cv
cp
.443137 .811765 .952941 rgb
f
130.395 226.836 mo
126.489 224.566 li
126.486 222.161 li
130.392 224.431 li
130.395 226.836 li
cp
f
148.06 237.049 mo
144.154 234.779 li
144.15 232.375 li
148.056 234.645 li
148.06 237.049 li
cp
f
149.171 214.656 mo
125.735 201.049 li
185.534 166.495 li
208.97 180.102 li
149.171 214.656 li
cp
.980392 .984314 .992157 rgb
f
208.97 180.102 mo
149.171 214.656 li
149.171 241.882 li
208.97 207.339 li
208.97 180.102 li
cp
.862745 .862745 .862745 rgb
f
208.97 197.738 mo
149.171 232.292 li
149.171 241.882 li
208.97 207.339 li
208.97 197.738 li
cp
.792157 .188235 .0862745 rgb
f
173.747 201.835 mo
160.491 209.479 li
160.491 223.968 li
173.747 216.323 li
173.747 201.835 li
cp
.168627 .243137 .309804 rgb
f
160.787 209.65 mo
173.451 202.347 li
173.451 216.152 li
160.787 223.455 li
160.787 209.65 li
cp
.443137 .811765 .952941 rgb
f
188.04 193.578 mo
174.784 201.222 li
174.784 215.711 li
188.04 208.066 li
188.04 193.578 li
cp
.168627 .243137 .309804 rgb
f
175.08 201.393 mo
187.744 194.091 li
187.744 207.895 li
175.08 215.199 li
175.08 201.393 li
cp
.443137 .811765 .952941 rgb
f
207.202 182.499 mo
199.479 186.965 li
199.479 201.454 li
207.202 196.988 li
207.202 182.499 li
cp
.168627 .243137 .309804 rgb
f
199.775 187.136 mo
206.906 183.012 li
206.906 196.817 li
199.775 200.941 li
199.775 187.136 li
cp
.443137 .811765 .952941 rgb
f
158.466 184.237 mo
148.982 188.95 li
148.982 189.721 li
169.349 201.545 li
169.349 190.143 li
158.466 184.237 li
cp
.780392 .780392 .780392 rgb
f
169.349 190.143 mo
169.349 201.545 li
178.834 196.06 li
178.834 195.289 li
169.349 190.143 li
cp
.788235 .788235 .788235 rgb
f
148.982 188.95 mo
158.466 183.466 li
178.834 195.289 li
169.349 200.773 li
148.982 188.95 li
cp
.862745 .862745 .862745 rgb
f
154.729 237.984 mo
155.869 237.138 li
155.869 228.421 li
154.729 229.08 li
154.729 237.984 li
cp
.792157 .188235 .0862745 rgb
f
154.729 211.953 mo
154.729 229.08 li
155.869 228.421 li
155.869 211.953 li
154.729 211.953 li
cp
.862745 .862745 .862745 rgb
f
194.942 189.946 mo
193.802 189.946 li
193.802 206.502 li
194.942 205.844 li
194.942 189.946 li
cp
f
193.802 206.502 mo
193.802 215.77 li
194.942 215.124 li
194.942 205.844 li
193.802 206.502 li
cp
.792157 .188235 .0862745 rgb
f
150.057 215.505 mo
154.777 212.78 li
154.777 237.396 li
150.057 240.121 li
150.057 215.505 li
cp
.00784314 .313726 .454902 rgb
f
154.518 213.229 mo
150.316 215.654 li
150.316 239.672 li
154.518 237.246 li
154.518 213.229 li
cp
.443137 .811765 .952941 rgb
f
155.167 212.555 mo
159.516 210.044 li
159.516 234.66 li
155.167 237.171 li
155.167 212.555 li
cp
.00784314 .313726 .454902 rgb
f
155.426 212.704 mo
155.426 236.722 li
159.257 234.51 li
159.257 210.493 li
155.426 212.704 li
cp
.443137 .811765 .952941 rgb
f
189.073 193.024 mo
193.793 190.299 li
193.793 214.915 li
189.073 217.641 li
189.073 193.024 li
cp
.00784314 .313726 .454902 rgb
f
193.534 190.748 mo
189.332 193.174 li
189.332 217.192 li
193.534 214.766 li
193.534 190.748 li
cp
.443137 .811765 .952941 rgb
f
194.183 190.074 mo
198.532 187.564 li
198.532 212.18 li
194.183 214.69 li
194.183 190.074 li
cp
.00784314 .313726 .454902 rgb
f
194.442 190.224 mo
194.442 214.242 li
198.273 212.03 li
198.273 188.013 li
194.442 190.224 li
cp
.443137 .811765 .952941 rgb
f
171.199 180.454 mo
170.427 180.006 li
166.913 189.078 li
167.685 189.527 li
171.199 180.454 li
cp
.0980392 .282353 .403922 rgb
f
167.685 189.527 mo
166.913 189.078 li
159.846 193.158 li
160.619 193.607 li
167.685 189.527 li
cp
.0862745 .254902 .364706 rgb
f
167.645 175.463 mo
166.873 175.014 li
170.427 180.006 li
171.199 180.454 li
167.645 175.463 li
cp
.054902 .156863 .223529 rgb
f
155.719 189.392 mo
154.947 188.943 li
159.176 194.888 li
159.949 195.337 li
155.719 189.392 li
cp
f
168.315 173.733 mo
167.543 173.284 li
159.129 178.141 li
159.901 178.59 li
168.315 173.733 li
cp
.0862745 .254902 .364706 rgb
f
159.901 178.59 mo
159.129 178.141 li
154.947 188.943 li
155.719 189.392 li
159.901 178.59 li
cp
.0980392 .282353 .403922 rgb
f
160.619 193.607 mo
167.685 189.527 li
171.199 180.454 li
167.645 175.463 li
160.579 179.542 li
157.065 188.615 li
160.619 193.607 li
160.619 193.607 li
cp
168.315 173.733 mo
172.547 179.677 li
168.363 190.479 li
159.949 195.337 li
155.719 189.392 li
159.901 178.59 li
168.315 173.733 li
cp
.054902 .156863 .227451 rgb
f
308.579 285.308 mo
307.961 284.949 li
307.748 284.825 307.452 284.842 307.125 285.031 cv
307.742 285.39 li
308.069 285.201 308.365 285.184 308.579 285.308 cv
cp
.403922 .745098 .937255 rgb
f
gsave
308.579 285.308 mo
307.961 284.949 li
307.748 284.825 307.452 284.842 307.125 285.031 cv
307.742 285.39 li
308.069 285.201 308.365 285.184 308.579 285.308 cv
cp
clp
308.579 285.308 mo
307.961 284.949 li
307.748 284.825 307.452 284.842 307.125 285.031 cv
307.742 285.39 li
308.069 285.201 308.365 285.184 308.579 285.308 cv
308.579 285.308 li
cp
f
grestore
304.148 289.051 mo
304.766 289.41 li
304.68 289.36 304.608 289.288 304.552 289.195 cv
303.935 288.836 li
303.99 288.929 304.063 289.001 304.148 289.051 cv
cp
f
gsave
304.148 289.051 mo
304.766 289.41 li
304.68 289.36 304.608 289.288 304.552 289.195 cv
303.935 288.836 li
303.99 288.929 304.063 289.001 304.148 289.051 cv
cp
clp
304.552 289.195 mo
303.935 288.836 li
303.99 288.929 304.063 289.001 304.148 289.051 cv
304.766 289.41 li
304.68 289.36 304.608 289.288 304.552 289.195 cv
304.552 289.195 li
cp
f
grestore
304.419 288.657 mo
303.801 288.298 li
303.807 288.379 li
304.424 288.737 li
304.419 288.657 li
cp
f
307.742 285.39 mo
307.125 285.031 li
304.969 286.276 li
305.586 286.634 li
307.742 285.39 li
cp
f
302.801 291.094 mo
302.184 290.735 li
302.451 290.987 li
303.068 291.345 li
302.801 291.094 li
cp
.00784314 .380392 .54902 rgb
f
304.424 288.737 mo
303.807 288.379 li
302.184 290.735 li
302.801 291.094 li
304.424 288.737 li
cp
.403922 .745098 .937255 rgb
f
305.586 286.634 mo
304.969 286.276 li
304.32 286.65 303.799 287.556 303.801 288.298 cv
304.419 288.657 li
304.417 287.915 304.938 287.009 305.586 286.634 cv
cp
f
gsave
305.586 286.634 mo
304.969 286.276 li
304.32 286.65 303.799 287.556 303.801 288.298 cv
304.419 288.657 li
304.417 287.915 304.938 287.009 305.586 286.634 cv
cp
clp
305.586 286.634 mo
304.969 286.276 li
304.911 286.309 304.854 286.347 304.798 286.389 cv
305.415 286.747 li
305.471 286.706 305.528 286.668 305.586 286.634 cv
305.586 286.634 li
cp
f
305.415 286.747 mo
304.798 286.389 li
304.309 286.754 303.92 287.408 303.824 288.015 cv
304.441 288.374 li
304.537 287.767 304.926 287.112 305.415 286.747 cv
305.415 286.747 li
cp
f
304.441 288.374 mo
303.824 288.015 li
303.809 288.111 303.801 288.206 303.801 288.298 cv
304.419 288.657 li
304.418 288.565 304.426 288.47 304.441 288.374 cv
304.441 288.374 li
cp
f
grestore
305.586 286.634 mo
304.938 287.009 304.417 287.915 304.419 288.657 cv
304.424 288.737 li
302.801 291.094 li
303.068 291.345 li
304.552 289.195 li
304.746 289.517 305.138 289.593 305.594 289.33 cv
307.75 288.086 li
308.399 287.711 308.923 286.803 308.921 286.058 cv
308.918 285.316 308.391 285.015 307.742 285.39 cv
305.586 286.634 li
cp
.133333 .65098 .937255 rgb
f
247.778 297.818 mo
248.605 297.338 249.718 297.352 250.956 297.953 cv
251.09 298.018 251.225 298.09 251.362 298.169 cv
253.16 299.207 254.734 301.2 255.621 303.343 cv
256.106 304.516 256.385 305.734 256.382 306.864 cv
256.378 308.452 255.817 309.569 254.913 310.095 cv
251.501 312.078 li
252.405 311.552 252.966 310.435 252.97 308.847 cv
252.974 307.716 252.695 306.499 252.209 305.326 cv
251.323 303.183 249.748 301.19 247.95 300.152 cv
247.814 300.073 247.678 300.001 247.544 299.936 cv
246.306 299.335 245.193 299.32 244.366 299.801 cv
247.778 297.818 li
cp
.00392157 .109804 .168627 rgb
f
247.95 300.152 mo
245.169 298.546 242.906 299.835 242.897 303.031 cv
242.888 306.227 245.136 310.121 247.917 311.727 cv
250.699 313.332 252.961 312.043 252.97 308.847 cv
252.98 305.651 250.732 301.758 247.95 300.152 cv
cp
.760784 .760784 .760784 rgb
f
247.95 300.152 mo
245.169 298.546 242.906 299.835 242.897 303.031 cv
242.888 306.227 245.136 310.121 247.917 311.727 cv
250.699 313.332 252.961 312.043 252.97 308.847 cv
252.98 305.651 250.732 301.758 247.95 300.152 cv
cp
.00784314 .313726 .454902 rgb
f
247.941 303.25 mo
246.649 302.503 245.597 303.103 245.593 304.588 cv
245.589 306.073 246.634 307.882 247.926 308.629 cv
249.219 309.375 250.27 308.776 250.274 307.29 cv
250.279 305.805 249.234 303.996 247.941 303.25 cv
cp
.760784 .760784 .760784 rgb
f
283.185 319.592 mo
284.012 319.111 285.125 319.125 286.363 319.727 cv
286.497 319.792 286.632 319.864 286.769 319.942 cv
288.567 320.98 290.141 322.974 291.028 325.117 cv
291.513 326.29 291.792 327.507 291.789 328.638 cv
291.785 330.226 291.224 331.343 290.32 331.868 cv
286.908 333.851 li
287.812 333.326 288.373 332.208 288.377 330.62 cv
288.381 329.49 288.102 328.272 287.616 327.099 cv
286.73 324.956 285.155 322.963 283.357 321.925 cv
283.221 321.846 283.085 321.774 282.952 321.709 cv
281.713 321.108 280.6 321.094 279.773 321.574 cv
283.185 319.592 li
cp
.00392157 .109804 .168627 rgb
f
283.357 321.925 mo
280.576 320.319 278.313 321.608 278.304 324.805 cv
278.295 328.001 280.543 331.894 283.324 333.5 cv
286.106 335.106 288.368 333.817 288.377 330.62 cv
288.387 327.424 286.139 323.531 283.357 321.925 cv
cp
.760784 .760784 .760784 rgb
f
283.357 321.925 mo
280.576 320.319 278.313 321.608 278.304 324.805 cv
278.295 328.001 280.543 331.894 283.324 333.5 cv
286.106 335.106 288.368 333.817 288.377 330.62 cv
288.387 327.424 286.139 323.531 283.357 321.925 cv
cp
.00784314 .313726 .454902 rgb
f
283.348 325.023 mo
282.056 324.277 281.004 324.876 281 326.361 cv
280.996 327.846 282.041 329.656 283.333 330.402 cv
284.626 331.148 285.677 330.549 285.681 329.064 cv
285.686 327.579 284.641 325.769 283.348 325.023 cv
cp
.760784 .760784 .760784 rgb
f
234.116 290.821 mo
234.402 299.713 li
297.896 336.906 li
298.181 329.795 li
280.341 315.198 li
249.174 297.086 li
234.116 290.821 li
cp
.145098 .454902 .658824 rgb
f
298.181 329.795 mo
297.896 336.906 li
329.759 318.586 li
330.044 311.475 li
298.181 329.795 li
cp
.117647 .541176 .760784 rgb
f
234.116 290.821 mo
249.174 297.086 li
280.312 315.198 li
298.181 329.795 li
330.044 311.475 li
309.157 298.125 li
273.981 277.547 li
265.299 272.817 li
234.116 290.821 li
cp
.133333 .65098 .937255 rgb
f
272.872 299.563 mo
298.835 284.515 li
309.135 298.103 li
280.312 315.198 li
272.872 299.563 li
cp
f
274.244 300.057 mo
298.44 286.035 li
307.599 297.703 li
280.565 313.391 li
274.244 300.057 li
cp
.133333 .192157 .247059 rgb
f
254.398 288.897 mo
280.361 273.849 li
298.835 284.515 li
272.872 299.563 li
254.398 288.897 li
cp
.243137 .690196 .937255 rgb
f
273.029 299.563 mo
280.312 315.198 li
249.174 297.103 li
254.555 288.897 li
273.029 299.563 li
cp
.145098 .454902 .658824 rgb
f
250.736 296.747 mo
254.91 290.39 li
272.122 300.328 li
277.75 312.375 li
250.736 296.747 li
cp
.133333 .192157 .247059 rgb
f
310.184 324.422 mo
320.137 318.638 li
321.132 322.036 li
309.189 328.932 li
310.184 324.422 li
cp
1 .988235 .87451 rgb
f
322.719 320.158 mo
322.719 320.701 323.163 320.889 323.706 320.575 cv
327.694 318.303 li
328.237 317.989 328.682 317.288 328.682 316.745 cv
328.682 314.327 li
328.682 313.783 328.254 313.707 327.731 314.156 cv
323.669 318.131 li
323.146 318.581 322.719 319.393 322.719 319.936 cv
322.719 320.158 li
cp
1 .823529 .160784 rgb
f
299.055 333.799 mo
299.055 334.342 299.5 334.53 300.043 334.216 cv
304.325 331.753 li
304.868 331.44 305.313 330.738 305.313 330.195 cv
305.313 329.974 li
305.313 329.431 304.885 329.112 304.362 329.266 cv
300.006 330.112 li
299.483 330.267 299.055 330.837 299.055 331.38 cv
299.055 333.799 li
cp
f
265.821 306.48 mo
264.743 306.48 li
264.743 295.525 li
265.821 296.205 li
265.821 306.48 li
cp
.145098 .454902 .658824 rgb
f
276.382 306.587 mo
275.67 306.173 li
273.787 305.623 li
274.5 306.037 li
276.382 306.587 li
cp
.403922 .745098 .937255 rgb
f
274.111 305.07 mo
273.399 304.656 li
273.153 304.513 272.812 304.533 272.437 304.75 cv
273.15 305.164 li
273.525 304.947 273.865 304.927 274.111 305.07 cv
274.111 305.07 li
cp
f
273.15 305.164 mo
272.437 304.75 li
269.946 306.188 li
270.659 306.602 li
273.15 305.164 li
cp
f
270.659 306.602 mo
269.946 306.188 li
269.88 306.226 269.814 306.27 269.75 306.317 cv
270.463 306.731 li
270.527 306.684 270.592 306.64 270.659 306.602 cv
270.659 306.602 li
cp
f
270.463 306.731 mo
269.75 306.317 li
269.186 306.737 268.736 307.495 268.625 308.196 cv
269.337 308.61 li
269.448 307.909 269.899 307.151 270.463 306.731 cv
270.463 306.731 li
cp
f
269.337 308.61 mo
268.625 308.196 li
268.608 308.307 268.599 308.416 268.599 308.522 cv
268.6 308.949 268.751 309.25 268.995 309.392 cv
269.707 309.806 li
269.464 309.664 269.312 309.363 269.311 308.936 cv
269.311 308.83 269.32 308.721 269.337 308.61 cv
269.337 308.61 li
cp
f
270.659 306.602 mo
269.913 307.032 269.309 308.079 269.311 308.936 cv
269.314 309.796 269.922 310.142 270.668 309.712 cv
273.158 308.274 li
273.684 307.97 274.135 307.361 274.356 306.732 cv
276.077 307.232 li
276.382 306.587 li
274.5 306.037 li
274.506 305.936 li
274.503 305.08 273.895 304.733 273.15 305.164 cv
270.659 306.602 li
cp
.133333 .65098 .937255 rgb
f
55.0757 322.104 mo
54.31 321.659 53.2785 321.672 52.1315 322.229 cv
52.0075 322.29 51.8822 322.356 51.7557 322.429 cv
50.0903 323.391 48.6314 325.237 47.81 327.223 cv
47.3605 328.309 47.1019 329.437 47.1048 330.485 cv
47.109 331.956 47.6284 332.991 48.4659 333.478 cv
51.6266 335.314 li
50.789 334.828 50.2696 333.793 50.2655 332.322 cv
50.2625 331.274 50.521 330.146 50.9706 329.06 cv
51.792 327.074 53.2508 325.228 54.9162 324.266 cv
55.0427 324.193 55.1681 324.126 55.2921 324.066 cv
56.4391 323.509 57.4706 323.496 58.2363 323.941 cv
55.0757 322.104 li
cp
.00392157 .109804 .168627 rgb
f
54.9162 324.266 mo
57.4931 322.778 59.589 323.973 59.5974 326.934 cv
59.6058 329.895 57.5234 333.501 54.9467 334.989 cv
52.3698 336.477 50.2739 335.283 50.2655 332.322 cv
50.257 329.361 52.3394 325.754 54.9162 324.266 cv
cp
.760784 .760784 .760784 rgb
f
54.9162 324.266 mo
57.4931 322.778 59.589 323.973 59.5974 326.934 cv
59.6058 329.895 57.5234 333.501 54.9467 334.989 cv
52.3698 336.477 50.2739 335.283 50.2655 332.322 cv
50.257 329.361 52.3394 325.754 54.9162 324.266 cv
cp
.00784314 .313726 .454902 rgb
f
54.9243 327.136 mo
56.1219 326.445 57.0958 327 57.0998 328.376 cv
57.1037 329.752 56.136 331.428 54.9385 332.119 cv
53.741 332.811 52.767 332.255 52.7631 330.879 cv
52.7592 329.504 53.7269 327.827 54.9243 327.136 cv
cp
.760784 .760784 .760784 rgb
f
94.7181 299.498 mo
93.9524 299.053 92.9209 299.066 91.7739 299.623 cv
91.6499 299.683 91.5245 299.75 91.398 299.823 cv
89.7326 300.784 88.2738 302.631 87.4524 304.616 cv
87.0028 305.703 86.7443 306.831 86.7472 307.878 cv
86.7514 309.349 87.2708 310.384 88.1083 310.871 cv
91.269 312.708 li
90.4314 312.221 89.912 311.186 89.9079 309.715 cv
89.9049 308.668 90.1634 307.539 90.613 306.453 cv
91.4344 304.468 92.8932 302.621 94.5586 301.659 cv
94.6851 301.586 94.8105 301.52 94.9345 301.46 cv
96.0815 300.903 97.113 300.889 97.8787 301.334 cv
94.7181 299.498 li
cp
.00392157 .109804 .168627 rgb
f
94.5586 301.66 mo
97.1355 300.172 99.2314 301.366 99.2398 304.327 cv
99.2482 307.288 97.1658 310.895 94.589 312.383 cv
92.0121 313.87 89.9162 312.676 89.9079 309.715 cv
89.8994 306.754 91.9817 303.147 94.5586 301.66 cv
cp
.760784 .760784 .760784 rgb
f
94.5586 301.66 mo
97.1355 300.172 99.2314 301.366 99.2398 304.327 cv
99.2482 307.288 97.1658 310.895 94.589 312.383 cv
92.0121 313.87 89.9162 312.676 89.9079 309.715 cv
89.8994 306.754 91.9817 303.147 94.5586 301.66 cv
cp
.00784314 .313726 .454902 rgb
f
94.5667 304.53 mo
95.7643 303.838 96.7382 304.393 96.7421 305.769 cv
96.746 307.145 95.7784 308.821 94.5808 309.513 cv
93.3834 310.204 92.4094 309.649 92.4055 308.273 cv
92.4016 306.897 93.3693 305.221 94.5667 304.53 cv
cp
.760784 .760784 .760784 rgb
f
104.27 289.742 mo
104.253 300.124 li
40.8393 336.906 li
40.8568 328.892 li
57.6095 316.792 li
104.27 289.742 li
cp
.992157 .607843 .0745098 rgb
f
40.8568 328.892 mo
40.8393 336.906 li
11.1469 319.763 li
11.1643 311.749 li
40.8568 328.892 li
cp
.992157 .721569 .0745098 rgb
f
40.8568 335.008 mo
40.8393 336.906 li
11.1469 319.763 li
11.1643 317.865 li
40.8568 335.008 li
cp
1 .988235 .87451 rgb
f
104.27 289.742 mo
57.6095 316.792 li
40.8568 328.892 li
11.1643 311.749 li
28.3119 299.42 li
74.5777 272.599 li
104.27 289.742 li
cp
1 .823529 .160784 rgb
f
63.3742 301.949 mo
36.9807 286.652 li
28.3088 299.413 li
57.9494 316.612 li
63.3742 301.949 li
cp
.996078 .756863 .0666667 rgb
f
61.9787 302.451 mo
37.382 288.197 li
29.8704 299.008 li
57.3529 314.954 li
61.9787 302.451 li
cp
.101961 .294118 .423529 rgb
f
98.9403 281.38 mo
72.5468 266.084 li
36.9807 286.652 li
63.3742 301.949 li
98.9403 281.38 li
cp
1 .823529 .160784 rgb
f
63.2141 301.949 mo
57.6094 316.792 li
104.27 289.742 li
98.7801 281.38 li
63.2141 301.949 li
cp
.992157 .607843 .0745098 rgb
f
102.662 289.36 mo
98.4197 282.898 li
64.1361 302.727 li
59.9441 314.058 li
102.662 289.36 li
cp
.101961 .294118 .423529 rgb
f
71.6336 311.341 mo
72.5548 311.341 li
72.5548 296.918 li
71.6336 296.918 li
71.6336 311.341 li
cp
.992157 .607843 .0745098 rgb
f
87.2792 302.922 mo
88.2004 302.922 li
88.2004 288.499 li
87.2792 288.499 li
87.2792 302.922 li
cp
f
30.1861 324.665 mo
21.2094 319.48 li
21.2094 322.909 li
30.1861 328.121 li
30.1861 324.665 li
cp
.00784314 .313726 .454902 rgb
f
17.0477 320.553 mo
16.9035 320.553 16.7538 320.508 16.6024 320.42 cv
12.8568 318.243 li
12.3731 317.963 11.9941 317.305 11.9937 316.746 cv
11.9911 315.256 li
11.9907 315.011 12.0626 314.81 12.1991 314.673 cv
12.3119 314.56 12.4591 314.501 12.625 314.501 cv
12.7692 314.501 12.9189 314.545 13.0703 314.634 cv
16.8163 316.81 li
17.2996 317.091 17.6786 317.748 17.6794 318.307 cv
17.6816 319.798 li
17.682 320.043 17.6101 320.244 17.4736 320.38 cv
17.3608 320.493 17.2136 320.553 17.0477 320.553 cv
cp
.870588 .533333 .0666667 rgb
f
17.4638 319.799 mo
17.4645 320.278 17.1261 320.473 16.7119 320.232 cv
12.9659 318.055 li
12.5516 317.814 12.2121 317.225 12.2113 316.746 cv
12.209 315.255 li
12.2083 314.776 12.5466 314.581 12.9609 314.822 cv
16.7069 316.999 li
17.1212 317.239 17.4607 317.828 17.4615 318.308 cv
17.4638 319.799 li
cp
.443137 .811765 .952941 rgb
f
39.4671 333.39 mo
39.3229 333.39 39.1732 333.345 39.0218 333.257 cv
35.2762 331.081 li
34.7925 330.8 34.4135 330.142 34.4131 329.583 cv
34.4105 328.093 li
34.4101 327.848 34.482 327.647 34.6185 327.51 cv
34.7313 327.397 34.8785 327.338 35.0444 327.338 cv
35.1886 327.338 35.3383 327.383 35.4897 327.471 cv
39.2357 329.647 li
39.719 329.928 40.098 330.586 40.0989 331.144 cv
40.101 332.635 li
40.1014 332.88 40.0295 333.081 39.893 333.218 cv
39.7802 333.331 39.633 333.39 39.4671 333.39 cv
cp
.870588 .533333 .0666667 rgb
f
39.8832 332.636 mo
39.8839 333.115 39.5455 333.31 39.1313 333.069 cv
35.3853 330.892 li
34.971 330.651 34.6315 330.063 34.6307 329.583 cv
34.6284 328.092 li
34.6277 327.613 34.966 327.418 35.3803 327.659 cv
39.1263 329.836 li
39.5406 330.077 39.8801 330.666 39.8809 331.145 cv
39.8832 332.636 li
cp
.443137 .811765 .952941 rgb
f
65.8355 316.792 mo
62.8898 318.493 li
62.8898 315.547 li
65.8355 313.846 li
65.8355 316.792 li
cp
.223529 .235294 .254902 rgb
f
71.7268 313.391 mo
68.7811 315.091 li
68.7811 312.146 li
71.7268 310.445 li
71.7268 313.391 li
cp
f
62.8898 321.439 mo
59.9441 323.139 li
59.9441 320.194 li
62.8898 318.493 li
62.8898 321.439 li
cp
f
68.7811 318.037 mo
65.8355 319.738 li
65.8355 316.792 li
68.7811 315.091 li
68.7811 318.037 li
cp
f
74.6177 314.667 mo
71.6721 316.368 li
71.6721 313.422 li
74.6177 311.722 li
74.6177 314.667 li
cp
f
93.1706 300.78 mo
90.2249 302.48 li
90.2249 299.534 li
93.1706 297.834 li
93.1706 300.78 li
cp
f
99.0619 297.378 mo
96.1163 299.079 li
96.1163 296.133 li
99.0619 294.432 li
99.0619 297.378 li
cp
f
90.2249 305.426 mo
87.2792 307.127 li
87.2792 304.181 li
90.2249 302.48 li
90.2249 305.426 li
cp
f
96.1163 302.025 mo
93.1706 303.725 li
93.1706 300.78 li
96.1163 299.079 li
96.1163 302.025 li
cp
f
101.953 298.655 mo
99.0072 300.355 li
99.0072 297.41 li
101.953 295.709 li
101.953 298.655 li
cp
f
55.1723 289.53 mo
57.8247 287.989 li
58.309 293.56 li
55.6566 295.101 li
55.1723 289.53 li
cp
.662745 .666667 .670588 rgb
f
46.1817 284.34 mo
48.8341 282.798 li
57.8247 287.989 li
55.1723 289.53 li
46.1817 284.34 li
cp
.631373 .635294 .639216 rgb
f
55.1723 289.53 mo
55.6566 295.101 li
45.6674 289.334 li
46.1817 284.34 li
55.1723 289.53 li
cp
.909804 .909804 .917647 rgb
f
49.6577 289.084 mo
47.9227 288.096 li
47.9227 286.385 li
49.6577 287.373 li
49.6577 289.084 li
cp
.223529 .235294 .254902 rgb
f
53.1275 291.061 mo
51.3926 290.073 li
51.3926 288.361 li
53.1275 289.349 li
53.1275 291.061 li
cp
f
47.9227 289.808 mo
46.1878 288.82 li
46.1878 287.108 li
47.9227 288.096 li
47.9227 289.808 li
cp
f
51.3926 291.784 mo
49.6577 290.796 li
49.6577 289.084 li
51.3926 290.073 li
51.3926 291.784 li
cp
f
54.8302 293.742 mo
53.0953 292.754 li
53.0953 291.042 li
54.8302 292.03 li
54.8302 293.742 li
cp
f
75.6587 310.19 mo
77.9986 308.84 li
77.9986 309.556 li
77.2158 310.008 li
77.2158 312.307 li
76.4168 312.768 li
76.4168 310.47 li
75.6587 310.907 li
75.6587 310.19 li
cp
f
79.3507 309.867 mo
79.1324 309.186 li
78.8812 310.138 li
79.3507 309.867 li
cp
78.6504 308.463 mo
79.5939 307.918 li
80.5083 310.406 li
79.6885 310.879 li
79.5114 310.454 li
78.7 310.923 li
78.5269 311.55 li
77.7072 312.023 li
78.6504 308.463 li
cp
f
81.5233 306.805 mo
81.956 307.391 li
82.3887 306.305 li
83.2742 305.794 li
82.3555 307.844 li
83.2537 308.821 li
82.3679 309.332 li
81.956 308.763 li
81.5357 309.813 li
80.6502 310.324 li
81.5521 308.308 li
80.6378 307.316 li
81.5233 306.805 li
cp
f
83.5187 305.652 mo
84.3177 305.191 li
84.3177 308.207 li
83.5187 308.668 li
83.5187 305.652 li
cp
f
361.412 299.595 mo
361.972 299.269 li
361.972 299.427 361.916 299.538 361.826 299.59 cv
361.266 299.915 li
361.356 299.863 361.412 299.752 361.412 299.595 cv
361.412 299.595 li
cp
.584314 .584314 .584314 rgb
f
358.724 294.055 mo
359.284 293.73 li
359.355 293.689 359.448 293.684 359.551 293.723 cv
358.992 294.048 li
358.888 294.009 358.795 294.014 358.724 294.055 cv
358.724 294.055 li
cp
f
358.992 294.048 mo
359.551 293.723 li
359.58 293.733 359.61 293.747 359.64 293.765 cv
359.08 294.09 li
359.05 294.073 359.02 294.059 358.992 294.048 cv
358.992 294.048 li
cp
.666667 .666667 .666667 rgb
f
361.423 296.019 mo
361.982 295.694 li
361.972 299.269 li
361.412 299.595 li
361.423 296.019 li
cp
.556863 .556863 .556863 rgb
f
359.08 294.09 mo
359.64 293.765 li
361.482 294.828 li
360.922 295.154 li
359.08 294.09 li
cp
.666667 .666667 .666667 rgb
f
360.922 295.154 mo
361.482 294.828 li
361.641 294.92 361.783 295.087 361.875 295.273 cv
361.315 295.599 li
361.223 295.413 361.081 295.246 360.922 295.154 cv
360.922 295.154 li
cp
f
361.315 295.599 mo
361.875 295.273 li
361.942 295.411 361.983 295.559 361.982 295.694 cv
361.423 296.019 li
361.423 295.884 361.383 295.736 361.315 295.599 cv
361.315 295.599 li
cp
.584314 .584314 .584314 rgb
f
360.922 295.154 mo
361.199 295.313 361.424 295.701 361.423 296.019 cv
361.412 299.595 li
361.412 299.913 361.186 300.04 360.909 299.88 cv
359.067 298.817 li
358.79 298.657 358.567 298.27 358.568 297.952 cv
358.578 294.377 li
358.579 294.059 358.804 293.93 359.08 294.09 cv
360.922 295.154 li
cp
.94902 .94902 .94902 rgb
f
363.494 300.371 mo
364.01 300.071 li
363.787 300.281 li
363.271 300.581 li
363.494 300.371 li
cp
.00784314 .380392 .54902 rgb
f
361.413 297.403 mo
361.929 297.103 li
364.037 300.111 li
363.521 300.41 li
361.413 297.403 li
cp
.666667 .666667 .666667 rgb
f
361.413 297.403 mo
361.413 297.939 li
363.271 300.581 li
363.494 300.371 li
361.413 297.403 li
cp
.94902 .94902 .94902 rgb
f
391.454 316.681 mo
390.598 316.184 389.445 316.199 388.163 316.822 cv
388.025 316.889 387.884 316.963 387.743 317.045 cv
385.882 318.119 384.252 320.183 383.334 322.402 cv
382.831 323.616 382.542 324.877 382.545 326.047 cv
382.55 327.691 383.131 328.848 384.067 329.392 cv
387.599 331.445 li
386.663 330.901 386.082 329.744 386.078 328.1 cv
386.074 326.93 386.363 325.669 386.866 324.455 cv
387.784 322.236 389.414 320.172 391.275 319.098 cv
391.417 319.016 391.557 318.941 391.695 318.874 cv
392.977 318.252 394.13 318.237 394.986 318.734 cv
391.454 316.681 li
cp
.00392157 .109804 .168627 rgb
f
391.275 319.098 mo
394.155 317.435 396.498 318.77 396.507 322.079 cv
396.516 325.388 394.189 329.419 391.309 331.082 cv
388.429 332.744 386.087 331.409 386.078 328.1 cv
386.068 324.791 388.395 320.76 391.275 319.098 cv
cp
.760784 .760784 .760784 rgb
f
391.275 319.098 mo
394.155 317.435 396.498 318.77 396.507 322.079 cv
396.516 325.388 394.189 329.419 391.309 331.082 cv
388.429 332.744 386.087 331.409 386.078 328.1 cv
386.068 324.791 388.395 320.76 391.275 319.098 cv
cp
.00784314 .313726 .454902 rgb
f
391.284 322.305 mo
392.623 321.532 393.711 322.153 393.716 323.69 cv
393.72 325.228 392.639 327.102 391.3 327.874 cv
389.962 328.647 388.873 328.026 388.869 326.489 cv
388.865 324.951 389.946 323.078 391.284 322.305 cv
cp
.760784 .760784 .760784 rgb
f
427.915 296.569 mo
427.06 296.071 425.907 296.086 424.625 296.709 cv
424.486 296.776 424.346 296.85 424.205 296.932 cv
422.344 298.007 420.713 300.07 419.795 302.289 cv
419.293 303.504 419.004 304.764 419.007 305.935 cv
419.012 307.579 419.592 308.735 420.528 309.279 cv
424.061 311.332 li
423.125 310.788 422.544 309.631 422.54 307.987 cv
422.536 306.817 422.825 305.556 423.328 304.342 cv
424.246 302.123 425.876 300.059 427.737 298.985 cv
427.879 298.903 428.019 298.829 428.157 298.761 cv
429.439 298.139 430.592 298.124 431.448 298.621 cv
427.915 296.569 li
cp
.00392157 .109804 .168627 rgb
f
427.737 298.985 mo
430.617 297.322 432.959 298.657 432.969 301.966 cv
432.978 305.275 430.651 309.306 427.771 310.969 cv
424.891 312.631 422.549 311.297 422.54 307.987 cv
422.53 304.678 424.857 300.647 427.737 298.985 cv
cp
.760784 .760784 .760784 rgb
f
427.737 298.985 mo
430.617 297.322 432.959 298.657 432.969 301.966 cv
432.978 305.275 430.651 309.306 427.771 310.969 cv
424.891 312.631 422.549 311.297 422.54 307.987 cv
422.53 304.678 424.857 300.647 427.737 298.985 cv
cp
.00784314 .313726 .454902 rgb
f
427.746 302.192 mo
429.085 301.42 430.173 302.04 430.177 303.578 cv
430.182 305.115 429.1 306.989 427.762 307.761 cv
426.424 308.534 425.335 307.914 425.331 306.376 cv
425.327 304.838 426.408 302.965 427.746 302.192 cv
cp
.760784 .760784 .760784 rgb
f
384.03 301.016 mo
362.931 288.766 li
362.943 306.95 li
384.042 319.135 li
384.03 301.016 li
cp
.992157 .721569 .0745098 rgb
f
364.787 304.455 mo
364.155 304.084 363.637 303.18 363.636 302.447 cv
363.625 294.654 li
363.624 293.921 364.14 293.625 364.773 293.996 cv
381.882 304.04 li
382.515 304.411 383.033 305.314 383.034 306.048 cv
383.045 313.84 li
383.046 314.573 382.529 314.87 381.897 314.499 cv
364.787 304.455 li
cp
.00784314 .313726 .454902 rgb
f
382.412 314.392 mo
382.301 314.392 382.169 314.349 382.032 314.269 cv
364.922 304.225 li
364.37 303.901 363.903 303.087 363.902 302.447 cv
363.891 294.654 li
363.891 294.446 363.941 294.281 364.033 294.189 cv
364.091 294.131 364.165 294.103 364.257 294.103 cv
364.369 294.103 364.5 294.145 364.638 294.226 cv
381.747 304.27 li
382.299 304.594 382.766 305.408 382.767 306.048 cv
382.778 313.841 li
382.779 314.048 382.728 314.214 382.636 314.306 cv
382.578 314.364 382.505 314.392 382.412 314.392 cv
cp
.396078 .784314 .815686 rgb
f
443.694 266.381 mo
435.239 261.471 li
435.239 261.471 li
425.622 255.888 li
423.957 254.921 421.233 254.921 419.569 255.888 cv
409.953 261.471 li
409.953 261.471 li
362.947 288.766 li
373.497 294.891 li
381.02 299.259 li
381.02 299.259 li
384.046 301.016 li
387.073 299.259 li
387.073 299.259 li
440.668 268.138 li
440.668 268.138 li
443.694 266.381 li
cp
1 .823529 .160784 rgb
f
384.046 301.016 mo
384.046 304.516 li
384.046 326.185 li
384.046 329.685 li
401.816 319.369 li
440.668 296.814 li
442.332 295.848 443.694 293.482 443.694 291.557 cv
443.694 285.095 li
443.694 269.881 li
443.694 266.381 li
384.046 301.016 li
cp
.992157 .721569 .0745098 rgb
f
443.694 282.137 mo
384.046 316.772 li
384.046 318.044 li
443.694 283.417 li
443.694 282.137 li
cp
.223529 .235294 .254902 rgb
f
443.694 284.919 mo
384.046 319.554 li
384.046 320.826 li
443.694 286.198 li
443.694 284.919 li
cp
f
396.065 298.387 mo
396.065 297.612 395.516 297.295 394.845 297.683 cv
386.478 302.445 li
385.807 302.833 385.258 303.784 385.258 304.558 cv
385.258 313.106 li
385.258 313.88 385.807 314.197 386.478 313.81 cv
394.845 309.047 li
395.516 308.659 396.065 307.708 396.065 306.934 cv
396.065 298.387 li
cp
.00784314 .313726 .454902 rgb
f
385.49 304.692 mo
385.49 303.918 386.039 302.967 386.71 302.579 cv
394.613 298.085 li
395.284 297.698 395.833 298.014 395.833 298.789 cv
395.833 306.799 li
395.833 307.574 395.284 308.525 394.613 308.912 cv
386.71 313.408 li
386.039 313.795 385.49 313.478 385.49 312.703 cv
385.49 304.692 li
cp
.396078 .784314 .815686 rgb
f
407.56 291.674 mo
407.56 290.9 407.012 290.583 406.341 290.97 cv
397.973 295.733 li
397.302 296.121 396.753 297.071 396.753 297.846 cv
396.753 306.393 li
396.753 307.168 397.302 307.485 397.973 307.097 cv
406.341 302.334 li
407.012 301.947 407.56 300.996 407.56 300.221 cv
407.56 291.674 li
cp
.00784314 .313726 .454902 rgb
f
396.985 297.98 mo
396.985 297.205 397.534 296.254 398.205 295.867 cv
406.108 291.372 li
406.779 290.985 407.328 291.302 407.328 292.077 cv
407.328 300.087 li
407.328 300.862 406.779 301.813 406.109 302.2 cv
398.205 306.695 li
397.534 307.083 396.985 306.766 396.985 305.991 cv
396.985 297.98 li
cp
.396078 .784314 .815686 rgb
f
419.209 284.934 mo
419.209 284.159 418.66 283.842 417.989 284.229 cv
409.621 288.992 li
408.951 289.379 408.402 290.33 408.402 291.105 cv
408.402 299.652 li
408.402 300.427 408.95 300.744 409.621 300.357 cv
417.989 295.593 li
418.66 295.206 419.209 294.255 419.209 293.48 cv
419.209 284.934 li
cp
.00784314 .313726 .454902 rgb
f
408.634 291.239 mo
408.634 290.464 409.183 289.514 409.854 289.126 cv
417.757 284.632 li
418.428 284.244 418.977 284.561 418.977 285.336 cv
418.977 293.346 li
418.977 294.121 418.428 295.072 417.757 295.459 cv
409.854 299.954 li
409.183 300.342 408.634 300.025 408.634 299.25 cv
408.634 291.239 li
cp
.396078 .784314 .815686 rgb
f
430.949 278.185 mo
430.949 277.41 430.401 277.093 429.73 277.481 cv
421.362 282.243 li
420.691 282.631 420.142 283.582 420.142 284.356 cv
420.142 292.904 li
420.142 293.678 420.691 293.995 421.362 293.608 cv
429.73 288.845 li
430.401 288.457 430.949 287.506 430.949 286.732 cv
430.949 278.185 li
cp
.00784314 .313726 .454902 rgb
f
420.374 284.49 mo
420.374 283.716 420.923 282.765 421.594 282.378 cv
429.497 277.883 li
430.168 277.496 430.717 277.812 430.717 278.587 cv
430.717 286.597 li
430.717 287.372 430.168 288.323 429.497 288.71 cv
421.594 293.206 li
420.923 293.593 420.374 293.276 420.374 292.501 cv
420.374 284.49 li
cp
.396078 .784314 .815686 rgb
f
442.713 271.477 mo
442.713 270.702 442.164 270.385 441.493 270.773 cv
433.125 275.536 li
432.454 275.923 431.905 276.874 431.905 277.648 cv
431.905 286.196 li
431.905 286.97 432.454 287.287 433.125 286.9 cv
441.493 282.137 li
442.164 281.749 442.713 280.798 442.713 280.024 cv
442.713 271.477 li
cp
.00784314 .313726 .454902 rgb
f
432.137 277.783 mo
432.137 277.008 432.686 276.057 433.357 275.67 cv
441.261 271.175 li
441.931 270.788 442.48 271.104 442.48 271.879 cv
442.48 279.889 li
442.48 280.664 441.931 281.615 441.261 282.003 cv
433.357 286.498 li
432.686 286.885 432.137 286.568 432.137 285.793 cv
432.137 277.783 li
cp
.396078 .784314 .815686 rgb
f
384.047 316.23 mo
383.14 316.755 li
371.61 326.21 li
371.598 336.906 li
384.047 329.685 li
384.047 316.23 li
cp
.992157 .721569 .0745098 rgb
f
371.61 326.21 mo
371.598 336.906 li
351.161 325.107 li
351.173 314.411 li
371.61 326.21 li
cp
f
365.615 322.72 mo
356.546 317.484 li
356.546 328.187 li
365.615 333.423 li
365.615 322.72 li
cp
.870588 .588235 .0666667 rgb
f
357.233 320.366 mo
357.233 318.674 li
364.928 323.117 li
364.928 324.809 li
357.233 320.366 li
cp
.223529 .235294 .254902 rgb
f
357.233 323.014 mo
357.233 321.322 li
364.928 325.765 li
364.928 327.457 li
357.233 323.014 li
cp
f
357.233 325.471 mo
357.233 323.779 li
364.928 328.222 li
364.928 329.914 li
357.233 325.471 li
cp
f
362.95 304.02 mo
351.173 314.411 li
371.61 326.21 li
384.047 316.23 li
362.95 304.02 li
cp
1 .823529 .160784 rgb
f
362.95 304.02 mo
356.551 317.516 li
365.615 322.72 li
384.047 316.23 li
362.95 304.02 li
cp
.992157 .670588 .0745098 rgb
f
371.61 334.285 mo
371.598 336.906 li
351.161 325.107 li
351.173 322.486 li
371.61 334.285 li
cp
.223529 .235294 .254902 rgb
f
364.006 291.121 mo
364.006 290.686 364.292 290.651 364.664 290.843 cv
365.155 291.096 365.448 291.315 365.694 291.547 cv
365.694 292.049 li
365.481 291.903 365.116 291.682 364.897 291.555 cv
364.717 291.452 364.651 291.42 364.651 291.56 cv
364.651 291.596 li
364.651 291.699 364.671 291.767 364.85 291.871 cv
365.162 292.051 li
365.667 292.342 365.783 292.848 365.783 293.114 cv
365.783 293.223 li
365.783 293.841 365.438 293.768 365.109 293.578 cv
364.488 293.219 364.415 293.177 364.083 292.872 cv
364.083 292.371 li
364.215 292.461 364.634 292.726 364.943 292.904 cv
365.086 292.987 365.139 292.981 365.139 292.881 cv
365.139 292.828 li
365.139 292.732 365.109 292.665 364.963 292.58 cv
364.664 292.408 li
364.033 292.043 364.006 291.48 364.006 291.324 cv
364.006 291.121 li
cp
f
366.808 292.074 mo
367.286 292.35 367.399 292.442 367.685 292.713 cv
367.685 293.215 li
367.681 293.213 367.349 292.965 367.007 292.767 cv
366.728 292.606 366.612 292.526 366.612 293.203 cv
366.612 293.748 366.675 293.898 367.01 294.091 cv
367.359 294.293 367.685 294.451 367.685 294.451 cv
367.685 294.952 li
367.479 294.92 367.3 294.846 366.808 294.552 cv
366.193 294.188 365.967 293.642 365.967 292.825 cv
365.967 292.047 366.147 291.692 366.808 292.074 cv
cp
f
367.898 292.73 mo
368.543 293.102 li
368.543 294.069 li
369.107 294.395 li
369.107 293.428 li
369.752 293.801 li
369.752 296.232 li
369.107 295.86 li
369.107 294.973 li
368.543 294.647 li
368.543 295.534 li
367.898 295.162 li
367.898 292.73 li
cp
f
370.992 296.383 mo
371.278 296.548 371.354 296.473 371.354 295.958 cv
371.354 295.393 371.294 295.252 370.992 295.078 cv
370.7 294.909 370.63 294.945 370.63 295.54 cv
370.63 296.048 370.667 296.195 370.992 296.383 cv
cp
370.992 294.5 mo
371.567 294.832 371.999 295.191 371.999 296.33 cv
371.999 297.403 371.59 297.306 370.992 296.961 cv
370.394 296.616 369.985 296.274 369.985 295.168 cv
369.985 294.028 370.434 294.177 370.992 294.5 cv
cp
f
373.192 297.654 mo
373.478 297.819 373.554 297.743 373.554 297.228 cv
373.554 296.663 373.495 296.523 373.192 296.348 cv
372.9 296.179 372.83 296.215 372.83 296.81 cv
372.83 297.318 372.867 297.466 373.192 297.654 cv
cp
373.192 295.77 mo
373.767 296.102 374.199 296.461 374.199 297.6 cv
374.199 298.673 373.79 298.577 373.192 298.232 cv
372.594 297.886 372.186 297.544 372.186 296.438 cv
372.186 295.298 372.634 295.448 373.192 295.77 cv
cp
f
374.429 296.501 mo
375.074 296.873 li
375.074 298.554 li
375.074 298.73 375.183 298.79 375.28 298.845 cv
375.964 299.241 li
375.964 299.819 li
374.981 299.251 li
374.678 299.076 374.429 298.79 374.429 298.414 cv
374.429 296.501 li
cp
f
378.048 300.477 mo
378.174 300.55 378.211 300.485 378.211 300.339 cv
378.211 300.216 378.178 300.08 378.048 300.006 cv
377.653 299.777 li
377.653 300.249 li
378.048 300.477 li
cp
378.015 299.475 mo
378.115 299.532 378.165 299.485 378.165 299.392 cv
378.165 299.246 378.088 299.158 378.015 299.116 cv
377.653 298.907 li
377.653 299.266 li
378.015 299.475 li
cp
377.009 297.99 mo
378.065 298.6 li
378.583 298.899 378.796 299.274 378.796 299.686 cv
378.796 299.892 378.679 300.104 378.44 299.986 cv
378.69 300.17 378.856 300.491 378.856 300.744 cv
378.856 301.289 378.593 301.337 378.082 301.041 cv
377.009 300.422 li
377.009 297.99 li
cp
f
379.04 299.163 mo
379.684 299.535 li
379.684 300.903 li
379.684 301.216 379.691 301.409 380.006 301.591 cv
380.302 301.762 380.308 301.563 380.308 301.264 cv
380.308 299.895 li
380.956 300.269 li
380.956 301.638 li
380.956 302.711 380.408 302.401 380.006 302.169 cv
379.554 301.908 379.04 301.637 379.04 300.531 cv
379.04 299.163 li
cp
f
381.19 301.042 mo
381.19 300.607 381.476 300.572 381.847 300.764 cv
382.338 301.017 382.631 301.236 382.877 301.468 cv
382.877 301.97 li
382.665 301.823 382.299 301.603 382.08 301.476 cv
381.901 301.373 381.834 301.341 381.834 301.48 cv
381.834 301.517 li
381.834 301.62 381.854 301.688 382.034 301.792 cv
382.346 301.972 li
382.851 302.263 382.967 302.769 382.967 303.035 cv
382.967 303.144 li
382.967 303.762 382.622 303.689 382.293 303.499 cv
381.671 303.14 381.598 303.098 381.266 302.793 cv
381.266 302.292 li
381.399 302.382 381.818 302.647 382.127 302.825 cv
382.269 302.908 382.322 302.902 382.322 302.802 cv
382.322 302.749 li
382.322 302.652 382.293 302.586 382.146 302.501 cv
381.847 302.328 li
381.216 301.964 381.19 301.401 381.19 301.245 cv
381.19 301.042 li
cp
f
354.97 322.515 mo
354.658 322.515 354.296 322.401 353.923 322.186 cv
353.852 322.145 li
352.647 321.45 351.667 319.91 351.667 318.713 cv
351.667 317.989 352.019 317.574 352.632 317.574 cv
352.945 317.574 353.307 317.687 353.679 317.903 cv
353.75 317.943 li
354.955 318.639 355.935 320.179 355.935 321.376 cv
355.935 322.1 355.583 322.515 354.97 322.515 cv
cp
.00784314 .313726 .454902 rgb
f
354.97 322.275 mo
354.7 322.275 354.379 322.172 354.043 321.978 cv
353.972 321.937 li
352.853 321.291 351.907 319.815 351.907 318.713 cv
351.907 318.303 352.033 317.814 352.632 317.814 cv
352.902 317.814 353.223 317.917 353.559 318.111 cv
353.63 318.151 li
354.749 318.797 355.695 320.274 355.695 321.376 cv
355.695 321.786 355.569 322.275 354.97 322.275 cv
cp
.396078 .784314 .815686 rgb
f
369.429 330.395 mo
369.117 330.395 368.754 330.281 368.382 330.066 cv
368.311 330.025 li
367.106 329.329 366.126 327.79 366.126 326.592 cv
366.126 325.868 366.478 325.453 367.091 325.453 cv
367.404 325.453 367.766 325.567 368.138 325.782 cv
368.209 325.823 li
369.414 326.519 370.394 328.059 370.394 329.256 cv
370.394 329.979 370.042 330.395 369.429 330.395 cv
cp
.00784314 .313726 .454902 rgb
f
369.429 330.154 mo
369.159 330.154 368.838 330.052 368.502 329.858 cv
368.431 329.817 li
367.312 329.171 366.366 327.694 366.366 326.592 cv
366.366 326.182 366.492 325.694 367.091 325.694 cv
367.361 325.694 367.682 325.796 368.018 325.99 cv
368.089 326.031 li
369.208 326.677 370.154 328.154 370.154 329.256 cv
370.154 329.666 370.028 330.154 369.429 330.154 cv
cp
.396078 .784314 .815686 rgb
f
388.228 311.506 mo
385.019 312.502 li
384.188 312.986 li
388.228 311.746 li
388.228 311.506 li
cp
.709804 .709804 .709804 rgb
f
388.228 311.746 mo
384.188 312.986 li
384.544 313.738 li
388.228 312.605 li
388.228 311.746 li
cp
.933333 .929412 .882353 rgb
f
389.187 315.664 mo
389.747 315.338 li
389.746 315.496 389.69 315.607 389.601 315.659 cv
389.041 315.985 li
389.131 315.932 389.186 315.822 389.187 315.664 cv
389.187 315.664 li
cp
.584314 .584314 .584314 rgb
f
386.498 310.124 mo
387.058 309.799 li
387.129 309.758 387.222 309.753 387.326 309.792 cv
386.766 310.117 li
386.662 310.079 386.57 310.083 386.498 310.124 cv
386.498 310.124 li
cp
f
386.766 310.117 mo
387.326 309.792 li
387.355 309.802 387.384 309.817 387.415 309.834 cv
386.855 310.159 li
386.824 310.142 386.795 310.128 386.766 310.117 cv
386.766 310.117 li
cp
.666667 .666667 .666667 rgb
f
389.197 312.088 mo
389.757 311.763 li
389.747 315.338 li
389.187 315.664 li
389.197 312.088 li
cp
.556863 .556863 .556863 rgb
f
386.855 310.159 mo
387.415 309.834 li
389.256 310.897 li
388.697 311.223 li
386.855 310.159 li
cp
.666667 .666667 .666667 rgb
f
388.697 311.223 mo
389.256 310.897 li
389.416 310.989 389.557 311.157 389.649 311.342 cv
389.089 311.668 li
388.998 311.482 388.856 311.315 388.697 311.223 cv
388.697 311.223 li
cp
f
389.089 311.668 mo
389.649 311.342 li
389.717 311.48 389.757 311.628 389.757 311.763 cv
389.197 312.088 li
389.197 311.953 389.157 311.805 389.089 311.668 cv
389.089 311.668 li
cp
.584314 .584314 .584314 rgb
f
388.697 311.223 mo
388.973 311.383 389.198 311.77 389.197 312.088 cv
389.187 315.664 li
389.186 315.982 388.96 316.109 388.683 315.95 cv
386.841 314.886 li
386.565 314.726 386.341 314.339 386.342 314.021 cv
386.352 310.446 li
386.353 310.128 386.578 310 386.855 310.159 cv
388.697 311.223 li
cp
.94902 .94902 .94902 rgb
f
207.864 288.237 mo
207.131 287.811 li
206.877 287.663 206.525 287.684 206.137 287.908 cv
206.871 288.334 li
207.259 288.11 207.611 288.089 207.864 288.237 cv
cp
.980392 .984314 .992157 rgb
f
gsave
207.864 288.237 mo
207.131 287.811 li
206.877 287.663 206.525 287.684 206.137 287.908 cv
206.871 288.334 li
207.259 288.11 207.611 288.089 207.864 288.237 cv
cp
clp
207.864 288.237 mo
207.131 287.811 li
206.877 287.663 206.525 287.684 206.137 287.908 cv
206.871 288.334 li
207.259 288.11 207.611 288.089 207.864 288.237 cv
207.864 288.237 li
cp
f
grestore
202.601 292.685 mo
203.334 293.111 li
203.232 293.052 203.146 292.966 203.08 292.855 cv
202.346 292.429 li
202.413 292.539 202.499 292.625 202.601 292.685 cv
cp
f
gsave
202.601 292.685 mo
203.334 293.111 li
203.232 293.052 203.146 292.966 203.08 292.855 cv
202.346 292.429 li
202.413 292.539 202.499 292.625 202.601 292.685 cv
cp
clp
203.08 292.855 mo
202.346 292.429 li
202.413 292.539 202.499 292.625 202.601 292.685 cv
203.334 293.111 li
203.232 293.052 203.146 292.966 203.08 292.855 cv
203.08 292.855 li
cp
f
grestore
202.922 292.216 mo
202.188 291.79 li
202.195 291.885 li
202.929 292.312 li
202.922 292.216 li
cp
f
206.871 288.334 mo
206.137 287.908 li
203.576 289.387 li
204.309 289.813 li
206.871 288.334 li
cp
f
201 295.112 mo
200.266 294.685 li
200.583 294.984 li
201.317 295.41 li
201 295.112 li
cp
f
202.929 292.312 mo
202.195 291.885 li
200.266 294.685 li
201 295.112 li
202.929 292.312 li
cp
f
204.309 289.813 mo
203.576 289.387 li
202.805 289.832 202.186 290.908 202.188 291.79 cv
202.922 292.216 li
202.919 291.334 203.538 290.258 204.309 289.813 cv
cp
f
gsave
204.309 289.813 mo
203.576 289.387 li
202.805 289.832 202.186 290.908 202.188 291.79 cv
202.922 292.216 li
202.919 291.334 203.538 290.258 204.309 289.813 cv
cp
clp
204.309 289.813 mo
203.576 289.387 li
203.507 289.427 203.439 289.472 203.372 289.521 cv
204.106 289.947 li
204.172 289.898 204.24 289.853 204.309 289.813 cv
204.309 289.813 li
cp
f
204.106 289.947 mo
203.372 289.521 li
202.791 289.955 202.329 290.733 202.215 291.454 cv
202.949 291.88 li
203.063 291.159 203.524 290.381 204.106 289.947 cv
204.106 289.947 li
cp
f
202.949 291.88 mo
202.215 291.454 li
202.197 291.568 202.188 291.68 202.188 291.79 cv
202.922 292.216 li
202.921 292.107 202.931 291.994 202.949 291.88 cv
202.949 291.88 li
cp
f
grestore
204.309 289.813 mo
203.538 290.258 202.919 291.334 202.922 292.216 cv
202.929 292.312 li
201 295.112 li
201.317 295.41 li
203.08 292.855 li
203.311 293.238 203.777 293.328 204.318 293.016 cv
206.88 291.537 li
207.65 291.092 208.273 290.014 208.27 289.128 cv
208.268 288.246 207.641 287.889 206.871 288.334 cv
204.309 289.813 li
cp
.862745 .862745 .862745 rgb
f
140.663 302.364 mo
141.445 301.91 142.499 301.923 143.671 302.492 cv
143.797 302.554 143.926 302.622 144.055 302.696 cv
145.756 303.678 147.246 305.565 148.086 307.593 cv
148.545 308.703 148.809 309.856 148.806 310.926 cv
148.802 312.428 148.271 313.486 147.415 313.983 cv
144.187 315.859 li
145.042 315.362 145.573 314.305 145.577 312.802 cv
145.58 311.732 145.316 310.58 144.857 309.47 cv
144.018 307.441 142.527 305.555 140.826 304.573 cv
140.697 304.498 140.569 304.43 140.442 304.368 cv
139.27 303.799 138.216 303.786 137.434 304.241 cv
140.663 302.364 li
cp
.00392157 .109804 .168627 rgb
f
140.826 304.573 mo
138.193 303.053 136.052 304.273 136.044 307.298 cv
136.035 310.323 138.162 314.008 140.795 315.527 cv
143.427 317.047 145.569 315.827 145.577 312.802 cv
145.586 309.777 143.458 306.092 140.826 304.573 cv
cp
.00784314 .313726 .454902 rgb
f
140.818 307.682 mo
139.594 306.976 138.599 307.543 138.595 308.949 cv
138.591 310.355 139.58 312.067 140.803 312.773 cv
142.027 313.48 143.022 312.913 143.026 311.507 cv
143.03 310.101 142.041 308.389 140.818 307.682 cv
cp
.760784 .760784 .760784 rgb
f
173.639 321.63 mo
174.421 321.176 175.475 321.189 176.646 321.758 cv
176.773 321.82 176.901 321.888 177.03 321.962 cv
178.732 322.945 180.222 324.831 181.061 326.859 cv
181.52 327.969 181.785 329.122 181.782 330.192 cv
181.777 331.694 181.247 332.752 180.391 333.249 cv
177.162 335.125 li
178.018 334.628 178.549 333.571 178.553 332.068 cv
178.556 330.998 178.292 329.846 177.832 328.736 cv
176.993 326.707 175.503 324.821 173.802 323.839 cv
173.672 323.764 173.544 323.696 173.418 323.634 cv
172.246 323.065 171.192 323.052 170.41 323.507 cv
173.639 321.63 li
cp
.00392157 .109804 .168627 rgb
f
173.802 323.839 mo
171.169 322.319 169.028 323.539 169.019 326.564 cv
169.011 329.589 171.138 333.274 173.77 334.793 cv
176.403 336.313 178.544 335.093 178.553 332.068 cv
178.561 329.043 176.434 325.359 173.802 323.839 cv
cp
.00784314 .313726 .454902 rgb
f
173.793 326.771 mo
172.57 326.064 171.575 326.631 171.571 328.037 cv
171.567 329.443 172.555 331.155 173.779 331.862 cv
175.002 332.568 175.997 332.001 176.001 330.595 cv
176.005 329.189 175.017 327.477 173.793 326.771 cv
cp
.760784 .760784 .760784 rgb
f
184.159 336.906 mo
209.591 322.126 li
209.613 312.757 li
184.181 327.537 li
184.159 336.906 li
cp
.862745 .862745 .862745 rgb
f
200.137 289.843 mo
209.613 312.757 li
184.181 327.537 li
174.705 304.622 li
200.137 289.843 li
cp
f
203.538 306.506 mo
204.524 305.933 204.995 304.593 204.585 303.529 cv
200.778 293.919 li
200.369 292.855 199.227 292.453 198.241 293.026 cv
178.421 304.543 li
177.435 305.116 176.942 306.464 177.324 307.538 cv
180.812 317.355 li
181.194 318.429 182.314 318.84 183.3 318.267 cv
203.538 306.506 li
cp
.631373 .611765 .678431 rgb
f
182.38 318.215 mo
181.805 318.215 181.316 317.846 181.104 317.251 cv
177.617 307.434 li
177.286 306.507 177.726 305.306 178.577 304.812 cv
198.397 293.294 li
198.643 293.151 198.912 293.075 199.174 293.075 cv
199.758 293.075 200.262 293.441 200.489 294.03 cv
204.297 303.644 li
204.648 304.556 204.229 305.745 203.382 306.237 cv
183.144 317.998 li
182.9 318.14 182.636 318.215 182.38 318.215 cv
182.38 318.215 li
cp
.396078 .784314 .815686 rgb
f
174.705 304.622 mo
200.137 289.843 li
157.832 264.391 li
132.4 279.17 li
174.705 304.622 li
cp
.980392 .984314 .992157 rgb
f
184.181 327.537 mo
174.705 304.622 li
132.4 279.17 li
132.308 305.836 li
184.159 336.906 li
184.181 327.537 li
184.181 327.537 li
cp
.819608 .819608 .819608 rgb
f
191.139 326.116 mo
202.893 319.329 li
202.893 323.057 li
191.139 329.877 li
191.139 326.116 li
cp
.00392157 .109804 .168627 rgb
f
205.018 322.209 mo
204.226 322.209 203.772 321.673 203.772 320.738 cv
203.772 319.191 205.037 317.202 206.593 316.303 cv
206.686 316.25 li
207.167 315.973 207.635 315.826 208.039 315.826 cv
208.831 315.826 209.285 316.362 209.285 317.297 cv
209.285 318.844 208.018 320.833 206.462 321.731 cv
206.37 321.784 li
205.889 322.062 205.422 322.209 205.018 322.209 cv
cp
.631373 .611765 .678431 rgb
f
205.018 321.899 mo
205.367 321.899 205.781 321.766 206.215 321.516 cv
206.307 321.463 li
207.753 320.628 208.974 318.721 208.974 317.297 cv
208.974 316.768 208.812 316.136 208.039 316.136 cv
207.689 316.136 207.274 316.269 206.841 316.519 cv
206.749 316.572 li
205.303 317.407 204.082 319.314 204.082 320.738 cv
204.082 321.267 204.244 321.899 205.018 321.899 cv
cp
.992157 .721569 .0745098 rgb
f
186.307 332.953 mo
185.515 332.953 185.061 332.417 185.061 331.482 cv
185.061 329.935 186.327 327.946 187.883 327.047 cv
187.975 326.994 li
188.457 326.717 188.924 326.57 189.328 326.57 cv
190.12 326.57 190.574 327.106 190.574 328.041 cv
190.574 329.588 189.308 331.577 187.752 332.475 cv
187.66 332.528 li
187.179 332.806 186.711 332.953 186.307 332.953 cv
cp
.631373 .611765 .678431 rgb
f
186.307 332.643 mo
186.657 332.643 187.071 332.51 187.505 332.259 cv
187.597 332.207 li
189.043 331.372 190.264 329.465 190.264 328.041 cv
190.264 327.512 190.102 326.88 189.328 326.88 cv
188.978 326.88 188.564 327.013 188.13 327.263 cv
188.038 327.316 li
186.593 328.151 185.372 330.058 185.372 331.482 cv
185.372 332.011 185.534 332.643 186.307 332.643 cv
cp
.992157 .721569 .0745098 rgb
f
164.998 300.186 mo
164.101 299.669 163.365 300.092 163.363 301.127 cv
163.341 308.585 li
163.338 309.62 164.069 310.891 164.966 311.409 cv
175.873 317.703 li
176.769 318.221 177.216 317.848 176.866 316.874 cv
173.041 306.222 li
172.691 305.248 171.671 304.027 170.774 303.509 cv
164.998 300.186 li
cp
.631373 .611765 .678431 rgb
f
176.559 317.639 mo
176.484 317.639 176.313 317.614 176.022 317.446 cv
165.114 311.151 li
164.312 310.688 163.636 309.513 163.639 308.586 cv
163.66 301.128 li
163.661 300.586 163.891 300.263 164.273 300.263 cv
164.445 300.263 164.644 300.325 164.849 300.444 cv
170.626 303.767 li
171.458 304.248 172.436 305.418 172.761 306.322 cv
176.587 316.974 li
176.724 317.358 176.695 317.554 176.656 317.61 cv
176.651 317.617 176.635 317.639 176.56 317.639 cv
176.56 317.639 176.56 317.639 176.559 317.639 cv
cp
.396078 .784314 .815686 rgb
f
176.166 309.257 mo
175.319 308.765 li
173.083 308.111 li
173.929 308.603 li
176.166 309.257 li
cp
.980392 .984314 .992157 rgb
f
173.467 307.454 mo
172.621 306.962 li
172.329 306.793 171.924 306.816 171.479 307.073 cv
172.325 307.565 li
172.771 307.308 173.175 307.284 173.467 307.454 cv
173.467 307.454 li
cp
f
172.325 307.565 mo
171.479 307.073 li
168.519 308.782 li
169.366 309.274 li
172.325 307.565 li
cp
f
169.366 309.274 mo
168.519 308.782 li
168.44 308.828 168.362 308.879 168.286 308.936 cv
169.133 309.428 li
169.209 309.371 169.286 309.319 169.366 309.274 cv
169.366 309.274 li
cp
f
169.133 309.428 mo
168.286 308.936 li
167.616 309.435 167.081 310.335 166.949 311.169 cv
167.795 311.661 li
167.927 310.827 168.463 309.927 169.133 309.428 cv
169.133 309.428 li
cp
f
167.795 311.661 mo
166.949 311.169 li
166.929 311.3 166.918 311.429 166.918 311.555 cv
166.92 312.063 167.099 312.421 167.388 312.589 cv
168.235 313.081 li
167.945 312.913 167.766 312.555 167.764 312.047 cv
167.764 311.921 167.775 311.792 167.795 311.661 cv
167.795 311.661 li
cp
f
169.366 309.274 mo
168.48 309.785 167.762 311.029 167.764 312.047 cv
167.767 313.069 168.491 313.481 169.376 312.97 cv
172.335 311.261 li
172.96 310.9 173.496 310.176 173.759 309.429 cv
175.803 310.022 li
176.166 309.257 li
173.929 308.603 li
173.937 308.484 li
173.934 307.466 173.21 307.054 172.325 307.565 cv
169.366 309.274 li
cp
.862745 .862745 .862745 rgb
f
155.699 300.236 mo
155.699 297.039 153.108 292.952 149.912 291.107 cv
146.715 289.261 144.124 290.356 144.124 293.553 cv
144.124 296.749 146.715 300.836 149.912 302.682 cv
153.108 304.527 155.699 303.432 155.699 300.236 cv
cp
1 .290196 .223529 rgb
f
153.75 298.089 mo
151.01 296.508 li
151.01 293.768 li
148.39 292.256 li
148.39 294.995 li
145.651 293.413 li
145.651 296.034 li
148.39 297.615 li
148.39 300.354 li
151.01 301.867 li
151.01 299.128 li
153.75 300.709 li
153.75 298.089 li
cp
.980392 .984314 .992157 rgb
f
186.722 321.847 mo
186.433 321.216 li
186.308 322.087 li
186.722 321.847 li
cp
185.893 320.548 mo
186.716 320.073 li
187.893 322.371 li
187.169 322.792 li
186.947 322.393 li
186.23 322.81 li
186.139 323.392 li
185.411 323.816 li
185.893 320.548 li
cp
.890196 .215686 .176471 rgb
f
187.925 319.376 mo
188.888 318.82 li
189.335 320.217 li
189.344 318.558 li
190.302 318.005 li
191.009 320.556 li
190.322 320.956 li
189.914 319.565 li
189.922 321.189 li
189.12 321.656 li
188.671 320.286 li
188.722 321.888 li
188.029 322.292 li
187.925 319.376 li
cp
f
192.3 319.135 mo
192.435 319.056 192.458 318.937 192.431 318.774 cv
192.408 318.638 192.351 318.529 192.213 318.609 cv
191.789 318.855 li
191.876 319.381 li
192.3 319.135 li
cp
192.083 318.064 mo
192.189 318.002 192.228 317.887 192.211 317.785 cv
192.184 317.624 192.095 317.624 192.017 317.669 cv
191.632 317.892 li
191.697 318.287 li
192.083 318.064 li
cp
190.849 317.689 mo
191.971 317.042 li
192.52 316.725 192.792 316.87 192.869 317.32 cv
192.908 317.546 192.837 317.925 192.586 318.094 cv
192.859 317.985 193.078 318.131 193.127 318.411 cv
193.231 319.018 192.988 319.405 192.437 319.725 cv
191.281 320.398 li
190.849 317.689 li
cp
f
193.002 316.447 mo
193.682 316.055 li
193.947 317.547 li
194.008 317.891 194.053 318.096 194.389 317.901 cv
194.703 317.718 194.67 317.491 194.61 317.163 cv
194.339 315.676 li
195.02 315.283 li
195.296 316.765 li
195.516 317.945 194.933 318.292 194.504 318.542 cv
194.021 318.823 193.475 319.174 193.262 317.944 cv
193.002 316.447 li
cp
f
195.292 315.126 mo
195.966 314.737 li
196.316 316.552 li
196.353 316.744 196.468 316.673 196.57 316.614 cv
197.291 316.194 li
197.417 316.826 li
196.376 317.432 li
196.055 317.619 195.761 317.615 195.683 317.202 cv
195.292 315.126 li
cp
f
198.749 314.871 mo
198.42 314.281 li
198.353 315.1 li
198.749 314.871 li
cp
197.839 313.657 mo
198.627 313.202 li
199.948 315.352 li
199.255 315.756 li
199.008 315.382 li
198.322 315.781 li
198.27 316.329 li
197.572 316.735 li
197.839 313.657 li
cp
f
199.565 312.661 mo
200.236 312.274 li
201.244 313.165 li
200.949 311.863 li
201.61 311.482 li
202.2 314.041 li
201.53 314.431 li
200.517 313.563 li
200.803 314.854 li
200.126 315.248 li
199.565 312.661 li
cp
f
202.68 310.833 mo
203.167 310.553 203.289 310.513 203.606 310.455 cv
203.732 310.972 li
203.728 310.974 203.375 311.111 203.026 311.313 cv
202.741 311.478 202.618 311.533 202.786 312.24 cv
202.921 312.812 203.015 312.894 203.36 312.693 cv
203.719 312.484 204.046 312.259 204.046 312.259 cv
204.175 312.787 li
203.985 313.001 203.808 313.141 203.297 313.426 cv
202.659 313.786 202.322 313.48 202.121 312.617 cv
201.933 311.804 202.005 311.223 202.68 310.833 cv
cp
f
203.922 310.811 mo
203.795 310.296 204.168 310.007 204.406 309.869 cv
204.406 309.869 205.111 309.462 205.518 309.29 cv
205.66 309.841 li
204.76 310.362 li
204.585 310.463 204.61 310.562 204.633 310.654 cv
204.671 310.805 li
205.588 310.317 li
205.73 310.869 li
204.827 311.428 li
204.865 311.581 li
204.911 311.764 205.022 311.696 205.12 311.638 cv
205.993 311.132 li
206.137 311.693 li
205.799 311.945 205.073 312.38 205.073 312.38 cv
204.854 312.516 204.393 312.732 204.262 312.197 cv
203.922 310.811 li
cp
f
132.351 293.375 mo
132.337 297.295 li
184.012 327.13 li
181.878 321.969 li
132.351 293.375 li
cp
.85098 .247059 .192157 rgb
f
207.331 307.239 mo
181.867 321.941 li
184.013 327.13 li
209.477 312.428 li
207.331 307.239 li
cp
1 .290196 .223529 rgb
f
147.361 304.189 mo
147.085 303.154 li
146.79 303.859 li
147.361 304.189 li
cp
146.815 302.38 mo
147.349 302.688 li
148.146 305.602 li
147.646 305.313 li
147.472 304.669 li
146.668 304.205 li
146.492 304.646 li
145.988 304.355 li
146.815 302.38 li
cp
.980392 .984314 .992157 rgb
f
148.551 303.381 mo
149.202 303.758 li
149.61 305.67 li
150.017 304.228 li
150.667 304.604 li
150.897 307.19 li
150.434 306.922 li
150.273 305.192 li
149.877 306.601 li
149.354 306.299 li
148.943 304.424 li
148.798 305.978 li
148.334 305.71 li
148.551 303.381 li
cp
f
152.241 307.552 mo
152.383 307.634 152.512 307.641 152.512 307.38 cv
152.512 307.2 152.439 306.994 152.241 306.88 cv
151.709 306.573 li
151.709 307.245 li
152.241 307.552 li
cp
152.222 306.473 mo
152.391 306.57 152.48 306.52 152.48 306.344 cv
152.48 306.117 152.341 305.984 152.222 305.915 cv
151.709 305.619 li
151.709 306.177 li
152.222 306.473 li
cp
151.238 304.933 mo
152.25 305.517 li
152.758 305.81 152.942 306.22 152.942 306.572 cv
152.942 306.798 152.846 306.997 152.606 306.903 cv
152.811 307.058 152.981 307.36 152.981 307.672 cv
152.981 308.129 152.775 308.274 152.259 307.976 cv
151.238 307.387 li
151.238 304.933 li
cp
f
153.264 306.103 mo
153.733 306.374 li
153.733 307.754 li
153.733 308.315 153.857 308.483 154.209 308.686 cv
154.523 308.867 154.665 308.834 154.665 308.293 cv
154.665 306.912 li
155.137 307.184 li
155.137 308.565 li
155.137 309.648 154.615 309.353 154.209 309.119 cv
153.753 308.856 153.264 308.6 153.264 307.484 cv
153.264 306.103 li
cp
f
155.491 307.388 mo
155.96 307.659 li
155.96 309.506 li
155.96 309.684 156.071 309.744 156.168 309.8 cv
157.009 310.286 li
157.009 310.718 li
156.002 310.137 li
155.735 309.983 155.491 309.743 155.491 309.364 cv
155.491 307.388 li
cp
f
158.582 310.667 mo
158.306 309.632 li
158.012 310.338 li
158.582 310.667 li
cp
158.036 308.858 mo
158.57 309.166 li
159.367 312.08 li
158.867 311.792 li
158.693 311.147 li
157.89 310.683 li
157.713 311.125 li
157.209 310.834 li
158.036 308.858 li
cp
f
159.619 309.772 mo
160.095 310.047 li
161.068 312.194 li
161.068 310.609 li
161.537 310.879 li
161.537 313.333 li
161.068 313.062 li
160.092 310.931 li
160.092 312.498 li
159.619 312.225 li
159.619 309.772 li
cp
f
162.664 311.503 mo
163.007 311.701 163.254 311.877 163.518 312.108 cv
163.518 312.475 li
163.515 312.473 163.103 312.189 162.774 311.999 cv
162.431 311.801 162.298 311.803 162.298 312.546 cv
162.298 313.095 162.389 313.413 162.776 313.636 cv
163.128 313.839 163.518 314.037 163.518 314.037 cv
163.518 314.404 li
163.298 314.345 163.015 314.212 162.664 314.003 cv
162.043 313.64 161.829 313.046 161.829 312.268 cv
161.829 311.483 161.997 311.118 162.664 311.503 cv
cp
f
163.798 312.694 mo
163.798 312.268 164.1 312.354 164.331 312.492 cv
164.331 312.492 165.195 313.015 165.411 313.169 cv
165.411 313.557 li
164.442 312.998 li
164.268 312.897 164.268 312.995 164.268 313.085 cv
164.268 313.468 li
165.258 314.075 li
165.258 314.461 li
164.268 313.921 li
164.268 314.303 li
164.269 314.482 164.378 314.542 164.475 314.598 cv
165.411 315.138 li
165.411 315.522 li
165.221 315.438 164.365 314.975 164.365 314.975 cv
164.146 314.859 163.798 314.608 163.798 314.156 cv
163.798 312.694 li
cp
f
186.592 322.894 mo
186.28 322.215 li
186.146 323.153 li
186.592 322.894 li
cp
185.697 321.494 mo
186.585 320.982 li
187.855 323.459 li
187.074 323.914 li
186.834 323.483 li
186.061 323.933 li
185.963 324.56 li
185.178 325.018 li
185.697 321.494 li
cp
f
187.889 320.23 mo
188.928 319.63 li
189.41 321.137 li
189.419 319.347 li
190.453 318.75 li
191.216 321.502 li
190.475 321.934 li
190.035 320.434 li
190.043 322.185 li
189.178 322.689 li
188.694 321.211 li
188.749 322.939 li
188.001 323.374 li
187.889 320.23 li
cp
f
192.608 319.969 mo
192.754 319.885 192.779 319.756 192.749 319.58 cv
192.725 319.433 192.663 319.316 192.514 319.403 cv
192.057 319.667 li
192.15 320.235 li
192.608 319.969 li
cp
192.374 318.814 mo
192.488 318.748 192.531 318.624 192.512 318.513 cv
192.483 318.34 192.387 318.34 192.303 318.388 cv
191.887 318.629 li
191.957 319.055 li
192.374 318.814 li
cp
191.043 318.41 mo
192.253 317.712 li
192.845 317.371 193.139 317.527 193.222 318.012 cv
193.264 318.256 193.187 318.664 192.916 318.847 cv
193.21 318.729 193.448 318.887 193.499 319.189 cv
193.612 319.843 193.349 320.26 192.756 320.606 cv
191.508 321.332 li
191.043 318.41 li
cp
f
193.366 317.07 mo
194.099 316.648 li
194.385 318.257 li
194.45 318.628 194.498 318.849 194.861 318.638 cv
195.2 318.441 195.164 318.196 195.099 317.842 cv
194.808 316.239 li
195.541 315.815 li
195.839 317.413 li
196.076 318.686 195.448 319.06 194.985 319.33 cv
194.464 319.633 193.875 320.012 193.645 318.685 cv
193.366 317.07 li
cp
f
195.835 315.646 mo
196.562 315.226 li
196.939 317.183 li
196.979 317.391 197.103 317.314 197.213 317.25 cv
197.991 316.798 li
198.127 317.479 li
197.004 318.133 li
196.658 318.334 196.34 318.33 196.256 317.884 cv
195.835 315.646 li
cp
f
199.563 315.37 mo
199.208 314.734 li
199.136 315.618 li
199.563 315.37 li
cp
198.582 314.061 mo
199.432 313.571 li
200.856 315.89 li
200.109 316.325 li
199.843 315.922 li
199.103 316.353 li
199.046 316.943 li
198.294 317.381 li
198.582 314.061 li
cp
f
200.444 312.987 mo
201.167 312.57 li
202.254 313.531 li
201.937 312.126 li
202.649 311.716 li
203.285 314.475 li
202.563 314.896 li
201.47 313.959 li
201.778 315.353 li
201.049 315.778 li
200.444 312.987 li
cp
f
203.803 311.016 mo
204.328 310.713 204.459 310.671 204.801 310.608 cv
204.938 311.165 li
204.934 311.167 204.553 311.316 204.176 311.534 cv
203.869 311.711 203.737 311.771 203.917 312.533 cv
204.063 313.15 204.164 313.238 204.537 313.021 cv
204.924 312.796 205.277 312.553 205.277 312.553 cv
205.416 313.123 li
205.211 313.354 205.02 313.505 204.469 313.812 cv
203.78 314.201 203.417 313.871 203.2 312.94 cv
202.997 312.063 203.075 311.436 203.803 311.016 cv
cp
f
205.142 310.992 mo
205.006 310.437 205.407 310.124 205.664 309.976 cv
205.664 309.976 206.425 309.537 206.864 309.351 cv
207.017 309.946 li
206.047 310.507 li
205.858 310.616 205.884 310.723 205.909 310.823 cv
205.95 310.986 li
206.94 310.459 li
207.093 311.054 li
206.118 311.658 li
206.159 311.822 li
206.209 312.02 206.329 311.946 206.435 311.884 cv
207.376 311.338 li
207.532 311.943 li
207.167 312.215 206.384 312.685 206.384 312.685 cv
206.147 312.831 205.651 313.063 205.509 312.487 cv
205.142 310.992 li
cp
f
143.331 301.382 mo
142.389 300.838 li
142.389 299.896 li
141.488 299.376 li
141.488 300.318 li
140.545 299.774 li
140.545 300.675 li
141.488 301.219 li
141.488 302.162 li
142.389 302.682 li
142.389 301.74 li
143.331 302.284 li
143.331 301.382 li
cp
f
169.912 316.535 mo
168.97 315.991 li
168.97 315.048 li
168.068 314.528 li
168.068 315.47 li
167.126 314.926 li
167.126 315.828 li
168.068 316.372 li
168.068 317.314 li
168.97 317.834 li
168.97 316.892 li
169.912 317.436 li
169.912 316.535 li
cp
f
128.347 388.239 mo
128.881 387.929 li
129.066 387.821 129.322 387.836 129.605 388 cv
129.071 388.31 li
128.788 388.147 128.532 388.132 128.347 388.239 cv
cp
.00784314 .380392 .54902 rgb
f
gsave
128.347 388.239 mo
128.881 387.929 li
129.066 387.821 129.322 387.836 129.605 388 cv
129.071 388.31 li
128.788 388.147 128.532 388.132 128.347 388.239 cv
cp
clp
128.347 388.239 mo
128.881 387.929 li
129.066 387.821 129.322 387.836 129.605 388 cv
129.071 388.31 li
128.788 388.147 128.532 388.132 128.347 388.239 cv
128.347 388.239 li
cp
f
grestore
132.181 391.479 mo
131.647 391.79 li
131.721 391.747 131.784 391.684 131.832 391.603 cv
132.367 391.293 li
132.318 391.373 132.256 391.436 132.181 391.479 cv
cp
f
gsave
132.181 391.479 mo
131.647 391.79 li
131.721 391.747 131.784 391.684 131.832 391.603 cv
132.367 391.293 li
132.318 391.373 132.256 391.436 132.181 391.479 cv
cp
clp
131.832 391.603 mo
132.367 391.293 li
132.318 391.373 132.256 391.436 132.181 391.479 cv
131.647 391.79 li
131.721 391.747 131.784 391.684 131.832 391.603 cv
131.832 391.603 li
cp
f
grestore
131.947 391.138 mo
132.482 390.828 li
132.477 390.897 li
131.943 391.208 li
131.947 391.138 li
cp
f
129.071 388.31 mo
129.605 388 li
131.471 389.077 li
130.937 389.387 li
129.071 388.31 li
cp
f
133.347 393.247 mo
133.882 392.937 li
133.651 393.154 li
133.117 393.465 li
133.347 393.247 li
cp
f
131.943 391.208 mo
132.477 390.897 li
133.882 392.937 li
133.347 393.247 li
131.943 391.208 li
cp
f
130.937 389.387 mo
131.471 389.077 li
132.033 389.401 132.484 390.185 132.482 390.828 cv
131.947 391.138 li
131.949 390.496 131.498 389.711 130.937 389.387 cv
cp
f
gsave
130.937 389.387 mo
131.471 389.077 li
132.033 389.401 132.484 390.185 132.482 390.828 cv
131.947 391.138 li
131.949 390.496 131.498 389.711 130.937 389.387 cv
cp
clp
130.937 389.387 mo
131.471 389.077 li
131.521 389.106 131.571 389.139 131.619 389.175 cv
131.085 389.485 li
131.037 389.449 130.987 389.417 130.937 389.387 cv
130.937 389.387 li
cp
f
131.085 389.485 mo
131.619 389.175 li
132.043 389.491 132.379 390.057 132.462 390.583 cv
131.928 390.893 li
131.845 390.368 131.509 389.801 131.085 389.485 cv
131.085 389.485 li
cp
f
131.928 390.893 mo
132.462 390.583 li
132.475 390.666 132.482 390.748 132.482 390.828 cv
131.947 391.138 li
131.948 391.058 131.941 390.976 131.928 390.893 cv
131.928 390.893 li
cp
f
grestore
130.937 389.387 mo
131.498 389.711 131.949 390.496 131.947 391.138 cv
131.943 391.208 li
133.347 393.247 li
133.117 393.465 li
131.832 391.603 li
131.664 391.883 131.325 391.948 130.93 391.72 cv
129.064 390.643 li
128.503 390.319 128.049 389.534 128.051 388.888 cv
128.053 388.246 128.509 387.986 129.071 388.31 cv
130.937 389.387 li
cp
.00784314 .313726 .454902 rgb
f
195.513 389.697 mo
194.661 389.201 193.512 389.216 192.236 389.836 cv
192.098 389.903 191.958 389.977 191.818 390.058 cv
189.964 391.128 188.341 393.183 187.427 395.393 cv
186.926 396.602 186.638 397.858 186.642 399.023 cv
186.646 400.66 187.224 401.812 188.157 402.354 cv
191.674 404.398 li
190.742 403.856 190.164 402.704 190.159 401.067 cv
190.156 399.902 190.444 398.646 190.944 397.437 cv
191.858 395.228 193.482 393.172 195.335 392.102 cv
195.476 392.021 195.615 391.947 195.753 391.88 cv
197.03 391.26 198.178 391.245 199.03 391.741 cv
195.513 389.697 li
cp
.00392157 .109804 .168627 rgb
f
195.335 392.102 mo
198.203 390.447 200.536 391.776 200.545 395.071 cv
200.554 398.366 198.237 402.38 195.369 404.036 cv
192.501 405.692 190.169 404.362 190.159 401.067 cv
190.15 397.772 192.467 393.758 195.335 392.102 cv
cp
.760784 .760784 .760784 rgb
f
195.335 392.102 mo
198.203 390.447 200.536 391.776 200.545 395.071 cv
200.554 398.366 198.237 402.38 195.369 404.036 cv
192.501 405.692 190.169 404.362 190.159 401.067 cv
190.15 397.772 192.467 393.758 195.335 392.102 cv
cp
.00784314 .313726 .454902 rgb
f
195.344 395.491 mo
196.677 394.721 197.761 395.339 197.765 396.871 cv
197.769 398.402 196.693 400.267 195.36 401.037 cv
194.027 401.806 192.943 401.188 192.939 399.657 cv
192.935 398.126 194.012 396.26 195.344 395.491 cv
cp
.760784 .760784 .760784 rgb
f
207.573 382.823 mo
206.721 382.328 205.573 382.343 204.297 382.963 cv
204.159 383.03 204.019 383.104 203.879 383.185 cv
202.025 384.255 200.402 386.31 199.487 388.52 cv
198.987 389.729 198.699 390.985 198.703 392.15 cv
198.707 393.787 199.285 394.939 200.218 395.481 cv
203.735 397.525 li
202.803 396.983 202.225 395.831 202.22 394.194 cv
202.217 393.029 202.505 391.773 203.005 390.564 cv
203.919 388.354 205.543 386.299 207.396 385.229 cv
207.537 385.148 207.676 385.074 207.814 385.007 cv
209.091 384.387 210.239 384.372 211.091 384.868 cv
207.573 382.823 li
cp
.00392157 .109804 .168627 rgb
f
207.396 385.229 mo
210.264 383.574 212.596 384.903 212.606 388.198 cv
212.615 391.493 210.298 395.507 207.43 397.163 cv
204.562 398.819 202.23 397.49 202.22 394.194 cv
202.211 390.899 204.528 386.885 207.396 385.229 cv
cp
.760784 .760784 .760784 rgb
f
207.396 385.229 mo
210.264 383.574 212.596 384.903 212.606 388.198 cv
212.615 391.493 210.298 395.507 207.43 397.163 cv
204.562 398.819 202.23 397.49 202.22 394.194 cv
202.211 390.899 204.528 386.885 207.396 385.229 cv
cp
.00784314 .313726 .454902 rgb
f
207.405 388.617 mo
208.738 387.848 209.822 388.466 209.826 389.997 cv
209.83 391.528 208.754 393.393 207.421 394.163 cv
206.088 394.932 205.004 394.315 205 392.783 cv
204.995 391.252 206.072 389.387 207.405 388.617 cv
cp
.760784 .760784 .760784 rgb
f
175.866 408.463 mo
151.525 394.318 li
151.519 391.994 li
175.859 406.139 li
175.866 408.463 li
cp
.65098 .65098 .643137 rgb
f
175.859 406.139 mo
151.519 391.994 li
192.031 368.661 li
213.812 384.211 li
175.859 406.139 li
cp
.247059 .521569 .596078 rgb
f
213.812 384.211 mo
213.819 386.535 li
175.866 408.463 li
175.859 406.139 li
213.812 384.211 li
cp
.862745 .862745 .862745 rgb
f
175.866 406.142 mo
154.556 394.175 li
154.549 376.206 li
175.859 388.173 li
175.866 406.142 li
cp
.890196 .215686 .176471 rgb
f
175.859 388.173 mo
154.549 376.206 li
192.879 354.133 li
213.812 366.245 li
175.859 388.173 li
cp
1 .34902 .290196 rgb
f
213.812 366.245 mo
213.819 384.214 li
175.866 406.142 li
175.859 388.173 li
213.812 366.245 li
cp
1 .290196 .223529 rgb
f
213.812 375.02 mo
213.819 379.025 li
175.866 400.953 li
175.859 396.949 li
213.812 375.02 li
cp
.862745 .862745 .862745 rgb
f
159.019 410.816 mo
158.167 410.321 157.019 410.336 155.742 410.956 cv
155.604 411.022 155.465 411.097 155.324 411.178 cv
153.47 412.248 151.847 414.303 150.933 416.513 cv
150.432 417.722 150.145 418.977 150.148 420.143 cv
150.153 421.78 150.731 422.932 151.663 423.473 cv
155.18 425.517 li
154.248 424.976 153.67 423.824 153.665 422.187 cv
153.662 421.021 153.95 419.766 154.45 418.557 cv
155.364 416.347 156.988 414.292 158.841 413.222 cv
158.982 413.141 159.122 413.066 159.26 413 cv
160.536 412.38 161.684 412.365 162.536 412.86 cv
159.019 410.816 li
cp
.00392157 .109804 .168627 rgb
f
158.841 413.222 mo
161.709 411.566 164.042 412.896 164.051 416.191 cv
164.06 419.486 161.743 423.5 158.875 425.156 cv
156.007 426.811 153.675 425.482 153.665 422.187 cv
153.656 418.892 155.973 414.878 158.841 413.222 cv
cp
.760784 .760784 .760784 rgb
f
158.841 413.222 mo
161.709 411.566 164.042 412.896 164.051 416.191 cv
164.06 419.486 161.743 423.5 158.875 425.156 cv
156.007 426.811 153.675 425.482 153.665 422.187 cv
153.656 418.892 155.973 414.878 158.841 413.222 cv
cp
.00784314 .313726 .454902 rgb
f
158.85 416.416 mo
160.183 415.647 161.267 416.264 161.271 417.796 cv
161.276 419.327 160.199 421.192 158.866 421.962 cv
157.533 422.731 156.449 422.113 156.445 420.582 cv
156.441 419.051 157.518 417.185 158.85 416.416 cv
cp
.760784 .760784 .760784 rgb
f
143.15 427.407 mo
124.624 416.641 li
124.608 403.473 li
143.134 414.239 li
143.15 427.407 li
cp
.890196 .215686 .176471 rgb
f
143.15 427.407 mo
124.624 416.641 li
124.608 403.473 li
143.134 414.239 li
143.15 427.407 li
cp
f
143.134 414.239 mo
124.608 403.473 li
148.468 395.482 li
173.905 400.594 li
143.134 414.239 li
cp
.188235 .168627 .188235 rgb
f
143.134 414.239 mo
124.608 403.473 li
130.406 398.918 li
148.932 409.684 li
143.134 414.239 li
cp
1 .34902 .290196 rgb
f
132.549 408.093 mo
130.798 407.084 li
136.596 402.529 li
138.347 403.538 li
132.549 408.093 li
cp
1 1 .984314 rgb
f
136.769 410.578 mo
135.017 409.569 li
140.815 405.014 li
142.567 406.023 li
136.769 410.578 li
cp
f
148.932 409.684 mo
130.406 398.918 li
155.359 384.443 li
173.885 395.209 li
148.932 409.684 li
cp
.188235 .168627 .188235 rgb
f
173.037 394.66 mo
154.511 383.894 li
154.486 374.89 li
173.012 385.656 li
173.037 394.66 li
cp
.164706 .145098 .160784 rgb
f
149.774 408.159 mo
131.248 397.393 li
154.511 383.894 li
173.037 394.66 li
149.774 408.159 li
cp
.188235 .168627 .188235 rgb
f
149.774 408.16 mo
131.248 397.393 li
135.359 385.97 li
153.885 396.736 li
149.774 408.16 li
cp
.239216 .505882 .576471 rgb
f
153.885 396.736 mo
135.359 385.97 li
154.486 374.89 li
173.012 385.656 li
153.885 396.736 li
cp
.258824 .54902 .627451 rgb
f
148.932 409.684 mo
130.406 398.918 li
134.512 385.42 li
153.038 396.186 li
148.932 409.684 li
cp
1 .290196 .223529 rgb
f
131.082 398.587 mo
135.008 386.433 li
152.362 396.518 li
148.435 408.672 li
131.082 398.587 li
cp
.203922 .592157 .854902 rgb
f
153.038 396.186 mo
134.512 385.42 li
155.328 373.365 li
173.854 384.131 li
153.038 396.186 li
cp
1 .419608 .368627 rgb
f
143.15 427.407 mo
153.017 421.666 li
153.109 420.165 153.605 418.582 154.379 417.132 cv
143.144 423.649 li
143.15 427.407 li
cp
1 1 .984314 rgb
f
162.825 412.256 mo
163.728 412.758 164.356 413.698 164.601 414.957 cv
173.92 409.534 li
173.914 405.815 li
162.825 412.256 li
cp
f
137.351 417.741 mo
129.366 413.1 li
128.568 415.827 li
138.15 421.359 li
137.351 417.741 li
cp
.247059 .521569 .596078 rgb
f
142.515 420.66 mo
142.506 423.86 li
139.059 421.864 li
138.347 418.246 li
142.515 420.66 li
cp
.992157 .721569 .0745098 rgb
f
128.352 412.688 mo
125.014 410.76 li
125.005 413.858 li
127.737 415.44 li
128.352 412.688 li
cp
f
173.905 400.594 mo
173.885 395.209 li
173.885 395.209 li
173.854 384.131 li
153.038 396.186 li
148.932 409.684 li
148.932 409.684 li
143.134 414.239 li
143.15 427.407 li
153.017 421.666 li
153.228 418.225 155.56 414.348 158.509 412.646 cv
159.43 412.114 160.325 411.844 161.171 411.844 cv
162.961 411.844 164.226 413.032 164.601 414.957 cv
173.92 409.534 li
173.905 400.594 li
cp
1 .290196 .223529 rgb
f
173.905 400.594 mo
173.896 398.075 li
143.136 415.847 li
143.141 419.852 li
173.907 402.076 li
173.905 400.594 li
cp
.862745 .862745 .862745 rgb
f
160.827 392.715 mo
153.885 396.736 li
150.246 408.215 li
160.827 401.963 li
160.827 392.715 li
cp
.109804 .513726 .721569 rgb
f
162.536 400.953 mo
171.958 395.385 li
171.958 386.268 li
162.536 391.726 li
162.536 400.953 li
cp
f
150.727 404.07 mo
151.343 403.712 li
152.973 403.235 li
152.356 403.594 li
150.727 404.07 li
cp
.00784314 .380392 .54902 rgb
f
152.693 402.757 mo
153.309 402.399 li
153.522 402.275 153.817 402.292 154.141 402.48 cv
153.525 402.838 li
153.2 402.651 152.906 402.634 152.693 402.757 cv
152.693 402.757 li
cp
f
153.525 402.838 mo
154.141 402.48 li
156.297 403.724 li
155.681 404.083 li
153.525 402.838 li
cp
f
155.681 404.083 mo
156.297 403.724 li
156.355 403.758 156.411 403.795 156.467 403.837 cv
155.85 404.195 li
155.795 404.154 155.738 404.116 155.681 404.083 cv
155.681 404.083 li
cp
f
155.85 404.195 mo
156.467 403.837 li
156.955 404.2 157.345 404.856 157.441 405.463 cv
156.824 405.821 li
156.729 405.214 156.338 404.559 155.85 404.195 cv
155.85 404.195 li
cp
f
156.824 405.821 mo
157.441 405.463 li
157.456 405.559 157.464 405.653 157.463 405.745 cv
157.462 406.115 157.332 406.375 157.121 406.497 cv
156.504 406.856 li
156.715 406.733 156.846 406.473 156.847 406.103 cv
156.847 406.011 156.839 405.917 156.824 405.821 cv
156.824 405.821 li
cp
f
155.681 404.083 mo
156.326 404.455 156.849 405.362 156.847 406.103 cv
156.845 406.847 156.318 407.147 155.673 406.775 cv
153.517 405.53 li
153.062 405.268 152.672 404.74 152.48 404.196 cv
150.991 404.628 li
150.727 404.07 li
152.356 403.594 li
152.351 403.507 li
152.353 402.766 152.88 402.466 153.525 402.838 cv
155.681 404.083 li
cp
.00784314 .313726 .454902 rgb
f
175.444 374.181 mo
176.78 374.952 176.787 376.202 175.459 376.974 cv
174.132 377.745 171.974 377.745 170.638 376.974 cv
169.304 376.203 169.295 374.953 170.622 374.181 cv
171.95 373.41 174.109 373.411 175.444 374.181 cv
cp
.654902 .654902 .654902 rgb
f
180.008 375.597 mo
180.001 378.361 li
180 378.515 179.985 378.669 179.954 378.822 cv
179.962 376.058 li
179.992 375.905 180.008 375.751 180.008 375.597 cv
180.008 375.597 li
cp
.00392157 .188235 .27451 rgb
f
179.962 376.058 mo
179.954 378.822 li
179.784 379.668 179.154 380.488 178.061 381.145 cv
178.069 378.381 li
179.162 377.724 179.792 376.904 179.962 376.058 cv
179.962 376.058 li
cp
.00392157 .219608 .317647 rgb
f
178.069 378.381 mo
178.061 381.145 li
178.033 381.162 178.005 381.178 177.976 381.195 cv
177.512 381.465 176.997 381.689 176.45 381.866 cv
176.458 379.102 li
177.005 378.925 177.52 378.701 177.984 378.431 cv
178.013 378.415 178.041 378.398 178.069 378.381 cv
178.069 378.381 li
cp
.00784314 .25098 .364706 rgb
f
176.458 379.102 mo
176.45 381.866 li
175.104 382.302 173.559 382.459 172.068 382.336 cv
172.076 379.573 li
173.567 379.696 175.112 379.539 176.458 379.102 cv
176.458 379.102 li
cp
.00392157 .219608 .317647 rgb
f
172.076 379.573 mo
172.068 382.336 li
170.626 382.218 169.234 381.837 168.122 381.195 cv
166.749 380.402 166.063 379.362 166.066 378.323 cv
166.074 375.559 li
166.071 376.598 166.757 377.639 168.13 378.431 cv
169.242 379.073 170.634 379.454 172.076 379.573 cv
172.076 379.573 li
cp
.00392157 .188235 .27451 rgb
f
170.638 376.974 mo
171.974 377.745 174.132 377.745 175.459 376.974 cv
176.787 376.202 176.78 374.952 175.444 374.181 cv
174.109 373.411 171.95 373.41 170.622 374.181 cv
169.295 374.953 169.304 376.203 170.638 376.974 cv
170.638 376.974 li
cp
177.952 372.723 mo
180.681 374.299 180.696 376.855 177.984 378.431 cv
175.272 380.007 170.859 380.007 168.13 378.431 cv
165.4 376.855 165.388 374.3 168.1 372.724 cv
170.811 371.149 175.222 371.147 177.952 372.723 cv
cp
.00784314 .270588 .392157 rgb
f
195.072 357.032 mo
195.069 358.063 li
193.719 358.847 li
193.721 357.817 li
195.072 357.032 li
cp
.65098 .65098 .643137 rgb
f
191.636 359.029 mo
191.633 360.059 li
187.51 362.456 li
187.513 361.425 li
191.636 359.029 li
cp
f
199.624 363.64 mo
199.621 364.671 li
191.633 360.059 li
191.636 359.029 li
199.624 363.64 li
cp
.529412 .529412 .521569 rgb
f
185.43 362.635 mo
185.427 363.666 li
181.304 366.062 li
181.307 365.031 li
185.43 362.635 li
cp
.65098 .65098 .643137 rgb
f
193.418 367.247 mo
193.415 368.278 li
185.427 363.666 li
185.43 362.635 li
193.418 367.247 li
cp
.529412 .529412 .521569 rgb
f
179.221 366.243 mo
179.218 367.274 li
175.095 369.67 li
175.098 368.639 li
179.221 366.243 li
cp
.65098 .65098 .643137 rgb
f
187.209 370.855 mo
187.206 371.886 li
179.218 367.274 li
179.221 366.243 li
187.209 370.855 li
cp
.529412 .529412 .521569 rgb
f
173.013 369.851 mo
173.01 370.882 li
168.889 373.277 li
168.892 372.246 li
173.013 369.851 li
cp
.65098 .65098 .643137 rgb
f
181 374.463 mo
180.998 375.494 li
173.01 370.882 li
173.013 369.851 li
181 374.463 li
cp
.529412 .529412 .521569 rgb
f
166.807 373.458 mo
166.804 374.489 li
162.681 376.885 li
162.684 375.854 li
166.807 373.458 li
cp
.65098 .65098 .643137 rgb
f
174.794 378.07 mo
174.792 379.1 li
166.804 374.489 li
166.807 373.458 li
174.794 378.07 li
cp
.529412 .529412 .521569 rgb
f
160.598 377.066 mo
160.595 378.097 li
156.475 380.491 li
156.478 379.46 li
160.598 377.066 li
cp
.65098 .65098 .643137 rgb
f
154.392 380.672 mo
154.389 381.703 li
153.039 382.488 li
153.042 381.457 li
154.392 380.672 li
cp
f
153.042 381.457 mo
153.039 382.488 li
150.94 381.276 li
150.942 380.245 li
153.042 381.457 li
cp
.529412 .529412 .521569 rgb
f
168.586 381.678 mo
168.583 382.708 li
160.595 378.097 li
160.598 377.066 li
168.586 381.678 li
cp
f
162.38 385.284 mo
162.377 386.315 li
154.389 381.703 li
154.392 380.672 li
162.38 385.284 li
cp
f
205.156 362.854 mo
205.153 363.885 li
163.123 388.31 li
163.126 387.279 li
205.156 362.854 li
cp
.65098 .65098 .643137 rgb
f
164.465 384.072 mo
168.586 381.678 li
160.598 377.066 li
156.478 379.46 li
164.465 384.072 li
164.465 384.072 li
cp
176.88 376.858 mo
181 374.463 li
173.013 369.851 li
168.892 372.246 li
176.88 376.858 li
176.88 376.858 li
cp
195.501 366.036 mo
199.624 363.64 li
191.636 359.029 li
187.513 361.425 li
195.501 366.036 li
195.501 366.036 li
cp
170.671 380.466 mo
174.794 378.07 li
166.807 373.458 li
162.684 375.854 li
170.671 380.466 li
170.671 380.466 li
cp
189.295 369.643 mo
193.418 367.247 li
185.43 362.635 li
181.307 365.031 li
189.295 369.643 li
189.295 369.643 li
cp
183.086 373.251 mo
187.209 370.855 li
179.221 366.243 li
175.098 368.639 li
183.086 373.251 li
183.086 373.251 li
cp
203.06 361.644 mo
205.156 362.854 li
163.126 387.279 li
161.03 386.069 li
162.38 385.284 li
154.392 380.672 li
153.042 381.457 li
150.942 380.245 li
192.973 355.82 li
195.072 357.032 li
193.721 357.817 li
201.709 362.428 li
203.06 361.644 li
cp
.94902 .94902 .937255 rgb
f
163.126 387.279 mo
163.123 388.31 li
161.027 387.1 li
161.03 386.069 li
163.126 387.279 li
cp
.529412 .529412 .521569 rgb
f
144.086 386.509 mo
147.372 384.599 li
147.366 387.036 li
144.079 388.946 li
144.086 386.509 li
cp
.0745098 .545098 .764706 rgb
f
138.72 383.41 mo
142.006 381.501 li
147.372 384.599 li
144.086 386.509 li
138.72 383.41 li
cp
.0862745 .607843 .854902 rgb
f
144.086 386.509 mo
144.079 388.946 li
138.713 385.848 li
138.72 383.41 li
144.086 386.509 li
cp
.215686 .647059 .854902 rgb
f
146.676 388.004 mo
149.963 386.094 li
149.956 388.532 li
146.669 390.442 li
146.676 388.004 li
cp
.772549 .737255 .670588 rgb
f
146.676 388.004 mo
146.669 390.442 li
144.079 388.946 li
144.086 386.509 li
146.676 388.004 li
cp
.65098 .65098 .643137 rgb
f
144.086 386.509 mo
147.372 384.599 li
149.963 386.094 li
146.676 388.004 li
144.086 386.509 li
cp
.94902 .94902 .937255 rgb
f
146.676 388.004 mo
149.963 386.094 li
155.329 389.193 li
152.042 391.102 li
146.676 388.004 li
cp
.768627 .184314 .152941 rgb
f
152.042 391.102 mo
155.329 389.193 li
155.322 391.63 li
152.036 393.54 li
152.042 391.102 li
cp
.686275 .164706 .137255 rgb
f
152.042 391.102 mo
152.036 393.54 li
146.669 390.442 li
146.676 388.004 li
152.042 391.102 li
cp
.768627 .25098 .223529 rgb
f
124.61 405.147 mo
124.615 409.158 li
143.141 419.862 li
143.136 415.851 li
124.61 405.147 li
cp
1 1 .984314 rgb
f
232.284 399.296 mo
232.759 399.02 li
232.923 398.924 233.151 398.938 233.402 399.083 cv
232.927 399.359 li
232.676 399.214 232.448 399.2 232.284 399.296 cv
cp
.94902 .607843 .0705882 rgb
f
gsave
232.284 399.296 mo
232.759 399.02 li
232.923 398.924 233.151 398.938 233.402 399.083 cv
232.927 399.359 li
232.676 399.214 232.448 399.2 232.284 399.296 cv
cp
clp
232.284 399.296 mo
232.759 399.02 li
232.923 398.924 233.151 398.938 233.402 399.083 cv
232.927 399.359 li
232.676 399.214 232.448 399.2 232.284 399.296 cv
232.284 399.296 li
cp
f
grestore
235.691 402.175 mo
235.216 402.451 li
235.282 402.412 235.338 402.357 235.381 402.285 cv
235.856 402.009 li
235.812 402.081 235.757 402.137 235.691 402.175 cv
cp
f
gsave
235.691 402.175 mo
235.216 402.451 li
235.282 402.412 235.338 402.357 235.381 402.285 cv
235.856 402.009 li
235.812 402.081 235.757 402.137 235.691 402.175 cv
cp
clp
235.381 402.285 mo
235.856 402.009 li
235.812 402.081 235.757 402.137 235.691 402.175 cv
235.216 402.451 li
235.282 402.412 235.338 402.357 235.381 402.285 cv
235.381 402.285 li
cp
f
grestore
235.483 401.872 mo
235.958 401.596 li
235.953 401.657 li
235.479 401.933 li
235.483 401.872 li
cp
f
232.927 399.359 mo
233.402 399.083 li
235.06 400.04 li
234.585 400.316 li
232.927 399.359 li
cp
f
236.727 403.746 mo
237.202 403.47 li
236.997 403.663 li
236.522 403.939 li
236.727 403.746 li
cp
f
235.479 401.933 mo
235.953 401.657 li
237.202 403.47 li
236.727 403.746 li
235.479 401.933 li
cp
f
234.585 400.316 mo
235.06 400.04 li
235.559 400.328 235.96 401.025 235.958 401.596 cv
235.483 401.872 li
235.485 401.301 235.084 400.604 234.585 400.316 cv
cp
f
gsave
234.585 400.316 mo
235.06 400.04 li
235.559 400.328 235.96 401.025 235.958 401.596 cv
235.483 401.872 li
235.485 401.301 235.084 400.604 234.585 400.316 cv
cp
clp
234.585 400.316 mo
235.06 400.04 li
235.104 400.066 235.148 400.095 235.191 400.127 cv
234.717 400.403 li
234.674 400.371 234.63 400.342 234.585 400.316 cv
234.585 400.316 li
cp
f
234.717 400.403 mo
235.191 400.127 li
235.568 400.408 235.867 400.911 235.94 401.378 cv
235.466 401.654 li
235.392 401.187 235.093 400.684 234.717 400.403 cv
234.717 400.403 li
cp
f
235.466 401.654 mo
235.94 401.378 li
235.952 401.452 235.958 401.525 235.958 401.596 cv
235.483 401.872 li
235.483 401.801 235.477 401.728 235.466 401.654 cv
235.466 401.654 li
cp
f
grestore
234.585 400.316 mo
235.084 400.604 235.485 401.301 235.483 401.872 cv
235.479 401.933 li
236.727 403.746 li
236.522 403.939 li
235.381 402.285 li
235.231 402.533 234.93 402.591 234.579 402.389 cv
232.921 401.432 li
232.422 401.144 232.019 400.446 232.021 399.873 cv
232.023 399.302 232.428 399.071 232.927 399.359 cv
234.585 400.316 li
cp
.823529 .329412 0 rgb
f
261.476 414.367 mo
260.738 413.938 259.743 413.95 258.637 414.487 cv
258.517 414.546 258.397 414.61 258.275 414.68 cv
256.669 415.607 255.262 417.388 254.47 419.302 cv
254.037 420.349 253.788 421.437 253.79 422.447 cv
253.795 423.865 254.295 424.863 255.103 425.332 cv
258.15 427.103 li
257.343 426.634 256.842 425.636 256.838 424.218 cv
256.835 423.208 257.084 422.12 257.518 421.073 cv
258.31 419.159 259.716 417.378 261.322 416.451 cv
261.444 416.381 261.565 416.316 261.684 416.258 cv
262.79 415.721 263.785 415.709 264.523 416.138 cv
261.476 414.367 li
cp
.00392157 .109804 .168627 rgb
f
261.322 416.451 mo
263.806 415.017 265.827 416.168 265.835 419.023 cv
265.844 421.878 263.836 425.355 261.351 426.79 cv
258.867 428.224 256.846 427.073 256.838 424.218 cv
256.83 421.363 258.837 417.885 261.322 416.451 cv
cp
.760784 .760784 .760784 rgb
f
261.322 416.451 mo
263.806 415.017 265.827 416.168 265.835 419.023 cv
265.844 421.878 263.836 425.355 261.351 426.79 cv
258.867 428.224 256.846 427.073 256.838 424.218 cv
256.83 421.363 258.837 417.885 261.322 416.451 cv
cp
.00784314 .313726 .454902 rgb
f
261.33 419.387 mo
262.484 418.72 263.424 419.255 263.427 420.582 cv
263.431 421.909 262.498 423.525 261.343 424.191 cv
260.189 424.858 259.25 424.323 259.246 422.996 cv
259.242 421.669 260.175 420.053 261.33 419.387 cv
cp
.760784 .760784 .760784 rgb
f
311.105 385.876 mo
310.367 385.447 309.372 385.46 308.266 385.997 cv
308.147 386.055 308.026 386.119 307.904 386.19 cv
306.298 387.117 304.892 388.897 304.1 390.811 cv
303.666 391.859 303.417 392.947 303.42 393.956 cv
303.424 395.375 303.925 396.373 304.732 396.842 cv
307.78 398.613 li
306.972 398.144 306.471 397.146 306.467 395.727 cv
306.464 394.718 306.714 393.63 307.147 392.582 cv
307.939 390.668 309.346 388.888 310.951 387.961 cv
311.073 387.89 311.194 387.826 311.314 387.768 cv
312.42 387.231 313.414 387.218 314.152 387.647 cv
311.105 385.876 li
cp
.00392157 .109804 .168627 rgb
f
310.951 387.961 mo
313.436 386.526 315.457 387.678 315.465 390.533 cv
315.473 393.388 313.465 396.865 310.981 398.299 cv
308.496 399.734 306.475 398.582 306.467 395.727 cv
306.459 392.872 308.467 389.395 310.951 387.961 cv
cp
.760784 .760784 .760784 rgb
f
310.951 387.961 mo
313.436 386.526 315.457 387.678 315.465 390.533 cv
315.473 393.388 313.465 396.865 310.981 398.299 cv
308.496 399.734 306.475 398.582 306.467 395.727 cv
306.459 392.872 308.467 389.395 310.951 387.961 cv
cp
.00784314 .313726 .454902 rgb
f
310.959 390.896 mo
312.114 390.23 313.053 390.765 313.057 392.091 cv
313.06 393.418 312.127 395.034 310.973 395.701 cv
309.818 396.367 308.879 395.832 308.875 394.506 cv
308.872 393.179 309.805 391.563 310.959 390.896 cv
cp
.760784 .760784 .760784 rgb
f
301.17 391.338 mo
300.432 390.909 299.437 390.921 298.331 391.458 cv
298.212 391.516 298.091 391.581 297.969 391.651 cv
296.363 392.578 294.957 394.358 294.165 396.273 cv
293.731 397.32 293.482 398.408 293.485 399.418 cv
293.489 400.836 293.99 401.834 294.797 402.303 cv
297.845 404.074 li
297.037 403.605 296.536 402.607 296.532 401.189 cv
296.529 400.179 296.779 399.091 297.212 398.044 cv
298.004 396.129 299.411 394.349 301.016 393.422 cv
301.138 393.352 301.259 393.287 301.379 393.229 cv
302.485 392.692 303.479 392.68 304.218 393.108 cv
301.17 391.338 li
cp
.00392157 .109804 .168627 rgb
f
301.016 393.422 mo
303.501 391.987 305.522 393.139 305.53 395.994 cv
305.538 398.849 303.53 402.326 301.046 403.761 cv
298.561 405.195 296.54 404.044 296.532 401.189 cv
296.524 398.334 298.532 394.856 301.016 393.422 cv
cp
.760784 .760784 .760784 rgb
f
301.016 393.422 mo
303.501 391.987 305.522 393.139 305.53 395.994 cv
305.538 398.849 303.53 402.326 301.046 403.761 cv
298.561 405.195 296.54 404.044 296.532 401.189 cv
296.524 398.334 298.532 394.856 301.016 393.422 cv
cp
.00784314 .313726 .454902 rgb
f
301.024 396.358 mo
302.179 395.691 303.118 396.226 303.122 397.553 cv
303.125 398.88 302.192 400.496 301.038 401.162 cv
299.883 401.829 298.944 401.294 298.94 399.967 cv
298.937 398.64 299.87 397.024 301.024 396.358 cv
cp
.760784 .760784 .760784 rgb
f
271.406 416.56 mo
249.528 403.846 li
297.049 376.374 li
316.627 390.351 li
271.406 416.56 li
cp
.247059 .521569 .596078 rgb
f
271.412 416.573 mo
249.534 403.859 li
249.528 379.53 li
271.406 392.245 li
271.412 416.573 li
cp
.941176 .396078 .054902 rgb
f
271.406 392.245 mo
249.528 379.53 li
294.748 353.321 li
316.627 366.035 li
271.406 392.245 li
cp
.94902 .607843 .0705882 rgb
f
316.627 366.035 mo
316.633 390.364 li
271.412 416.573 li
271.406 392.245 li
316.627 366.035 li
cp
.905882 .490196 .0156863 rgb
f
310.61 385.66 mo
271.406 408.393 li
271.412 412.363 li
310.61 389.634 li
310.61 385.66 li
cp
.941176 .396078 .054902 rgb
f
310.61 385.598 mo
271.406 408.331 li
271.407 409.128 li
310.61 386.396 li
310.61 385.598 li
cp
.823529 .329412 0 rgb
f
310.61 389.677 mo
271.406 412.41 li
271.407 412.605 li
310.61 389.872 li
310.61 389.677 li
cp
.94902 .607843 .0705882 rgb
f
305.093 378.781 mo
271.406 398.305 li
271.412 402.275 li
305.093 382.754 li
305.093 378.781 li
cp
.941176 .396078 .054902 rgb
f
305.093 378.719 mo
271.406 398.243 li
271.407 399.04 li
305.093 379.517 li
305.093 378.719 li
cp
.823529 .329412 0 rgb
f
305.093 382.797 mo
271.406 402.322 li
271.407 402.517 li
305.093 382.993 li
305.093 382.797 li
cp
.94902 .607843 .0705882 rgb
f
278.864 388.004 mo
279.907 387.398 li
279.827 412.438 li
278.784 413.044 li
278.864 388.004 li
cp
.698039 .376471 .0117647 rgb
f
256.207 374.883 mo
257.25 374.277 li
279.907 387.398 li
278.864 388.004 li
256.207 374.883 li
cp
.780392 .423529 .0117647 rgb
f
278.864 388.004 mo
278.784 413.044 li
278.153 412.68 li
278.231 388.365 li
256.205 375.608 li
256.207 374.883 li
278.864 388.004 li
cp
.486275 .262745 .00784314 rgb
f
288.618 382.348 mo
289.661 381.742 li
289.581 406.782 li
288.538 407.388 li
288.618 382.348 li
cp
.698039 .376471 .0117647 rgb
f
265.961 369.227 mo
267.004 368.621 li
289.661 381.742 li
288.618 382.348 li
265.961 369.227 li
cp
.780392 .423529 .0117647 rgb
f
288.618 382.348 mo
288.538 407.388 li
287.907 407.024 li
287.985 382.709 li
265.958 369.952 li
265.961 369.227 li
288.618 382.348 li
cp
.486275 .262745 .00784314 rgb
f
297.195 377.304 mo
298.238 376.698 li
298.158 401.738 li
297.115 402.344 li
297.195 377.304 li
cp
.698039 .376471 .0117647 rgb
f
274.538 364.183 mo
275.581 363.577 li
298.238 376.698 li
297.195 377.304 li
274.538 364.183 li
cp
.780392 .423529 .0117647 rgb
f
297.195 377.304 mo
297.115 402.344 li
296.484 401.98 li
296.562 377.665 li
274.536 364.908 li
274.538 364.183 li
297.195 377.304 li
cp
.486275 .262745 .00784314 rgb
f
310.813 394.239 mo
310.185 393.875 li
298.496 377.601 li
299.123 377.965 li
310.813 394.239 li
cp
.454902 .247059 .00784314 rgb
f
299.123 377.965 mo
298.496 377.601 li
301.584 373.751 li
302.212 374.115 li
299.123 377.965 li
cp
.631373 .341176 .0117647 rgb
f
302.212 374.115 mo
316.899 386.647 li
310.813 394.239 li
299.123 377.965 li
302.212 374.115 li
cp
.823529 .447059 .0156863 rgb
f
252.308 426.143 mo
234.775 415.954 li
234.761 411.529 li
252.294 421.719 li
252.308 426.143 li
cp
.188235 .168627 .188235 rgb
f
268.026 402.344 mo
252.294 411.399 li
252.308 426.143 li
268.056 417.057 li
268.026 402.344 li
cp
f
252.308 421.719 mo
234.775 411.529 li
237.734 395.081 li
255.267 405.271 li
252.308 421.719 li
cp
.941176 .396078 .054902 rgb
f
236.585 405.275 mo
238.239 396.174 li
254.502 405.624 li
252.847 414.725 li
236.585 405.275 li
cp
.34902 .666667 .886275 rgb
f
237.248 411.938 mo
237.361 410.97 li
248.36 417.386 li
248.247 418.353 li
237.248 411.938 li
cp
.188235 .168627 .188235 rgb
f
237.676 410.349 mo
237.789 409.382 li
248.788 415.797 li
248.675 416.765 li
237.676 410.349 li
cp
f
238.108 408.796 mo
238.22 407.828 li
249.219 414.244 li
249.106 415.211 li
238.108 408.796 li
cp
f
255.267 405.275 mo
237.734 395.086 li
250.493 387.801 li
268.026 397.99 li
255.267 405.275 li
cp
.94902 .607843 .0705882 rgb
f
268.026 397.92 mo
255.267 405.205 li
252.308 421.719 li
268.056 412.633 li
268.026 397.92 li
cp
.905882 .490196 .0156863 rgb
f
255.89 405.644 mo
267.338 399.108 li
267.365 408.03 li
254.189 415.137 li
255.89 405.644 li
cp
.34902 .666667 .886275 rgb
f
246.685 419.145 mo
239.128 414.754 li
238.372 417.334 li
247.441 422.57 li
246.685 419.145 li
cp
1 1 .984314 rgb
f
251.572 421.909 mo
251.564 424.937 li
248.302 423.048 li
247.628 419.624 li
251.572 421.909 li
cp
.992157 .721569 .0745098 rgb
f
238.168 414.363 mo
235.009 412.539 li
235.001 415.471 li
237.586 416.968 li
238.168 414.363 li
cp
f
284.167 358.802 mo
284.168 359.456 li
306.105 372.205 li
306.103 371.552 li
284.167 358.802 li
cp
.486275 .262745 .00784314 rgb
f
306.103 371.552 mo
306.105 372.205 li
307.18 371.585 li
307.178 370.931 li
306.103 371.552 li
cp
.509804 .32549 .0392157 rgb
f
284.167 358.802 mo
306.103 371.552 li
307.178 370.931 li
285.242 358.182 li
284.167 358.802 li
cp
.780392 .423529 .0117647 rgb
f
240.645 414.122 mo
240.738 414.187 240.825 414.256 240.914 414.324 cv
242.119 409.228 li
241.901 409.182 241.679 409.137 241.468 409.074 cv
240.318 413.937 li
240.447 413.999 240.561 414.064 240.645 414.122 cv
cp
.941176 .396078 .054902 rgb
f
244.627 416.667 mo
244.72 416.731 244.807 416.801 244.896 416.869 cv
246.101 411.773 li
245.883 411.726 245.661 411.682 245.45 411.618 cv
244.3 416.482 li
244.429 416.543 244.543 416.609 244.627 416.667 cv
cp
f
261.592 411.807 mo
260.777 412.494 li
260.777 402.682 li
261.592 402.129 li
261.592 411.807 li
cp
.905882 .490196 .0156863 rgb
f
254.189 412.044 mo
254.737 411.726 li
256.185 411.302 li
255.637 411.621 li
254.189 412.044 li
cp
.94902 .607843 .0705882 rgb
f
255.936 410.877 mo
256.484 410.559 li
256.673 410.449 256.935 410.464 257.223 410.631 cv
256.675 410.949 li
256.387 410.783 256.125 410.767 255.936 410.877 cv
cp
f
gsave
255.936 410.877 mo
256.484 410.559 li
256.673 410.449 256.935 410.464 257.223 410.631 cv
256.675 410.949 li
256.387 410.783 256.125 410.767 255.936 410.877 cv
cp
clp
255.936 410.877 mo
256.484 410.559 li
256.673 410.449 256.935 410.464 257.223 410.631 cv
256.675 410.949 li
256.387 410.783 256.125 410.767 255.936 410.877 cv
255.936 410.877 li
cp
f
grestore
256.675 410.949 mo
257.223 410.631 li
259.139 411.737 li
258.591 412.055 li
256.675 410.949 li
cp
f
259.871 414.201 mo
259.323 414.519 li
259.51 414.41 259.626 414.179 259.627 413.85 cv
259.629 413.191 259.164 412.386 258.591 412.055 cv
259.139 411.737 li
259.712 412.068 260.177 412.873 260.175 413.532 cv
260.174 413.861 260.058 414.092 259.871 414.201 cv
cp
f
gsave
259.871 414.201 mo
259.323 414.519 li
259.51 414.41 259.626 414.179 259.627 413.85 cv
259.629 413.191 259.164 412.386 258.591 412.055 cv
259.139 411.737 li
259.712 412.068 260.177 412.873 260.175 413.532 cv
260.174 413.861 260.058 414.092 259.871 414.201 cv
cp
clp
258.591 412.055 mo
259.139 411.737 li
259.19 411.766 259.24 411.8 259.289 411.836 cv
258.742 412.155 li
258.692 412.118 258.642 412.085 258.591 412.055 cv
258.591 412.055 li
cp
f
258.742 412.155 mo
259.289 411.836 li
259.723 412.16 260.07 412.742 260.155 413.281 cv
259.607 413.6 li
259.522 413.06 259.175 412.478 258.742 412.155 cv
258.742 412.155 li
cp
f
259.607 413.6 mo
260.155 413.281 li
260.168 413.366 260.175 413.45 260.175 413.532 cv
260.174 413.861 260.058 414.092 259.871 414.201 cv
259.323 414.519 li
259.51 414.41 259.626 414.179 259.627 413.85 cv
259.627 413.768 259.62 413.685 259.607 413.6 cv
259.607 413.6 li
cp
f
grestore
258.591 412.055 mo
259.164 412.386 259.629 413.191 259.627 413.85 cv
259.625 414.512 259.157 414.778 258.584 414.447 cv
256.669 413.341 li
256.264 413.108 255.917 412.639 255.747 412.155 cv
254.424 412.539 li
254.189 412.044 li
255.637 411.621 li
255.632 411.543 li
255.634 410.885 256.102 410.618 256.675 410.949 cv
258.591 412.055 li
cp
.823529 .329412 0 rgb
f
441.522 373.54 mo
441.52 374 li
349.834 427.407 li
349.835 426.946 li
441.522 373.54 li
cp
.00392157 .109804 .168627 rgb
f
349.835 426.946 mo
349.834 427.407 li
348.421 426.591 li
348.422 426.13 li
349.835 426.946 li
cp
f
441.522 373.54 mo
349.835 426.946 li
348.422 426.13 li
440.109 372.724 li
441.522 373.54 li
cp
f
395.599 376.738 mo
395.598 377.199 li
331.849 414.297 li
331.85 413.836 li
395.599 376.738 li
cp
f
331.85 413.836 mo
331.849 414.297 li
330.436 413.481 li
330.437 413.02 li
331.85 413.836 li
cp
f
395.599 376.738 mo
331.85 413.836 li
330.437 413.02 li
394.186 375.922 li
395.599 376.738 li
cp
f
365.269 410.609 mo
364.743 410.303 364.034 410.312 363.245 410.695 cv
363.16 410.737 363.074 410.782 362.987 410.832 cv
361.842 411.494 360.839 412.763 360.274 414.128 cv
359.965 414.875 359.787 415.651 359.789 416.371 cv
359.792 417.382 360.149 418.093 360.725 418.428 cv
361.39 418.797 li
360.814 418.462 360.457 417.75 360.454 416.739 cv
360.452 416.019 360.629 415.244 360.939 414.497 cv
361.503 413.132 362.506 411.862 363.651 411.201 cv
363.738 411.151 363.824 411.105 363.91 411.064 cv
364.698 410.681 365.407 410.672 365.934 410.978 cv
365.269 410.609 li
cp
f
363.651 411.201 mo
365.423 410.178 366.864 411 366.869 413.035 cv
366.875 415.071 365.444 417.55 363.672 418.573 cv
361.9 419.596 360.46 418.775 360.454 416.739 cv
360.448 414.704 361.88 412.224 363.651 411.201 cv
cp
.00784314 .313726 .454902 rgb
f
363.653 411.907 mo
365.085 411.08 366.25 411.744 366.255 413.39 cv
366.26 415.036 365.102 417.04 363.67 417.867 cv
362.238 418.694 361.073 418.03 361.068 416.385 cv
361.063 414.739 362.221 412.734 363.653 411.907 cv
cp
.760784 .760784 .760784 rgb
f
363.657 413.404 mo
364.37 412.992 364.95 413.323 364.952 414.142 cv
364.955 414.961 364.379 415.959 363.666 416.37 cv
362.953 416.782 362.373 416.452 362.371 415.632 cv
362.368 414.813 362.944 413.815 363.657 413.404 cv
cp
.00392157 .109804 .168627 rgb
f
372.132 406.952 mo
371.606 406.646 370.897 406.655 370.108 407.038 cv
370.023 407.079 369.937 407.125 369.85 407.175 cv
368.705 407.836 367.702 409.106 367.137 410.471 cv
366.828 411.218 366.65 411.993 366.652 412.714 cv
366.655 413.725 367.012 414.436 367.588 414.771 cv
368.252 415.14 li
367.676 414.805 367.319 414.093 367.317 413.082 cv
367.314 412.362 367.492 411.586 367.801 410.84 cv
368.366 409.474 369.369 408.205 370.514 407.544 cv
370.601 407.494 370.687 407.448 370.772 407.407 cv
371.561 407.024 372.27 407.015 372.796 407.32 cv
372.132 406.952 li
cp
f
370.514 407.544 mo
372.285 406.521 373.726 407.342 373.732 409.378 cv
373.738 411.414 372.306 413.893 370.535 414.916 cv
368.763 415.939 367.322 415.118 367.317 413.082 cv
367.311 411.047 368.742 408.567 370.514 407.544 cv
cp
.00784314 .313726 .454902 rgb
f
370.516 408.25 mo
371.948 407.423 373.113 408.087 373.118 409.733 cv
373.123 411.379 371.965 413.383 370.533 414.21 cv
369.1 415.037 367.935 414.373 367.931 412.728 cv
367.926 411.082 369.084 409.077 370.516 408.25 cv
cp
.760784 .760784 .760784 rgb
f
370.52 409.747 mo
371.233 409.335 371.813 409.666 371.815 410.485 cv
371.817 411.304 371.241 412.302 370.529 412.713 cv
369.816 413.125 369.236 412.794 369.234 411.975 cv
369.231 411.156 369.807 410.158 370.52 409.747 cv
cp
.00392157 .109804 .168627 rgb
f
420.801 378.399 mo
420.274 378.093 419.565 378.102 418.776 378.485 cv
418.691 378.527 418.605 378.572 418.518 378.623 cv
417.373 379.284 416.37 380.553 415.805 381.918 cv
415.496 382.665 415.319 383.441 415.321 384.161 cv
415.324 385.172 415.681 385.884 416.256 386.218 cv
416.921 386.587 li
416.345 386.252 415.988 385.541 415.985 384.529 cv
415.983 383.809 416.161 383.034 416.47 382.287 cv
417.034 380.922 418.037 379.652 419.182 378.991 cv
419.269 378.941 419.355 378.895 419.441 378.854 cv
420.229 378.471 420.938 378.462 421.465 378.768 cv
420.801 378.399 li
cp
f
419.182 378.991 mo
420.954 377.968 422.395 378.79 422.401 380.825 cv
422.406 382.861 420.975 385.341 419.203 386.363 cv
417.432 387.386 415.991 386.565 415.985 384.529 cv
415.979 382.494 417.411 380.014 419.182 378.991 cv
cp
.00784314 .313726 .454902 rgb
f
419.184 379.697 mo
420.617 378.87 421.782 379.534 421.786 381.18 cv
421.791 382.826 420.634 384.831 419.201 385.658 cv
417.769 386.484 416.604 385.82 416.599 384.175 cv
416.594 382.529 417.752 380.524 419.184 379.697 cv
cp
.760784 .760784 .760784 rgb
f
419.188 381.194 mo
419.901 380.783 420.481 381.113 420.484 381.932 cv
420.486 382.751 419.91 383.749 419.197 384.16 cv
418.484 384.572 417.904 384.242 417.902 383.422 cv
417.9 382.603 418.476 381.606 419.188 381.194 cv
cp
.00392157 .109804 .168627 rgb
f
427.663 374.742 mo
427.137 374.436 426.428 374.445 425.639 374.828 cv
425.554 374.87 425.468 374.915 425.381 374.966 cv
424.236 375.627 423.233 376.896 422.668 378.261 cv
422.359 379.008 422.181 379.784 422.183 380.504 cv
422.186 381.515 422.543 382.226 423.119 382.561 cv
423.783 382.93 li
423.208 382.595 422.851 381.884 422.848 380.872 cv
422.846 380.152 423.023 379.377 423.332 378.63 cv
423.897 377.265 424.9 375.995 426.045 375.334 cv
426.132 375.284 426.218 375.238 426.303 375.197 cv
427.092 374.814 427.801 374.805 428.328 375.111 cv
427.663 374.742 li
cp
f
426.045 375.334 mo
427.817 374.311 429.258 375.133 429.263 377.168 cv
429.269 379.204 427.837 381.683 426.066 382.706 cv
424.294 383.729 422.853 382.908 422.848 380.872 cv
422.842 378.837 424.273 376.357 426.045 375.334 cv
cp
.00784314 .313726 .454902 rgb
f
426.047 376.04 mo
427.479 375.213 428.644 375.877 428.649 377.523 cv
428.654 379.169 427.496 381.173 426.064 382 cv
424.632 382.827 423.467 382.163 423.462 380.518 cv
423.457 378.872 424.615 376.867 426.047 376.04 cv
cp
.760784 .760784 .760784 rgb
f
426.051 377.537 mo
426.764 377.125 427.344 377.456 427.346 378.275 cv
427.349 379.094 426.773 380.092 426.06 380.503 cv
425.347 380.915 424.767 380.585 424.765 379.765 cv
424.762 378.946 425.338 377.948 426.051 377.537 cv
cp
.00392157 .109804 .168627 rgb
f
353.311 398.671 mo
332.862 386.799 li
332.874 408.9 li
353.323 420.709 li
353.311 398.671 li
cp
.819608 .819608 .819608 rgb
f
353.311 398.671 mo
332.862 386.799 li
332.874 408.9 li
353.323 420.709 li
353.311 398.671 li
cp
.133333 .65098 .937255 rgb
f
341.499 404.405 mo
341.086 404.405 340.63 404.268 340.179 404.007 cv
335.498 401.426 li
334.142 400.645 333.087 398.965 333.087 397.597 cv
333.087 392.743 li
333.087 391.702 333.723 391.003 334.668 391.003 cv
335.087 391.003 335.531 391.137 335.989 391.401 cv
340.67 393.983 li
342.026 394.764 343.081 396.444 343.081 397.813 cv
343.081 402.666 li
343.081 403.706 342.445 404.405 341.499 404.405 cv
cp
.027451 .2 .305882 rgb
f
342.58 402.666 mo
342.58 403.849 341.612 404.257 340.43 403.574 cv
335.739 400.989 li
334.556 400.306 333.587 398.779 333.587 397.597 cv
333.587 392.744 li
333.587 391.56 334.556 391.151 335.739 391.834 cv
340.43 394.42 li
341.612 395.103 342.58 396.629 342.58 397.813 cv
342.58 402.666 li
cp
.992157 .721569 .0745098 rgb
f
351.392 409.77 mo
350.979 409.77 350.523 409.632 350.073 409.371 cv
345.391 406.79 li
344.036 406.009 342.981 404.329 342.981 402.961 cv
342.981 398.108 li
342.981 397.067 343.617 396.367 344.562 396.367 cv
344.981 396.367 345.424 396.501 345.882 396.765 cv
350.564 399.347 li
351.918 400.129 352.973 401.81 352.973 403.178 cv
352.973 408.03 li
352.973 409.07 352.337 409.77 351.392 409.77 cv
cp
.027451 .2 .305882 rgb
f
352.473 408.031 mo
352.473 409.213 351.505 409.621 350.323 408.939 cv
345.632 406.353 li
344.449 405.67 343.481 404.144 343.481 402.961 cv
343.481 398.108 li
343.481 396.924 344.449 396.516 345.632 397.199 cv
350.323 399.784 li
351.505 400.467 352.473 401.994 352.473 403.178 cv
352.473 408.031 li
cp
.992157 .721569 .0745098 rgb
f
353.327 398.671 mo
332.878 386.799 li
415.518 338.642 li
435.967 350.515 li
353.327 398.671 li
cp
.337255 .72549 .937255 rgb
f
435.966 350.515 mo
353.327 398.671 li
353.327 421.332 li
436.013 373.058 li
435.966 350.515 li
cp
.862745 .862745 .862745 rgb
f
435.966 350.515 mo
353.327 398.671 li
353.327 421.332 li
436.013 373.058 li
435.966 350.515 li
cp
.145098 .454902 .658824 rgb
f
356.001 407.853 mo
355.055 407.853 354.42 407.154 354.42 406.113 cv
354.42 401.26 li
354.42 399.891 355.475 398.21 356.821 397.434 cv
365.063 392.676 li
365.513 392.415 365.969 392.279 366.381 392.279 cv
367.327 392.279 367.962 392.978 367.962 394.019 cv
367.962 398.872 li
367.962 400.239 366.909 401.918 365.563 402.695 cv
357.321 407.454 li
356.87 407.715 356.414 407.853 356.001 407.853 cv
cp
.027451 .2 .305882 rgb
f
354.92 406.113 mo
354.92 407.296 355.888 407.705 357.071 407.022 cv
365.313 402.263 li
366.495 401.581 367.462 400.055 367.462 398.872 cv
367.462 394.019 li
367.462 392.835 366.495 392.426 365.313 393.108 cv
357.071 397.867 li
355.888 398.55 354.92 400.077 354.92 401.26 cv
354.92 406.113 li
cp
.992157 .721569 .0745098 rgb
f
378.475 394.912 mo
377.529 394.912 376.894 394.214 376.894 393.173 cv
376.894 388.32 li
376.894 386.952 377.949 385.271 379.296 384.494 cv
387.538 379.735 li
387.988 379.475 388.443 379.338 388.855 379.338 cv
389.802 379.338 390.437 380.038 390.437 381.079 cv
390.437 385.931 li
390.437 387.299 389.384 388.979 388.038 389.755 cv
379.796 394.513 li
379.345 394.774 378.888 394.912 378.475 394.912 cv
378.475 394.912 li
cp
.027451 .2 .305882 rgb
f
377.395 393.173 mo
377.395 394.356 378.362 394.764 379.546 394.081 cv
387.788 389.322 li
388.97 388.64 389.937 387.114 389.937 385.932 cv
389.937 381.079 li
389.937 379.895 388.97 379.486 387.788 380.168 cv
379.546 384.927 li
378.362 385.61 377.395 387.136 377.395 388.32 cv
377.395 393.173 li
cp
.992157 .721569 .0745098 rgb
f
423.137 369.039 mo
422.192 369.039 421.556 368.34 421.556 367.3 cv
421.556 362.447 li
421.556 361.078 422.611 359.398 423.958 358.62 cv
432.2 353.862 li
432.65 353.602 433.106 353.465 433.518 353.465 cv
434.463 353.465 435.099 354.164 435.099 355.205 cv
435.099 360.059 li
435.099 361.426 434.045 363.105 432.7 363.882 cv
424.458 368.641 li
424.006 368.902 423.55 369.039 423.137 369.039 cv
cp
.027451 .2 .305882 rgb
f
422.056 367.3 mo
422.056 368.483 423.024 368.891 424.207 368.208 cv
432.45 363.449 li
433.631 362.767 434.599 361.241 434.599 360.059 cv
434.599 355.206 li
434.599 354.022 433.631 353.613 432.45 354.295 cv
424.207 359.054 li
423.024 359.737 422.056 361.263 422.056 362.447 cv
422.056 367.3 li
cp
.992157 .721569 .0745098 rgb
f
400.724 381.989 mo
399.777 381.989 399.143 381.291 399.143 380.251 cv
399.143 375.397 li
399.143 374.029 400.197 372.348 401.544 371.571 cv
409.786 366.813 li
410.236 366.552 410.693 366.416 411.105 366.416 cv
412.05 366.416 412.686 367.115 412.686 368.156 cv
412.686 373.008 li
412.686 374.377 411.632 376.056 410.286 376.832 cv
402.044 381.591 li
401.593 381.851 401.136 381.989 400.724 381.989 cv
400.724 381.989 li
cp
.027451 .2 .305882 rgb
f
399.643 380.25 mo
399.643 381.433 400.611 381.841 401.794 381.158 cv
410.036 376.4 li
411.218 375.717 412.185 374.191 412.185 373.009 cv
412.185 368.156 li
412.185 366.972 411.218 366.563 410.036 367.245 cv
401.794 372.004 li
400.611 372.687 399.643 374.213 399.643 375.397 cv
399.643 380.25 li
cp
.992157 .721569 .0745098 rgb
f
353.327 411.819 mo
353.327 411.796 li
353.318 411.801 li
353.318 411.814 li
353.327 411.819 li
cp
.890196 .215686 .176471 rgb
f
353.319 413.892 mo
353.327 413.888 li
353.327 411.819 li
353.318 411.814 li
353.319 413.892 li
cp
f
353.319 413.892 mo
353.319 413.921 li
353.327 413.926 li
353.327 413.888 li
353.319 413.892 li
cp
f
353.318 411.814 mo
353.318 411.801 li
353.307 411.807 li
353.318 411.814 li
cp
f
353.318 411.814 mo
353.307 411.807 li
332.869 400.008 li
332.87 402.115 li
351.482 412.861 li
353.294 413.907 li
353.319 413.892 li
353.318 411.814 li
cp
f
353.294 413.907 mo
353.319 413.921 li
353.319 413.892 li
353.294 413.907 li
cp
f
414.86 376.182 mo
396.968 386.538 li
396.968 388.631 li
414.86 378.275 li
414.86 376.182 li
cp
f
420.001 375.3 mo
435.998 366.064 li
435.994 363.974 li
420.001 373.207 li
420.001 375.3 li
cp
f
392.619 390.897 mo
392.619 389.055 li
375.468 398.981 li
375.468 401.076 li
393.053 390.897 li
392.619 390.897 li
cp
f
370.525 401.842 mo
353.327 411.796 li
353.327 413.888 li
355.119 412.854 li
370.525 403.936 li
370.525 401.842 li
cp
f
353.327 421.332 mo
342.553 416.912 li
332.878 409.46 li
332.877 406.483 li
342.553 414.396 li
353.323 417.965 li
353.327 421.332 li
cp
.00784314 .313726 .454902 rgb
f
336.43 408.19 mo
336.155 408.19 335.831 408.086 335.49 407.889 cv
335.418 407.848 li
334.285 407.193 333.327 405.698 333.327 404.581 cv
333.327 404.166 333.454 403.671 334.06 403.671 cv
334.335 403.671 334.66 403.775 335 403.971 cv
335.072 404.013 li
336.206 404.667 337.163 406.163 337.163 407.279 cv
337.163 407.695 337.036 408.19 336.43 408.19 cv
cp
.992157 .721569 .0745098 rgb
f
351.846 416.854 mo
351.572 416.854 351.247 416.75 350.907 416.553 cv
350.835 416.512 li
349.701 415.858 348.743 414.362 348.743 413.246 cv
348.743 412.83 348.871 412.335 349.477 412.335 cv
349.751 412.335 350.076 412.439 350.417 412.636 cv
350.489 412.677 li
351.622 413.332 352.58 414.827 352.58 415.944 cv
352.58 416.359 352.453 416.854 351.846 416.854 cv
cp
f
368.738 391.145 mo
372.524 388.959 li
372.524 408.705 li
368.738 410.891 li
368.738 391.145 li
cp
.00784314 .313726 .454902 rgb
f
372.524 388.659 mo
372.472 388.659 372.42 388.672 372.374 388.699 cv
368.588 390.885 li
368.495 390.939 368.438 391.038 368.438 391.145 cv
368.438 410.891 li
368.438 410.998 368.495 411.097 368.588 411.151 cv
368.634 411.177 368.686 411.191 368.738 411.191 cv
368.789 411.191 368.841 411.177 368.888 411.151 cv
372.674 408.965 li
372.767 408.911 372.824 408.812 372.824 408.705 cv
372.824 388.959 li
372.824 388.852 372.767 388.753 372.674 388.699 cv
372.627 388.672 372.576 388.659 372.524 388.659 cv
372.524 388.659 li
cp
372.524 388.959 mo
372.524 408.705 li
368.738 410.891 li
368.738 391.145 li
372.524 388.959 li
372.524 388.959 li
cp
.027451 .2 .305882 rgb
f
372.316 389.319 mo
368.945 391.265 li
368.945 401.091 li
372.316 399.146 li
372.316 389.319 li
cp
.992157 .721569 .0745098 rgb
f
372.836 388.779 mo
376.325 386.765 li
376.325 406.51 li
372.836 408.524 li
372.836 388.779 li
cp
.00784314 .313726 .454902 rgb
f
376.325 386.465 mo
376.273 386.465 376.221 386.478 376.175 386.505 cv
372.686 388.519 li
372.594 388.572 372.536 388.671 372.536 388.779 cv
372.536 408.524 li
372.536 408.632 372.594 408.731 372.686 408.784 cv
372.733 408.811 372.785 408.824 372.836 408.824 cv
372.888 408.824 372.94 408.811 372.986 408.784 cv
376.475 406.77 li
376.567 406.717 376.625 406.618 376.625 406.51 cv
376.625 386.765 li
376.625 386.658 376.567 386.558 376.475 386.505 cv
376.428 386.478 376.377 386.465 376.325 386.465 cv
376.325 386.465 li
cp
376.325 386.765 mo
376.325 406.51 li
372.836 408.524 li
372.836 388.779 li
376.325 386.765 li
376.325 386.765 li
cp
.027451 .2 .305882 rgb
f
373.044 388.898 mo
373.044 398.725 li
376.117 396.951 li
376.117 387.125 li
373.044 388.898 li
cp
.992157 .721569 .0745098 rgb
f
413.448 365.328 mo
417.234 363.142 li
417.234 382.888 li
413.448 385.074 li
413.448 365.328 li
cp
.00784314 .313726 .454902 rgb
f
417.234 362.842 mo
417.182 362.842 417.13 362.855 417.084 362.882 cv
413.298 365.068 li
413.205 365.122 413.148 365.221 413.148 365.328 cv
413.148 385.074 li
413.148 385.181 413.205 385.28 413.298 385.334 cv
413.344 385.361 413.396 385.374 413.448 385.374 cv
413.499 385.374 413.551 385.361 413.598 385.334 cv
417.384 383.148 li
417.477 383.094 417.534 382.995 417.534 382.888 cv
417.534 363.142 li
417.534 363.035 417.477 362.936 417.384 362.882 cv
417.337 362.855 417.286 362.842 417.234 362.842 cv
417.234 362.842 li
cp
417.234 363.142 mo
417.234 382.888 li
413.448 385.074 li
413.448 365.328 li
417.234 363.142 li
417.234 363.142 li
cp
.027451 .2 .305882 rgb
f
417.026 363.502 mo
413.655 365.448 li
413.655 375.275 li
417.026 373.329 li
417.026 363.502 li
cp
.992157 .721569 .0745098 rgb
f
417.546 362.962 mo
421.035 360.948 li
421.035 380.694 li
417.546 382.707 li
417.546 362.962 li
cp
.00784314 .313726 .454902 rgb
f
421.035 360.648 mo
420.983 360.648 420.931 360.661 420.885 360.688 cv
417.396 362.702 li
417.304 362.755 417.246 362.854 417.246 362.962 cv
417.246 382.707 li
417.246 382.815 417.304 382.914 417.396 382.967 cv
417.443 382.994 417.495 383.008 417.546 383.008 cv
417.598 383.008 417.65 382.994 417.696 382.967 cv
421.185 380.953 li
421.277 380.9 421.335 380.801 421.335 380.694 cv
421.335 360.948 li
421.335 360.841 421.277 360.742 421.185 360.688 cv
421.138 360.661 421.086 360.648 421.035 360.648 cv
421.035 360.648 li
cp
421.035 360.948 mo
421.035 380.694 li
417.546 382.707 li
417.546 362.962 li
421.035 360.948 li
421.035 360.948 li
cp
.027451 .2 .305882 rgb
f
417.754 363.082 mo
417.754 372.908 li
420.827 371.134 li
420.827 361.308 li
417.754 363.082 li
cp
.992157 .721569 .0745098 rgb
f
390.903 378.343 mo
394.689 376.157 li
394.689 395.903 li
390.903 398.089 li
390.903 378.343 li
cp
.00784314 .313726 .454902 rgb
f
394.689 375.857 mo
394.637 375.857 394.585 375.87 394.539 375.897 cv
390.753 378.083 li
390.66 378.137 390.603 378.236 390.603 378.343 cv
390.603 398.089 li
390.603 398.196 390.66 398.295 390.753 398.349 cv
390.799 398.376 390.851 398.389 390.903 398.389 cv
390.954 398.389 391.006 398.376 391.053 398.349 cv
394.839 396.163 li
394.932 396.109 394.989 396.01 394.989 395.903 cv
394.989 376.157 li
394.989 376.05 394.932 375.951 394.839 375.897 cv
394.792 375.87 394.741 375.857 394.689 375.857 cv
394.689 375.857 li
cp
394.689 376.157 mo
394.689 395.903 li
390.903 398.089 li
390.903 378.343 li
394.689 376.157 li
394.689 376.157 li
cp
.027451 .2 .305882 rgb
f
394.481 376.517 mo
391.111 378.463 li
391.111 388.29 li
394.481 386.344 li
394.481 376.517 li
cp
.992157 .721569 .0745098 rgb
f
395.001 375.977 mo
398.49 373.963 li
398.49 393.708 li
395.001 395.723 li
395.001 375.977 li
cp
.00784314 .313726 .454902 rgb
f
398.49 373.663 mo
398.438 373.663 398.386 373.676 398.34 373.703 cv
394.851 375.717 li
394.759 375.77 394.701 375.869 394.701 375.977 cv
394.701 395.723 li
394.701 395.83 394.759 395.929 394.851 395.982 cv
394.898 396.009 394.95 396.022 395.001 396.022 cv
395.053 396.022 395.105 396.009 395.151 395.982 cv
398.64 393.968 li
398.732 393.915 398.79 393.816 398.79 393.708 cv
398.79 373.963 li
398.79 373.856 398.732 373.757 398.64 373.703 cv
398.593 373.676 398.541 373.663 398.49 373.663 cv
398.49 373.663 li
cp
398.49 373.963 mo
398.49 393.708 li
395.001 395.723 li
395.001 375.977 li
398.49 373.963 li
398.49 373.963 li
cp
.027451 .2 .305882 rgb
f
395.209 376.097 mo
395.209 385.923 li
398.282 384.149 li
398.282 374.323 li
395.209 376.097 li
cp
.992157 .721569 .0745098 rgb
f
340.558 407.374 mo
342.19 408.316 li
342.565 411.018 li
342.964 408.763 li
344.597 409.706 li
345.075 414.408 li
343.92 413.741 li
343.617 411.154 li
343.248 413.354 li
341.906 412.579 li
341.519 409.943 li
341.241 412.194 li
340.086 411.528 li
340.558 407.374 li
cp
1 .988235 .87451 rgb
f
362.144 97.2891 mo
362.752 96.9355 li
362.963 96.8132 363.255 96.8302 363.577 97.0162 cv
362.968 97.3699 li
362.646 97.184 362.354 97.1669 362.144 97.2891 cv
cp
.752941 .8 .00392157 rgb
f
gsave
362.144 97.2891 mo
362.752 96.9355 li
362.963 96.8132 363.255 96.8302 363.577 97.0162 cv
362.968 97.3699 li
362.646 97.184 362.354 97.1669 362.144 97.2891 cv
cp
clp
362.144 97.2891 mo
362.752 96.9355 li
362.963 96.8132 363.255 96.8302 363.577 97.0162 cv
362.968 97.3699 li
362.646 97.184 362.354 97.1669 362.144 97.2891 cv
362.144 97.2891 li
cp
f
grestore
366.511 100.979 mo
365.902 101.333 li
365.987 101.284 366.058 101.213 366.113 101.121 cv
366.722 100.767 li
366.667 100.859 366.595 100.93 366.511 100.979 cv
cp
.709804 .709804 .709804 rgb
f
gsave
366.511 100.979 mo
365.902 101.333 li
365.987 101.284 366.058 101.213 366.113 101.121 cv
366.722 100.767 li
366.667 100.859 366.595 100.93 366.511 100.979 cv
cp
clp
366.113 101.121 mo
366.722 100.767 li
366.667 100.859 366.595 100.93 366.511 100.979 cv
365.902 101.333 li
365.987 101.284 366.058 101.213 366.113 101.121 cv
366.113 101.121 li
cp
f
grestore
366.244 100.591 mo
366.853 100.237 li
366.847 100.316 li
366.239 100.67 li
366.244 100.591 li
cp
.752941 .8 .00392157 rgb
f
362.968 97.3699 mo
363.577 97.0162 li
365.702 98.2433 li
365.093 98.5969 li
362.968 97.3699 li
cp
f
367.839 102.993 mo
368.447 102.639 li
368.185 102.887 li
367.576 103.241 li
367.839 102.993 li
cp
.00784314 .380392 .54902 rgb
f
366.239 100.67 mo
366.847 100.316 li
368.447 102.639 li
367.839 102.993 li
366.239 100.67 li
cp
.752941 .8 .00392157 rgb
f
365.093 98.5969 mo
365.702 98.2433 li
366.341 98.6124 366.855 99.5055 366.853 100.237 cv
366.244 100.591 li
366.246 99.8591 365.733 98.966 365.093 98.5969 cv
cp
f
gsave
365.093 98.5969 mo
365.702 98.2433 li
366.341 98.6124 366.855 99.5055 366.853 100.237 cv
366.244 100.591 li
366.246 99.8591 365.733 98.966 365.093 98.5969 cv
cp
clp
365.093 98.5969 mo
365.702 98.2433 li
365.759 98.2764 365.815 98.3137 365.87 98.3547 cv
365.262 98.7083 li
365.207 98.6673 365.151 98.63 365.093 98.5969 cv
365.093 98.5969 li
cp
f
365.262 98.7083 mo
365.87 98.3547 li
366.353 98.7144 366.736 99.3598 366.831 99.9582 cv
366.222 100.312 li
366.128 99.7134 365.744 99.068 365.262 98.7083 cv
365.262 98.7083 li
cp
f
366.222 100.312 mo
366.831 99.9582 li
366.845 100.053 366.853 100.146 366.853 100.237 cv
366.244 100.591 li
366.245 100.5 366.237 100.406 366.222 100.312 cv
366.222 100.312 li
cp
f
grestore
365.093 98.5969 mo
365.733 98.966 366.246 99.8591 366.244 100.591 cv
366.239 100.67 li
367.839 102.993 li
367.576 103.241 li
366.113 101.121 li
365.922 101.439 365.535 101.514 365.086 101.254 cv
362.96 100.027 li
362.321 99.6581 361.805 98.7634 361.807 98.0286 cv
361.809 97.297 362.329 97.0007 362.968 97.3699 cv
365.093 98.5969 li
cp
.482353 .541176 0 rgb
f
386.99 128.409 mo
386.197 127.949 385.13 127.962 383.944 128.538 cv
383.816 128.601 383.686 128.669 383.555 128.745 cv
381.832 129.74 380.323 131.65 379.474 133.704 cv
379.009 134.828 378.741 135.995 378.744 137.078 cv
378.748 138.6 379.286 139.67 380.152 140.174 cv
383.422 142.074 li
382.555 141.57 382.018 140.5 382.014 138.978 cv
382.011 137.895 382.278 136.728 382.743 135.604 cv
383.593 133.55 385.102 131.64 386.825 130.645 cv
386.955 130.57 387.085 130.501 387.213 130.438 cv
388.4 129.862 389.467 129.849 390.259 130.309 cv
386.99 128.409 li
cp
.00392157 .109804 .168627 rgb
f
386.825 130.645 mo
389.49 129.106 391.658 130.342 391.667 133.405 cv
391.676 136.468 389.522 140.199 386.856 141.738 cv
384.19 143.277 382.022 142.041 382.014 138.978 cv
382.005 135.915 384.159 132.184 386.825 130.645 cv
cp
.760784 .760784 .760784 rgb
f
386.825 130.645 mo
389.49 129.106 391.658 130.342 391.667 133.405 cv
391.676 136.468 389.522 140.199 386.856 141.738 cv
384.19 143.277 382.022 142.041 382.014 138.978 cv
382.005 135.915 384.159 132.184 386.825 130.645 cv
cp
.00784314 .313726 .454902 rgb
f
386.833 133.614 mo
388.072 132.899 389.079 133.473 389.083 134.896 cv
389.087 136.32 388.086 138.054 386.848 138.769 cv
385.609 139.484 384.601 138.91 384.597 137.486 cv
384.593 136.063 385.594 134.329 386.833 133.614 cv
cp
.760784 .760784 .760784 rgb
f
422.992 107.658 mo
422.2 107.198 421.133 107.211 419.947 107.787 cv
419.818 107.85 419.689 107.919 419.558 107.994 cv
417.835 108.989 416.326 110.899 415.476 112.953 cv
415.011 114.077 414.744 115.244 414.747 116.327 cv
414.751 117.849 415.289 118.919 416.155 119.423 cv
419.424 121.323 li
418.558 120.819 418.021 119.749 418.017 118.227 cv
418.013 117.144 418.281 115.977 418.746 114.853 cv
419.596 112.799 421.105 110.889 422.827 109.894 cv
422.958 109.818 423.088 109.75 423.216 109.687 cv
424.403 109.111 425.47 109.098 426.262 109.558 cv
422.992 107.658 li
cp
.00392157 .109804 .168627 rgb
f
422.827 109.894 mo
425.493 108.355 427.661 109.591 427.67 112.654 cv
427.678 115.717 425.524 119.448 422.859 120.987 cv
420.193 122.525 418.025 121.29 418.017 118.227 cv
418.008 115.164 420.162 111.433 422.827 109.894 cv
cp
.760784 .760784 .760784 rgb
f
422.827 109.894 mo
425.493 108.355 427.661 109.591 427.67 112.654 cv
427.678 115.717 425.524 119.448 422.859 120.987 cv
420.193 122.525 418.025 121.29 418.017 118.227 cv
418.008 115.164 420.162 111.433 422.827 109.894 cv
cp
.00784314 .313726 .454902 rgb
f
422.836 112.863 mo
424.075 112.148 425.082 112.722 425.086 114.145 cv
425.09 115.569 424.089 117.303 422.85 118.018 cv
421.612 118.733 420.604 118.159 420.6 116.735 cv
420.596 115.312 421.597 113.578 422.836 112.863 cv
cp
.760784 .760784 .760784 rgb
f
434.191 99.1461 mo
434.169 108.906 li
376.482 142.663 li
376.505 132.903 li
434.191 99.1461 li
cp
.407843 .486275 .0117647 rgb
f
376.505 132.903 mo
376.482 142.663 li
351.067 127.989 li
351.089 118.229 li
376.505 132.903 li
cp
.317647 .403922 .0117647 rgb
f
376.505 139.622 mo
376.482 142.663 li
351.067 127.989 li
351.089 124.948 li
376.505 139.622 li
cp
1 .988235 .87451 rgb
f
434.191 99.1461 mo
376.505 132.903 li
351.089 118.229 li
408.776 84.4726 li
434.191 99.1461 li
cp
.647059 .686275 .00392157 rgb
f
390.147 124.986 mo
364.912 110.32 li
369.106 95.8664 li
394.28 110.496 li
390.147 124.986 li
cp
.482353 .541176 0 rgb
f
365.797 110.027 mo
369.436 96.8653 li
393.396 110.789 li
389.816 123.987 li
365.797 110.027 li
cp
.333333 .839216 .823529 rgb
f
394.28 110.496 mo
369.106 95.8664 li
391.344 83.2184 li
416.519 97.8483 li
394.28 110.496 li
cp
.752941 .8 .00392157 rgb
f
416.519 97.8483 mo
421.326 106.702 li
390.147 124.986 li
394.28 110.496 li
416.519 97.8483 li
cp
.407843 .486275 .0117647 rgb
f
394.83 110.984 mo
416.225 98.8236 li
420.054 106.631 li
391.615 123.333 li
394.83 110.984 li
cp
.333333 .839216 .823529 rgb
f
367.135 129.943 mo
359.713 125.63 li
358.971 128.164 li
367.877 133.306 li
367.135 129.943 li
cp
1 .988235 .87451 rgb
f
399.539 108.013 mo
398.799 108.45 li
398.799 121.052 li
399.539 120.704 li
399.539 108.013 li
cp
.407843 .486275 .0117647 rgb
f
414.405 99.3564 mo
413.665 99.7934 li
413.665 112.396 li
414.405 112.048 li
414.405 99.3564 li
cp
f
356.863 126.143 mo
356.863 126.614 356.477 126.777 356.005 126.505 cv
352.543 124.532 li
352.072 124.26 351.686 123.651 351.686 123.18 cv
351.686 121.08 li
351.686 120.608 352.057 120.542 352.511 120.932 cv
356.038 124.383 li
356.492 124.774 356.863 125.479 356.863 125.95 cv
356.863 126.143 li
cp
1 .823529 .160784 rgb
f
375.281 136.27 mo
375.281 136.741 374.895 136.904 374.424 136.632 cv
370.706 134.494 li
370.234 134.221 369.848 133.613 369.848 133.141 cv
369.848 132.949 li
369.848 132.477 370.22 132.201 370.674 132.334 cv
374.456 133.069 li
374.91 133.203 375.281 133.698 375.281 134.17 cv
375.281 136.27 li
cp
f
392.145 118 mo
392.847 117.592 li
394.703 117.049 li
394.001 117.457 li
392.145 118 li
cp
.752941 .8 .00392157 rgb
f
394.384 116.504 mo
395.086 116.096 li
395.329 115.955 395.664 115.975 396.034 116.188 cv
395.332 116.596 li
394.962 116.383 394.626 116.363 394.384 116.504 cv
394.384 116.504 li
cp
f
395.332 116.596 mo
396.034 116.188 li
398.489 117.606 li
397.787 118.014 li
395.332 116.596 li
cp
f
397.787 118.014 mo
398.489 117.606 li
398.555 117.644 398.619 117.686 398.683 117.733 cv
397.98 118.141 li
397.917 118.094 397.853 118.051 397.787 118.014 cv
397.787 118.014 li
cp
f
397.98 118.141 mo
398.683 117.733 li
399.238 118.148 399.683 118.894 399.792 119.586 cv
399.09 119.994 li
398.981 119.302 398.536 118.556 397.98 118.141 cv
397.98 118.141 li
cp
f
399.09 119.994 mo
399.792 119.586 li
399.809 119.695 399.818 119.802 399.818 119.906 cv
399.816 120.328 399.667 120.624 399.428 120.764 cv
398.725 121.172 li
398.965 121.033 399.114 120.736 399.115 120.314 cv
399.116 120.21 399.107 120.103 399.09 119.994 cv
399.09 119.994 li
cp
f
397.787 118.014 mo
398.522 118.438 399.118 119.47 399.115 120.314 cv
399.113 121.162 398.513 121.504 397.778 121.08 cv
395.323 119.662 li
394.805 119.363 394.36 118.762 394.142 118.142 cv
392.446 118.635 li
392.145 118 li
394.001 117.457 li
393.995 117.358 li
393.997 116.514 394.597 116.172 395.332 116.596 cv
397.787 118.014 li
cp
.482353 .541176 0 rgb
f
248.859 197.046 mo
249.441 196.708 li
249.643 196.591 249.922 196.607 250.23 196.785 cv
249.648 197.124 li
249.34 196.946 249.061 196.929 248.859 197.046 cv
cp
.709804 .709804 .709804 rgb
f
gsave
248.859 197.046 mo
249.441 196.708 li
249.643 196.591 249.922 196.607 250.23 196.785 cv
249.648 197.124 li
249.34 196.946 249.061 196.929 248.859 197.046 cv
cp
clp
248.859 197.046 mo
249.441 196.708 li
249.643 196.591 249.922 196.607 250.23 196.785 cv
249.648 197.124 li
249.34 196.946 249.061 196.929 248.859 197.046 cv
248.859 197.046 li
cp
f
grestore
253.038 200.577 mo
252.455 200.915 li
252.536 200.868 252.604 200.8 252.657 200.712 cv
253.239 200.374 li
253.187 200.462 253.118 200.53 253.038 200.577 cv
cp
f
gsave
253.038 200.577 mo
252.455 200.915 li
252.536 200.868 252.604 200.8 252.657 200.712 cv
253.239 200.374 li
253.187 200.462 253.118 200.53 253.038 200.577 cv
cp
clp
252.657 200.712 mo
253.239 200.374 li
253.187 200.462 253.118 200.53 253.038 200.577 cv
252.455 200.915 li
252.536 200.868 252.604 200.8 252.657 200.712 cv
252.657 200.712 li
cp
f
grestore
252.783 200.205 mo
253.365 199.867 li
253.359 199.942 li
252.777 200.281 li
252.783 200.205 li
cp
f
249.648 197.124 mo
250.23 196.785 li
252.263 197.959 li
251.681 198.297 li
249.648 197.124 li
cp
f
254.308 202.503 mo
254.89 202.165 li
254.639 202.402 li
254.057 202.74 li
254.308 202.503 li
cp
.00784314 .380392 .54902 rgb
f
252.777 200.281 mo
253.359 199.942 li
254.89 202.165 li
254.308 202.503 li
252.777 200.281 li
cp
.709804 .709804 .709804 rgb
f
251.681 198.297 mo
252.263 197.959 li
252.875 198.312 253.367 199.167 253.365 199.867 cv
252.783 200.205 li
252.785 199.505 252.293 198.651 251.681 198.297 cv
cp
f
gsave
251.681 198.297 mo
252.263 197.959 li
252.875 198.312 253.367 199.167 253.365 199.867 cv
252.783 200.205 li
252.785 199.505 252.293 198.651 251.681 198.297 cv
cp
clp
251.681 198.297 mo
252.263 197.959 li
252.318 197.991 252.372 198.027 252.425 198.066 cv
251.843 198.404 li
251.79 198.365 251.736 198.329 251.681 198.297 cv
251.681 198.297 li
cp
f
251.843 198.404 mo
252.425 198.066 li
252.886 198.41 253.253 199.027 253.343 199.6 cv
252.761 199.938 li
252.671 199.366 252.304 198.748 251.843 198.404 cv
251.843 198.404 li
cp
f
252.761 199.938 mo
253.343 199.6 li
253.358 199.69 253.365 199.78 253.365 199.867 cv
252.783 200.205 li
252.783 200.118 252.776 200.029 252.761 199.938 cv
252.761 199.938 li
cp
f
grestore
251.681 198.297 mo
252.293 198.651 252.785 199.505 252.783 200.205 cv
252.777 200.281 li
254.308 202.503 li
254.057 202.74 li
252.657 200.712 li
252.474 201.016 252.104 201.088 251.674 200.84 cv
249.641 199.666 li
249.029 199.313 248.535 198.457 248.537 197.754 cv
248.539 197.054 249.036 196.77 249.648 197.124 cv
251.681 198.297 li
cp
.933333 .929412 .882353 rgb
f
307.251 209.789 mo
306.472 209.336 305.422 209.35 304.254 209.917 cv
304.128 209.978 304 210.046 303.871 210.12 cv
302.176 211.099 300.691 212.979 299.854 215 cv
299.397 216.107 299.133 217.255 299.136 218.321 cv
299.141 219.819 299.669 220.872 300.522 221.368 cv
303.74 223.238 li
302.887 222.742 302.358 221.689 302.354 220.191 cv
302.351 219.125 302.614 217.977 303.072 216.87 cv
303.908 214.849 305.393 212.969 307.089 211.99 cv
307.218 211.916 307.345 211.848 307.472 211.787 cv
308.639 211.22 309.689 211.206 310.469 211.659 cv
307.251 209.789 li
cp
.00392157 .109804 .168627 rgb
f
307.089 211.99 mo
309.712 210.476 311.846 211.692 311.855 214.706 cv
311.863 217.721 309.743 221.393 307.12 222.907 cv
304.496 224.422 302.363 223.206 302.354 220.191 cv
302.346 217.177 304.465 213.505 307.089 211.99 cv
cp
.760784 .760784 .760784 rgb
f
307.089 211.99 mo
309.712 210.476 311.846 211.692 311.855 214.706 cv
311.863 217.721 309.743 221.393 307.12 222.907 cv
304.496 224.422 302.363 223.206 302.354 220.191 cv
302.346 217.177 304.465 213.505 307.089 211.99 cv
cp
.00784314 .313726 .454902 rgb
f
307.097 214.912 mo
308.316 214.208 309.308 214.773 309.312 216.174 cv
309.316 217.575 308.331 219.281 307.112 219.985 cv
305.892 220.689 304.901 220.124 304.897 218.723 cv
304.893 217.322 305.878 215.616 307.097 214.912 cv
cp
.760784 .760784 .760784 rgb
f
273.418 229.555 mo
272.638 229.102 271.588 229.115 270.42 229.682 cv
270.294 229.743 270.167 229.811 270.038 229.885 cv
268.342 230.865 266.857 232.744 266.021 234.766 cv
265.563 235.872 265.3 237.02 265.303 238.087 cv
265.307 239.584 265.836 240.638 266.689 241.133 cv
269.906 243.003 li
269.054 242.508 268.525 241.454 268.521 239.956 cv
268.518 238.89 268.781 237.742 269.239 236.635 cv
270.075 234.614 271.56 232.734 273.255 231.755 cv
273.384 231.681 273.512 231.613 273.638 231.552 cv
274.806 230.985 275.856 230.972 276.635 231.424 cv
273.418 229.555 li
cp
.00392157 .109804 .168627 rgb
f
273.255 231.755 mo
275.879 230.241 278.013 231.457 278.021 234.471 cv
278.03 237.486 275.91 241.158 273.286 242.672 cv
270.663 244.187 268.529 242.971 268.521 239.956 cv
268.512 236.942 270.632 233.27 273.255 231.755 cv
cp
.760784 .760784 .760784 rgb
f
273.255 231.755 mo
275.879 230.241 278.013 231.457 278.021 234.471 cv
278.03 237.486 275.91 241.158 273.286 242.672 cv
270.663 244.187 268.529 242.971 268.521 239.956 cv
268.512 236.942 270.632 233.27 273.255 231.755 cv
cp
.00784314 .313726 .454902 rgb
f
273.264 234.677 mo
274.483 233.973 275.474 234.538 275.478 235.939 cv
275.482 237.34 274.497 239.047 273.278 239.751 cv
272.059 240.454 271.067 239.889 271.063 238.488 cv
271.059 237.087 272.045 235.381 273.264 234.677 cv
cp
.760784 .760784 .760784 rgb
f
319.697 202.58 mo
319.697 211.299 li
259.544 246.045 li
259.274 239.338 li
276.101 225.571 li
305.495 208.489 li
319.697 202.58 li
cp
.133333 .192157 .247059 rgb
f
305.495 208.489 mo
276.101 225.571 li
276.091 225.579 li
276.361 236.336 li
305.803 219.335 li
305.533 208.473 li
305.495 208.489 li
cp
.862745 .862745 .862745 rgb
f
259.274 239.338 mo
259.544 246.045 li
229.492 228.766 li
229.223 222.059 li
259.274 239.338 li
cp
.211765 .309804 .4 rgb
f
319.697 202.58 mo
305.495 208.489 li
276.127 225.571 li
259.274 239.338 li
229.223 222.059 li
248.922 209.469 li
282.099 190.061 li
290.287 185.6 li
319.697 202.58 li
cp
.203922 .27451 .341176 rgb
f
283.145 210.825 mo
258.658 196.633 li
248.943 209.448 li
276.127 225.571 li
283.145 210.825 li
cp
1 .984314 .878431 rgb
f
281.85 211.291 mo
259.03 198.066 li
250.392 209.071 li
275.889 223.866 li
281.85 211.291 li
cp
.392157 .796078 .952941 rgb
f
300.568 200.765 mo
276.081 186.574 li
258.658 196.633 li
283.145 210.825 li
300.568 200.765 li
cp
1 .984314 .878431 rgb
f
282.996 210.825 mo
276.127 225.571 li
279.884 232.262 li
305.495 208.505 li
300.42 200.765 li
282.996 210.825 li
cp
.862745 .862745 .862745 rgb
f
304.022 208.169 mo
300.085 202.174 li
283.852 211.547 li
278.544 222.909 li
304.022 208.169 li
cp
.294118 .772549 .952941 rgb
f
247.954 234.271 mo
238.567 228.816 li
237.628 232.021 li
248.893 238.524 li
247.954 234.271 li
cp
1 .988235 .87451 rgb
f
236.132 230.249 mo
236.132 230.761 235.713 230.939 235.201 230.643 cv
231.44 228.499 li
230.927 228.204 230.508 227.542 230.508 227.03 cv
230.508 224.749 li
230.508 224.237 230.911 224.165 231.405 224.589 cv
235.236 228.338 li
235.729 228.762 236.132 229.528 236.132 230.04 cv
236.132 230.249 li
cp
.443137 .811765 .952941 rgb
f
258.45 243.114 mo
258.45 243.627 258.031 243.804 257.519 243.508 cv
253.48 241.185 li
252.968 240.889 252.549 240.228 252.549 239.716 cv
252.549 239.507 li
252.549 238.994 252.952 238.694 253.445 238.839 cv
257.554 239.638 li
258.047 239.783 258.45 240.321 258.45 240.833 cv
258.45 243.114 li
cp
f
289.794 217.349 mo
290.811 217.349 li
290.811 207.016 li
289.794 207.658 li
289.794 217.349 li
cp
.862745 .862745 .862745 rgb
f
270.795 197.825 mo
273.535 196.232 li
273.524 200.282 li
270.784 201.874 li
270.795 197.825 li
cp
.27451 .501961 .588235 rgb
f
263.174 193.424 mo
265.914 191.832 li
273.535 196.232 li
270.795 197.825 li
263.174 193.424 li
cp
.258824 .478431 .560784 rgb
f
270.795 197.825 mo
270.784 201.874 li
263.162 197.474 li
263.174 193.424 li
270.795 197.825 li
cp
.431373 .788235 .92549 rgb
f
274.603 200.023 mo
277.343 198.431 li
277.331 202.481 li
274.592 204.073 li
274.603 200.023 li
cp
.137255 .145098 .156863 rgb
f
274.603 200.023 mo
274.592 204.073 li
270.784 201.874 li
270.795 197.825 li
274.603 200.023 li
cp
.215686 .227451 .247059 rgb
f
270.795 197.825 mo
273.535 196.232 li
277.343 198.431 li
274.603 200.023 li
270.795 197.825 li
cp
.129412 .137255 .14902 rgb
f
274.603 200.023 mo
277.343 198.431 li
284.965 202.831 li
282.225 204.423 li
274.603 200.023 li
cp
.588235 .168627 .129412 rgb
f
282.225 204.423 mo
284.965 202.831 li
284.953 206.881 li
282.213 208.473 li
282.225 204.423 li
cp
.619608 .180392 .137255 rgb
f
282.225 204.423 mo
282.213 208.473 li
274.592 204.073 li
274.603 200.023 li
282.225 204.423 li
cp
.968627 .282353 .215686 rgb
f
280.982 228.316 mo
281.357 228.099 281.601 227.766 281.601 227.022 cv
281.593 226.293 281.279 226.336 280.982 226.507 cv
279.594 227.308 li
279.594 229.117 li
280.982 228.316 li
cp
278.408 226.938 mo
281.075 225.398 li
281.852 224.949 282.796 224.647 282.796 226.318 cv
282.796 228.21 281.787 228.931 281.075 229.309 cv
280.736 229.491 279.637 229.995 279.594 229.994 cv
279.594 232.456 li
278.408 233.141 li
278.408 226.938 li
cp
.203922 .27451 .341176 rgb
f
285.825 227.8 mo
286.82 227.225 287.126 226.721 287.126 225.048 cv
287.126 223.116 286.768 223.162 285.825 223.707 cv
284.908 224.236 284.516 224.581 284.516 226.555 cv
284.516 228.248 284.765 228.412 285.825 227.8 cv
cp
285.825 222.614 mo
287.291 221.767 288.313 221.457 288.313 224.363 cv
288.313 227.1 287.35 228.012 285.825 228.893 cv
284.3 229.773 283.33 230.063 283.33 227.24 cv
283.33 224.334 284.401 223.436 285.825 222.614 cv
cp
f
289.113 220.757 mo
290.299 220.072 li
290.299 224.742 li
290.299 225.191 290.58 225.021 290.825 224.879 cv
292.952 223.651 li
292.952 224.744 li
290.406 226.214 li
289.73 226.604 289.113 226.711 289.113 225.753 cv
289.113 220.757 li
cp
f
293.683 218.119 mo
294.87 217.434 li
294.87 223.637 li
293.683 224.322 li
293.683 218.119 li
cp
f
297.71 215.727 mo
298.579 215.225 299.203 214.947 299.87 214.761 cv
299.87 215.689 li
299.862 215.694 298.82 216.178 297.989 216.658 cv
297.121 217.159 296.786 217.551 296.786 219.429 cv
296.786 220.818 297.016 221.355 297.994 220.791 cv
298.883 220.277 299.87 219.639 299.87 219.639 cv
299.87 220.568 li
299.315 221.059 298.598 221.55 297.71 222.048 cv
296.142 222.939 295.6 222.063 295.6 220.097 cv
295.6 218.114 296.023 216.7 297.71 215.727 cv
cp
f
300.579 215.426 mo
300.579 214.349 301.341 213.686 301.926 213.36 cv
301.926 213.36 304.11 212.16 304.655 211.92 cv
304.655 212.9 li
302.206 214.315 li
301.766 214.569 301.766 214.814 301.766 215.044 cv
301.766 216.011 li
304.27 214.655 li
304.27 215.631 li
301.766 217.156 li
301.766 218.124 li
301.769 218.571 302.045 218.403 302.291 218.262 cv
304.655 216.896 li
304.655 217.869 li
304.175 218.211 302.011 219.539 302.011 219.539 cv
301.458 219.883 300.579 220.266 300.579 219.122 cv
300.579 215.426 li
cp
f
279.633 218.189 mo
280.305 217.799 li
282.08 217.279 li
281.408 217.67 li
279.633 218.189 li
cp
.709804 .709804 .709804 rgb
f
281.775 216.758 mo
282.447 216.368 li
282.679 216.233 283 216.252 283.354 216.456 cv
282.682 216.847 li
282.328 216.642 282.007 216.624 281.775 216.758 cv
281.775 216.758 li
cp
f
282.682 216.847 mo
283.354 216.456 li
285.703 217.813 li
285.031 218.203 li
282.682 216.847 li
cp
f
285.031 218.203 mo
285.703 217.813 li
285.766 217.849 285.827 217.89 285.888 217.935 cv
285.216 218.325 li
285.156 218.28 285.094 218.239 285.031 218.203 cv
285.031 218.203 li
cp
f
285.216 218.325 mo
285.888 217.935 li
286.42 218.331 286.845 219.046 286.949 219.707 cv
286.277 220.098 li
286.173 219.436 285.748 218.721 285.216 218.325 cv
285.216 218.325 li
cp
f
286.277 220.098 mo
286.949 219.707 li
286.966 219.811 286.974 219.914 286.974 220.014 cv
286.973 220.417 286.83 220.701 286.601 220.834 cv
285.929 221.225 li
286.158 221.091 286.301 220.808 286.302 220.404 cv
286.302 220.304 286.294 220.202 286.277 220.098 cv
286.277 220.098 li
cp
f
285.031 218.203 mo
285.734 218.609 286.304 219.596 286.302 220.404 cv
286.3 221.215 285.726 221.542 285.023 221.137 cv
282.674 219.78 li
282.177 219.494 281.752 218.919 281.544 218.326 cv
279.921 218.797 li
279.633 218.189 li
281.408 217.67 li
281.403 217.576 li
281.405 216.768 281.979 216.441 282.682 216.847 cv
285.031 218.203 li
cp
.933333 .929412 .882353 rgb
f
441.522 42.302 mo
8.47819 42.302 li
23.1511 26.0831 li
8.47819 9.8641 li
441.522 9.8641 li
425.255 26.0831 li
441.522 42.302 li
cp
.00784314 .247059 .360784 rgb
f
69.9976 19.6928 mo
72.939 17.9727 li
75.8257 17.9727 li
75.8257 33.1816 li
72.9163 33.1816 li
72.9163 20.8605 li
69.9976 21.5935 li
69.9976 19.6928 li
cp
.980392 .984314 .992157 rgb
f
83.0001 30.522 mo
84.587 30.522 li
85.4408 30.522 85.9013 30.3259 85.9013 29.2387 cv
85.9013 27.8418 li
85.9013 26.7794 85.4976 26.512 84.6448 26.512 cv
81.0199 26.512 li
81.0199 28.6017 81.2285 30.522 83.0001 30.522 cv
cp
81.6848 17.9046 mo
83.7714 17.7219 86.3514 17.9727 88.3027 18.3227 cv
88.3027 20.528 li
83.0972 20.528 li
81.2068 20.528 81.0385 22.7622 81.0199 24.3821 cv
82.2372 24.0714 83.5752 23.9454 85.2271 23.9454 cv
88.1675 23.9454 88.8014 25.524 88.8014 27.499 cv
88.8014 29.7632 li
88.8014 32.2968 87.3178 33.2022 85.1125 33.2022 cv
82.1422 33.2022 li
79.7294 33.1929 78.1105 31.7475 78.1105 25.2029 cv
78.1105 19.6969 79.8915 18.0646 81.6848 17.9046 cv
cp
f
96.1699 17.9727 mo
99.0783 17.9727 li
99.0783 33.1816 li
96.1699 33.1816 li
96.1699 17.9727 li
cp
f
101.029 21.7742 mo
101.029 18.7615 102.816 17.8819 105.143 17.8478 cv
107.329 17.8014 109.822 18.0935 111.023 18.4487 cv
111.023 20.7355 li
109.693 20.6178 106.697 20.528 105.943 20.528 cv
104.671 20.5002 103.938 20.5879 103.938 22.0034 cv
103.938 22.7457 li
103.938 23.9506 104.398 24.2107 105.577 24.2107 cv
107.979 24.2107 li
110.96 24.2107 111.575 26.5606 111.575 28.2414 cv
111.575 29.2542 li
111.575 32.7077 109.423 33.3478 107.366 33.3478 cv
104.771 33.3478 103.07 33.1888 101.497 32.7252 cv
101.497 30.4384 li
102.328 30.522 104.862 30.6676 106.795 30.6676 cv
107.669 30.6676 108.665 30.5231 108.665 29.3574 cv
108.665 28.5387 li
108.665 27.6746 108.404 27.1201 107.293 27.1201 cv
104.956 27.1201 li
101.289 27.1201 101.029 24.411 101.029 23.0885 cv
101.029 21.7742 li
cp
f
119.406 30.584 mo
121.848 30.584 122.596 29.7807 122.596 25.6809 cv
122.596 20.942 121.718 20.5487 119.406 20.5487 cv
117.156 20.5487 116.197 20.8398 116.197 25.6809 cv
116.197 29.8324 116.808 30.584 119.406 30.584 cv
cp
119.406 17.8685 mo
123.001 17.8685 125.506 18.554 125.506 25.6809 cv
125.506 32.3918 123.146 33.2652 119.406 33.2652 cv
115.665 33.2652 113.288 32.6003 113.288 25.6809 cv
113.288 18.554 115.915 17.8685 119.406 17.8685 cv
cp
f
128.199 17.9727 mo
132.239 17.9727 li
134.771 28.3632 li
137.292 17.9727 li
141.321 17.9727 li
142.748 33.1816 li
139.874 33.1816 li
138.882 23.0307 li
136.427 33.1816 li
133.179 33.1816 li
130.634 23.0307 li
129.734 33.1816 li
126.859 33.1816 li
128.199 17.9727 li
cp
f
144.38 21.1299 mo
144.38 18.491 146.249 17.9438 147.683 17.9727 cv
147.683 17.9727 153.038 18.1214 154.375 18.3052 cv
154.375 20.7097 li
148.369 20.7097 li
147.289 20.7097 147.289 21.3127 147.289 21.8733 cv
147.289 24.2458 li
153.43 24.4657 li
153.43 26.8569 li
147.289 27.053 li
147.289 29.4256 li
147.298 30.5272 147.974 30.5065 148.577 30.5065 cv
154.375 30.5065 li
154.375 32.8904 li
153.198 33.0505 147.891 33.2435 147.891 33.2435 cv
146.535 33.3044 144.38 32.9968 144.38 30.1916 cv
144.38 21.1299 li
cp
f
155.604 17.9727 mo
166.845 17.9727 li
166.845 20.653 li
162.616 20.653 li
162.616 33.1816 li
159.708 33.1816 li
159.708 20.653 li
155.604 20.653 li
155.604 17.9727 li
cp
f
174.708 24.8498 mo
175.721 24.8498 176.204 24.5525 176.204 22.7147 cv
176.204 20.9875 175.622 20.559 174.708 20.559 cv
171.26 20.559 li
171.26 24.8498 li
174.708 24.8498 li
cp
168.339 17.9727 mo
174.993 17.9727 li
177.368 17.9727 179.133 19.0826 179.133 22.7147 cv
179.133 26.48 177.557 26.926 176.712 27.1924 cv
179.592 33.1816 li
176.318 33.1816 li
173.804 27.4257 li
171.249 27.1356 li
171.249 33.1816 li
168.339 33.1816 li
168.339 17.9727 li
cp
f
181.151 17.9727 mo
184.059 17.9727 li
184.059 33.1816 li
181.151 33.1816 li
181.151 17.9727 li
cp
f
191.02 17.8055 mo
193.152 17.8055 194.681 18.0099 196.318 18.4972 cv
196.318 20.7737 li
196.298 20.7737 193.743 20.4867 191.705 20.4867 cv
189.578 20.4867 188.757 20.974 188.757 25.5766 cv
188.757 28.9847 189.319 30.6263 191.718 30.6263 cv
193.899 30.6263 196.318 30.458 196.318 30.458 cv
196.318 32.7345 li
194.956 33.1537 193.197 33.3406 191.02 33.3065 cv
187.176 33.2724 185.847 30.3568 185.847 25.5353 cv
185.847 20.6736 186.885 17.8055 191.02 17.8055 cv
cp
f
202.686 17.9727 mo
213.928 17.9727 li
213.928 20.653 li
209.699 20.653 li
209.699 33.1816 li
206.79 33.1816 li
206.79 20.653 li
202.686 20.653 li
202.686 17.9727 li
cp
f
221.791 24.8498 mo
222.803 24.8498 223.287 24.5525 223.287 22.7147 cv
223.287 20.9875 222.704 20.559 221.791 20.559 cv
218.342 20.559 li
218.342 24.8498 li
221.791 24.8498 li
cp
215.422 17.9727 mo
222.076 17.9727 li
224.45 17.9727 226.216 19.0826 226.216 22.7147 cv
226.216 26.48 224.639 26.926 223.795 27.1924 cv
226.674 33.1816 li
223.4 33.1816 li
220.886 27.4257 li
218.331 27.1356 li
218.331 33.1816 li
215.422 33.1816 li
215.422 17.9727 li
cp
f
236.191 27.2337 mo
234.482 21.8062 li
232.654 27.2337 li
236.191 27.2337 li
cp
232.809 17.9727 mo
236.118 17.9727 li
241.058 33.1816 li
237.961 33.1816 li
236.881 29.8117 li
231.899 29.8117 li
230.802 33.1816 li
227.677 33.1816 li
232.809 17.9727 li
cp
f
242.612 17.9727 mo
245.561 17.9727 li
251.597 27.8005 li
251.597 17.9727 li
254.505 17.9727 li
254.505 33.1816 li
251.597 33.1816 li
245.541 23.4684 li
245.541 33.1816 li
242.612 33.1816 li
242.612 17.9727 li
cp
f
256.466 21.7742 mo
256.466 18.7615 258.253 17.8819 260.58 17.8478 cv
262.767 17.8014 265.259 18.0935 266.46 18.4487 cv
266.46 20.7355 li
265.13 20.6178 262.134 20.528 261.38 20.528 cv
260.108 20.5002 259.375 20.5879 259.375 22.0034 cv
259.375 22.7457 li
259.375 23.9506 259.836 24.2107 261.015 24.2107 cv
263.416 24.2107 li
266.397 24.2107 267.012 26.5606 267.012 28.2414 cv
267.012 29.2542 li
267.012 32.7077 264.861 33.3478 262.803 33.3478 cv
260.209 33.3478 258.507 33.1888 256.935 32.7252 cv
256.935 30.4384 li
257.766 30.522 260.299 30.6676 262.232 30.6676 cv
263.107 30.6676 264.103 30.5231 264.103 29.3574 cv
264.103 28.5387 li
264.103 27.6746 263.842 27.1201 262.731 27.1201 cv
260.393 27.1201 li
256.726 27.1201 256.466 24.411 256.466 23.0885 cv
256.466 21.7742 li
cp
f
275.07 24.9954 mo
275.99 24.9954 276.587 24.5236 276.587 22.6972 cv
276.569 20.9007 275.797 20.559 275.07 20.559 cv
271.668 20.559 li
271.668 24.9954 li
275.07 24.9954 li
cp
268.758 17.9727 mo
275.299 17.9727 li
277.203 17.9727 279.517 18.5664 279.517 22.6631 cv
279.517 27.3029 277.041 27.6415 275.299 27.561 cv
274.468 27.5269 271.772 27.2079 271.668 27.1459 cv
271.668 33.1816 li
268.758 33.1816 li
268.758 17.9727 li
cp
f
286.936 30.584 mo
289.378 30.584 290.127 29.7807 290.127 25.6809 cv
290.127 20.942 289.248 20.5487 286.936 20.5487 cv
284.687 20.5487 283.728 20.8398 283.728 25.6809 cv
283.728 29.8324 284.339 30.584 286.936 30.584 cv
cp
286.936 17.8685 mo
290.531 17.8685 293.036 18.554 293.036 25.6809 cv
293.036 32.3918 290.676 33.2652 286.936 33.2652 cv
283.197 33.2652 280.818 32.6003 280.818 25.6809 cv
280.818 18.554 283.446 17.8685 286.936 17.8685 cv
cp
f
301.162 24.8498 mo
302.175 24.8498 302.658 24.5525 302.658 22.7147 cv
302.658 20.9875 302.076 20.559 301.162 20.559 cv
297.714 20.559 li
297.714 24.8498 li
301.162 24.8498 li
cp
294.793 17.9727 mo
301.447 17.9727 li
303.822 17.9727 305.587 19.0826 305.587 22.7147 cv
305.587 26.48 304.011 26.926 303.166 27.1924 cv
306.046 33.1816 li
302.772 33.1816 li
300.258 27.4257 li
297.703 27.1356 li
297.703 33.1816 li
294.793 33.1816 li
294.793 17.9727 li
cp
f
306.991 17.9727 mo
318.233 17.9727 li
318.233 20.653 li
314.004 20.653 li
314.004 33.1816 li
311.095 33.1816 li
311.095 20.653 li
306.991 20.653 li
306.991 17.9727 li
cp
f
325.12 17.9727 mo
328.028 17.9727 li
328.028 33.1816 li
325.12 33.1816 li
325.12 17.9727 li
cp
f
334.988 17.8055 mo
337.12 17.8055 338.649 18.0099 340.287 18.4972 cv
340.287 20.7737 li
340.266 20.7737 337.712 20.4867 335.674 20.4867 cv
333.546 20.4867 332.725 20.974 332.725 25.5766 cv
332.725 28.9847 333.288 30.6263 335.686 30.6263 cv
337.868 30.6263 340.287 30.458 340.287 30.458 cv
340.287 32.7345 li
338.924 33.1537 337.165 33.3406 334.988 33.3065 cv
331.144 33.2724 329.816 30.3568 329.816 25.5353 cv
329.816 20.6736 330.853 17.8055 334.988 17.8055 cv
cp
f
347.545 30.584 mo
349.986 30.584 350.735 29.7807 350.735 25.6809 cv
350.735 20.942 349.856 20.5487 347.545 20.5487 cv
345.295 20.5487 344.336 20.8398 344.336 25.6809 cv
344.336 29.8324 344.947 30.584 347.545 30.584 cv
cp
347.545 17.8685 mo
351.14 17.8685 353.644 18.554 353.644 25.6809 cv
353.644 32.3918 351.284 33.2652 347.545 33.2652 cv
343.805 33.2652 341.426 32.6003 341.426 25.6809 cv
341.426 18.554 344.054 17.8685 347.545 17.8685 cv
cp
f
355.601 17.9727 mo
358.55 17.9727 li
364.586 27.8005 li
364.586 17.9727 li
367.494 17.9727 li
367.494 33.1816 li
364.586 33.1816 li
358.53 23.4684 li
358.53 33.1816 li
355.601 33.1816 li
355.601 17.9727 li
cp
f
369.456 21.7742 mo
369.456 18.7615 371.243 17.8819 373.57 17.8478 cv
375.757 17.8014 378.249 18.0935 379.45 18.4487 cv
379.45 20.7355 li
378.12 20.6178 375.124 20.528 374.37 20.528 cv
373.098 20.5002 372.365 20.5879 372.365 22.0034 cv
372.365 22.7457 li
372.365 23.9506 372.826 24.2107 374.005 24.2107 cv
376.406 24.2107 li
379.387 24.2107 380.002 26.5606 380.002 28.2414 cv
380.002 29.2542 li
380.002 32.7077 377.851 33.3478 375.793 33.3478 cv
373.199 33.3478 371.497 33.1888 369.925 32.7252 cv
369.925 30.4384 li
370.756 30.522 373.289 30.6676 375.222 30.6676 cv
376.097 30.6676 377.093 30.5231 377.093 29.3574 cv
377.093 28.5387 li
377.093 27.6746 376.832 27.1201 375.721 27.1201 cv
373.383 27.1201 li
369.716 27.1201 369.456 24.411 369.456 23.0885 cv
369.456 21.7742 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 17.0.0
%%For: (IvAN) ()
%%Title: (1502.i039.007.P.m004.c23.isometric transport icons.eps)
%%CreationDate: 2/6/2015 12:59 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KCKoQ9Y42=65L9<>l0=6D83LI0liGh'$_aq(.+$DcC2$3Y8BJ!E[&a)Aq<bA])*:UQ,c7Caamrd$X;0gdN24j7,`P:-HT0^G
%29OIhH+*Op>0:lfe>d&&8t'p<eIpG_s)[r&Zg+79)/ba`KZ'`g=pi<'p)4#$&-Q@a2bUiqfB=9_RjG8eaYdkYG%WClqb_1*p58&&
%UmQJkeS<@tWGJ\=\qG8_48*B^>4W*GG.lO&M6oQ6o9<R1h1<&."8kl4kB*U3THgYp"l,bhCju+t3u]4RT_-RYLI:OCg?H&(h.j:d
%nGtPmlj2/7Ok2(_#LM.-MSVMMn1^.%.`G_rX2[j+>J\YRK+rL6SD%m)UdK&,(l6R(LAj^A`S:IOs0Kl;s8'u0J)P=;1/jJWkMRJD
%@rTs`(b*X_a'?Bp7Ku-!&g<)O4SJ'B>-[D@$p)U'F.=m,NO4Bq3!/VWK@s(bc:-IJd"!!3UkON/0$Q43!5r1<i<JcC-f4`$otIW+
%SpA;\f@KP_Bm5W<s+>U(Ca?jDi58mGCVOad]>-s'0WCp]Y?CR65^<>%6ENeB*MT&&X]lb]gZMlZKXP%LiQSC">f2'bZ<,p8rpW_o
%R3#nRjY`'fD[94h0XVmA6V02?f*.0j_mK>5"LK&JOoFG<SRYIJO$A5Ko6(*8]&0Z^<uYqU/kih69ZujI]3=W\0(s&DIhO\R2t[-u
%s*p"bYb9bD)EnmpTB>i6bJ6[;*T>p\NH21)a1:ElT357r%9ORWk.,rps+?n/(VQ-3L&e,)S+&bPJK=db5;1PCp[k-0K884KB!8Vk
%W&4POT;>5lH01s[Gbo;a%C986m@SfX59?VdBSiUHgVjft!Ik>kd`#te_3>F\cF0';:Z5UU'E24Ps2K=+eh<tbIKp4kebJ:WR]TE,
%!Mn?rVbW-:<h.GGC;iZISY??Thn.EWn>$=@lhB7k`Te4lVZfbgQ`/0U&/,t8*lT%tfY%:HlSZhUTQg(l&Fp/FVothWos884g8P;t
%L*=D%R+QPpG%8:\ctrG;(THG,ZdrcBC7l[A-b8&5n'&uu60"mEi8O$GSh&B,eamshF\s_ZocN]d(hh.*Z)"<d>`TeCn51mlkSpib
%N\<e)jXM[n1!=lPS"oGkDWq5Pb?;I0Y'O$t,#3'Qg43HfFk!I8^&EC:lRfL*;F_PB(4rf&+k3gTYC-`s7!Jf9?(JPa0LIucHF"'(
%>Sf?t8&=ZD)Z98ODtbREkk$rD/`?n>D#]mnBK`cq:VG>0LTA4dG4hrgog!#h5f6:->o[`\\u=3&D6H5WGj<Zd.-'5/ri>nuBnqI:
%bV8HK83K"c:)iAKNP6-C4l,CM[G8G4e#ZEJX&ab$DRVCM`*@Q;o8@JpCA`fF78@IX1fJ0q'MmD(U8m;l"C\'p,,Rs*:rn]d:/cjI
%%GAZSL`:#U;cLc!^N#KnM>:em8b`mMKHC4He*rkbS_3>;cbLK8Pe?7N:iB'>7aUsj&B(KqdHK-T9ASSd0@!H'2ng`0)U5$p'eFt$
%UiiUV3q@9()eaXu`1[</-`l]XHF5^ORG[MR<(blKViu1&m!+5mpU(5V091W%C*-C-N2(ntU1!gujW.,q)BmTXcbg/a>dZ:]Pmj#t
%f]o>EmAS]RQb71sFiC%&(-slLcWC<;6o8+S]*LT!$rZprDg8sW,M"$i/B2`+9j!M!3$!Q?H*<B7:L(Gu,A-p[3@f+2&m&t:86B\0
%Y0nqSUJcHlXEGAuR>[b)&n`h:k'j'](F'ofpi;3EQhYTX0:2HS5O&/LMr`(#,%dEo\ZGPMWuYI[bK]J`EB(GM(Vnd^8&Sm64#*7X
%::Hbf^/ZVA1R8=fDLSpX!/45b^^`?)ou?Au^ZZ9bU_U+>lubA>@O!t+]%ON]@k=3l*;*2.1$bPko.-V>WH>f@"A,%PcT.#5`S"bE
%s4mBQhl$:<b>hk9lOgK!8p!/Sqo*fpARO-f;2Z),eEq-G`*s^mGC&XKZ/cpjMX^rjBV)01?QoSne+\4Lf$->BZl%X1'&BT'gUUpk
%dk*K;:c8*lNR;CW-ZJCD<jUajM89*@F6[^pdfoc@cD1EY@*8Led!)j,;).AX0T.k-fBWP=/fWiD=`&8)irt-;INKIuHE$=I]4!=O
%Sh'Z`1Oh.kHQu6YJj3"-Elp+p)W1rQB'*0EN%OI<S?j4_!ZTr0%?#D<=fZ`1L@50mZ=:H"]r6;63:laJ$>jD,cT&s_@/[<tG!%G&
%3&I#/9g]n3I*!1;F.>`JpaX\VX!mP.SBsF&II87+kL/(@^DeceI/I"rOt<6kdf1l?nejsB$tT1pRa#$Em<S_iEBZ5N.6dcl9,jpT
%$lPT.-uQ,?[+KXt/03crHFm:^p>Un*hseW*aT^$5Mj8i.K8-oC;j==bf5NHSY'\E:lN0`O`DCb7k_:XS)N/[9ACf;`+t0W`\kSJ=
%YF/BsWsb%#]*R"E@bp19Feog_,3CK;I?(XA([tm]N83%G@_ART-8*<1`A!<b?T6$Y?tN_*a)P&?`M>?M3*f+,JfEKm`gt;.eQL\n
%#rd5b+cZo!rIh2W(c.=gi`V\+\^A?N1!X6K(WAk]WuZICqCY7-UR@6GDMl/%N+8<Wdl7-G%IZ4NC8Y&^Q9>)*b$M>1QWm4u#i3HZ
%o:-1aVuMaOeAtEDn8gY,oJ;NNi&A;'c+"%U'4Ymd1VZH!R#-(rjetsl9i;V1Xl%E56pG:4Fi:ga3fhfa@]?Mu?hH-!m!#T.=^,a.
%Qs!j_C987)FfKV+'3hLq]OHiDAam'"pbBW&"SJ8@'N+Q`P9t[%'rOfdC3<Hc'PlTa5@T]Ul`"*)a'<nijc(.]0uuBHc=?*+h/7uA
%X%L!,O.u`Sfo7SL(k,=<N`X`C3>rg\7LXuU/<tPShLq,G0KJ+32apd%,M,!]A`[qI5C49'Y+Y#R;&.!+$^9]`rfW)):>]IV)tbb>
%NG:VB[&s6Y$l5KigT%jcR4+mW'4j'AR5bj7DrHU"'4mKhZZ1jl-)i;][[BZT.4mk98us%Fk-aeiV4o4W5+M01-\c=q-b1Y1FP,sC
%U6HE:(M,=#EKZ6CjJ!p1-qQ&6Q#]aS^E=>hZj=2jYr:=(hkQ?>PaU!=V'Hj'MON5>7>[kPAq&:f?nTSaSC5Vk:/*:AE<X1kagmr1
%id%eL$'UdE^M4MT1D.A:MjqXmU$<G+G#%X.^Z4sT@s7IRJ&M_[btFn*74V-)<1->Mg/$rjOm'1i/4fD:U=U$k2A^[VWst0/>YE;K
%=]T;Z$>H6b'!6=7Xd0f>M6W@[[7%&IMH1+W#b>:C`kabe[hp[keK`bX3WMj>dFFSGP:WIG/4c((ZAaO)d6[FIYBE_mr]"2:Mi@[r
%cQUt2b)VU.WGk"ZQ$O<_4/_qYmF@\9n&`m[nJ7F"leG#c)ua]Mi;_Ef2uIk?*i'Q"j0mFR1,[MeR]@Vi/5@d]Ue4?ZV<4+8WA_n*
%V:lddD;Kg]C3dd95*j9Dg>3NX8^Wkb.f(pFb4lcRI$lk@kUbR<XCpA!rrX>1%7\8PjVs0KK^IZe`]kQc/i/!P4Jl/Kp%;3tem$B/
%QuW#:(uM`nRu>s0q**tS@QAqLk#`#0hJ-Y/#K2FM?&h!R$57uMk!K0nPs5(>-/!/_)Ubd30Buk&cL1M7MJZtWd("oP=@;H;BS[gF
%QfCsG#A>f(Rt`m0q3!DV-97+l&Q_q^a\BP2VVb(;s"6X?`8phT3WEB<o3[qp49=TaHHb'6RkrrUr%L]_ju^Ct9?qpK1Z.9;2`^J(
%c?s9mFC`r3qW,kE*b)k*RI<i7J/AI)3k]\?p8=[q[Eo/IhitX9X-H:1c=]RX?G.r3)0Y?QR@DZs(kGmcFKX9s#H&/hW0'#NQo[)*
%EV716l^OX6LKCN6^J?5Z<^"4]6A*f$<of6+h=(e,pSD$I%MgN\VC$Zg]^:!(F\nji3]P11oB,nYC:!&Ff@sVW^"G"r`h!qkTsIl.
%SL#BN9gWJakU[%2r@:3IZ&F_hIWjbk&p%QQ\J>-GXnTEe^7@5;/Ukm4Ouj8.*3TQr`=/Mqg>6e9-=8';C)7];NTR,!Q$^!@=870#
%rM%;j(*q>VBmD#WQeRF@=TFu"5NB30:i8OW25TL/$IPZs=)Q<9Mbi9^5:nQjY=)duPpGj>o77\uAl4*q*JL3^9+lJ@!\[.',mh40
%JX9s]GT!2*$+qO7Qh^0Z!(ZoX!%A3s>nN2DmI8>B"DQ8dQsV<%P/NEE@M?(mO*7t<_WF)k/4-%e7JlXBXkGod<l]q-k>@?nClsQ6
%`=6Fma@%!g0^D.Sim@15.l&jVL01`IcIdk,2g]%4JS>TPa.rdcCi#,'"f@pPp8mY`=&=?;oqeJ\dS5R4B'8gMU0);^:HlJ`1SpH#
%;)?1iZ'AR,^N&9o\^!C&/ous^7@%G2WK\=G[V3q`$>ENj*NtBaeFq$>Qi5_7R;q;(h!R'CBE-c^Rbt#gqD\6N59lk[kmYeibl#Ij
%W;2jG`'^"!%uj`3h<>RK]ipG]_PQ#Ce@*B@35f'Hn^=(^L,VOrhg8**(]T0_Hm;Un1-:3r`j)ZFR<9_53$LTL2NArD35uq_Bh9:S
%-4O?AM.=cP$<cRP7N=E]iYXJcdjB'n=]OKR*$^;MbXicVIH>?$<oR*<.5/OuF/<.nFc3Yoc"`dG([A]5N![(ffd\J2?@<pZrYDQ3
%7(Db]&_1P9FfX?H\EMn%4,rWfX0l':%CEhui_#+?Qn)H`'%tLS`8%j[7QO#LTsJ4K/%!!n4g._?j%BojT2W/4:kaW>ZK=n[EbE$c
%\`&]5ER[UWh5nY"37R<W.#IKES8L-C`Rha_.[%A/8_p%BW#HGkP5#iZ%Jj@]TAs8TXB,L1cZ;p%EN5YLo&43:rCP.ar5KJ`:k;MV
%/5j>d/7R`jiN'^RS;t3S3`!#WIn.pg*$LjBPcm%l/9\m3GFDYmDoW/=Os?.="ARWES0jm3/lWP>R$fXOilh9NI(=JP..QF4D_CSB
%&o[3!H?1gL_Shp:]XbtM9@C_tO;-a'IcA["rnMGak@-tiim&k<>iO$<P**7qM)uO&"0r`bSVoq\4LoM\c"?da?&Z+]'45W(I(<7c
%!8^sC+r8q*Mg67gelQ,c$[Ri68hA8C=-C--1[3gK6@I)?Ul56DUs"o&)7(Ek8IBmkK%d6S^i<1Xj]ssK'hanZ.0XIpMPY(^a',Rk
%>,V7m(+2_VgYJ+8`VfN#bcA4?FNg3`:dDjdb>n1UF^erHaP!7"O1BblW_':DjC>LIYM84:H[.>$6or#)V-*;K9#Z%@^d.L\P.(--
%admS9[NHVelj9(!KbgG8M'b:8Cim8-Yoc4Nn9KcGQso:0"N8gu"0HL!Wp^b/0##s,e-?nn:9lFf`!sHmF&/74h13RKK^qIRN3TW&
%s&Z>s@NB1f/T6Lf&Yhsb=+e7s#4OusDqKH[=%Ug,`]K8fq43>'k2"Q<3O.^YaI6<E)sBm9Vk+hhkR[*\ZYBgB'70mMDtK;6UG'XD
%ia]Un:TN1<Y!c[tQ$G9F&t:;SM>ho]d?.bQF);UC>(Z=1XGFeA8qPkjYkuR/iRufa0fHeiETd4-,-]HhdBI9jI'm_`TNE4M*RCK)
%/%2M7Mn0_j)[AU.ct:h/],]F7@/[=_ecFe<H4A5/c8H,OPjp%q2TJ$r<[JdH9Pl3"hO*YhIrsr!qVE'%J"QDI0b+Zm[_6Z%,KS!I
%#%uKMq)o\`r633"`F:GG@KC9>,bK=N[j""ootC!s"`EJMpeU2!cFP@+(SSGX'di'1LSkRZ:XlQJ17_VF)+P;8%Hg#mbe+;<L:95X
%;XW]BDBE..gRGS$Am7t\G'/a4Yp"SrV7<""6ZZTZ@l8uq2"O-kIU@Wf7`a7ijP-K28Wej4=SG$)@rlU4GQi/*k1'H$hJn.-(TT6/
%P$p;-qLHQ\g@JR<doTaCF/9U\>kgu$l=:.r-!>S!n_/\3qZc(&ZSo_Wi`Vf)SVu\W:W5;&,(e^j%6k?0^0tkVkVYtfF/_VE8]]=T
%b"++qQu+3[G10p?(13J@D_sJ->TCBhI,$>43gD[3;OBb<^[gKOR?)Z!bta`9ZVsTHmk[(icpn`Fd.gP^>GbFo4Ii$LJ4YX[mn'e^
%9c..*,=m#743T\?C6X@3+VDpfd-8_cirFD!E\FI3T(UC0NUW/3ro[kYVr*X%=f1"<_G\o)&<mujk4])YL!m8kBi$e[-(qF%#Zf&+
%06mJPe5NPJmXN>m.<eXj2H$PH61Y3ME$"7%/((O@Fc3*>X1oE_Zu!!G/I`-=DI.XQ?fL]JD831lY70Y$i(:8%k`qV(Z<*p$WhF$!
%-kkk4O8o4"83M`8?NBd_`Ji;QlGH+:<W4X64N*$Eh_Ond6BM=(>71$<8.5oe,*R=p:i(>#l,qSi7X5=o-IY4C%$JEdO:Xalho0ia
%-^0[.2Ti^JG8ppA040o6i*?9pkHKU)RJWX)iZI*?D)Q1/V:Q`+l^QMY0:-T\,%;/X.h]*H;@`/3rSs/hLl?ZDJ,Ludc__O<bs^53
%au3,*=&QL(^ooT(%F^Cf,L*%Kg'iJ@%X05mS9?GtE;ZoaV1m58@5tETH<Wd<?U8kfgaVRH/l@Noe!63+Ppkrd=XVAg-^6J%QF'LZ
%$V@APYtSA9C=b-cO8+j9l9nYPJuTTCW_QN9U8kE"WX["7*:7LiF9H5K+OZE/>9Hm)()bk]JH%WdQ;4gZY@qVtdF*l;::0ZD[Bt$L
%a0h0r[Y1L,[H)p5D!kI40ehZsiZi%r*#i*?`C1E9SLEl4:tff]ZkK:,..+&cD2]SmeAI"tad=u^.ikq!?,=@]Nqeb#l9n_RK!(Dr
%Y"j(]U8rbf@Vn)V=_(8`LT/Y.0Y*TL6#2fsr-IEoU9,)GrU\as1(nGpB^8&j?WgV!l"BWaU4X+"r!PQQ,s"$5_2/[$$&_qG2TMRY
%Be^qpE\ksWc6\4<D:^P.3Gf.*+G:UjfZ]2\::0\tBPX2QlU4r)gA:*gg(pPsW+9UE7?UmIe"m"Po\#J!iFsKj27Q?0FJ>X^785/=
%>S8obW9Ko\Cnt?5^Q^eH^jikh31B!X?kW,g:\8_&T7:!.-Pou"rLE*7jN;\@Ck&q"[<SE]'4%*kg7PpD@L1(]MBTT:3-6[)1X";q
%Z&VdkU;jt0Y'2G6&hSMX/c>_.`Eo\D0s%75WqBDpYGT@33hm[kKldGYC2#dA;*Rb+G0#FpV/;ET@R`Om(&8ZH(q2*dj"a[K>362E
%ID9oT/unWPeL62f4\[RJF\o/bh6*Z34#fTB*8@,b*T9QJRe4MU*&$T/$S!]el-b>SGe_^E;h=e+%u;lWs+gLlI.6%n*0d1B[rcYA
%2=L1t?fPRWA.uC9h;(B*:O>@ceLG.t!XStG1!3nSj<k=V0ge)dqGBImf!)4T(G6I]"<BFQ7QTEXp$,kYRkJr9'mEFqq#HXbr%k],
%#nX+p(\)`tPrWLte=$24h-ADWj3#3o4e5^#n*]Gg]gh2W>I!!eT3BDK)WQIL[;c:b3eMq-4fcBVSR1gtg=;Xg9<T=n9n(QVR3;"#
%g*d'?e%[jKD*_co]^AFe-3g1&k1;$r^Wr(#'bg&-`a_FPMa>Be)0'9b`WZC.6E/T$2XA+T/^+?_=&XN_hr7RkD6G5L^K!\R3^pFO
%E"@YF(gg2@`4@strh6\`NR)&cj\Fq7lu2@!YY7*cC2%\;\7L<aHKZ)Z'.Eid/U&jW9t>.%'<4,(AJ\\Gr$%G9$(B-DD6B.I_#Kln
%hp`0F.NE&RW`@0BZkSN\Q*.)nPU.l0bQqLu&#5,\kH*>?4)3BJFSFP?oBGqp$(92-B#^&X*N;ZHB/-c>D<c.=gr/@\>MFjD]3ZJT
%Hj85+WRe_=XTo"SgjCFaJ._<rJA?'-II;6oVS^DLB."dZbgDam.?_K*WEf>S/(U`VGe,SB4"C@e73a^ZHSDgnCY#A4bCgEEHsnA#
%S?DUUX_tOQrEmc6:oO%\co6@g^&"-uhT=jhg.bO=Z)AXfB-q:t\m;!/`DP7[X%@2Wf&V"ch0`8h[52sXg#Hp?iT@I5i=sCN[@?>r
%YLBJ"M^Pn7m:XEKRqcR5g#1!1N]e%(Bq7jdFYe_RVt,6_n>L]i@_(,C?3;tRQ]\gaf#N*Aemt`PTO,gm4Kj.fCqU/J4o"LXSc/%f
%gOHkACRu8VLL.#_lVs@5aLBPE)gIcTgss>UG%@W*m[c:om;f4[>!Ku)TK3-,9l8Yq%"P<Och]Wj:qJ?/J$E",R48)bZ)ctc#L&&K
%OW!Q5='if0g'g[*EiYZ&6PLFADu),U_WOgt=>'>.Vc7ZLfXVuVJ^)p5USV@h<jUPQj317Je*AnjLW*$?C\Oe6]#a4lQLY2&FkLGo
%/t9O,:u1KG-F^+#R^HVV""&>9j>GXpVHUs)f*:ZnHaWislL1;OgG\Hh'>k#$Htq]g/5C':(Chccf*n,EkM`s\j'/d01bd`/iX]E-
%o@i*7e?SaD2mlYgG)L"`OQ/T)Xl^1MhsY\l^eCBr`.HL4#E7u&\A@N_QhJ);`O&^454!RVC9J\)nhIN6$.n*k+7s`[Pq(;1NbZ@O
%&/!_tkTH!j!@('@gatG0Hc:%ZFjOq.1,8&)%Ki);*/Cm"C`F0b;U:BtG#R('kn<*Y;,2hi\rbhQ9j`+We4q"hcZDMBNG-8ohUS)#
%`?=<cVB_9cl5%!<GQC5jm;I^+gk_]DIg:hQ*?C,dPmtHrCUS\N;Eeq_8lNUF]j`q.="K?Rno1AUNTraW>Fe_4jlZ<_0R#iXWWUFQ
%#cjLcWR_0Pp?g^&oN;(V53e\=R^KHa$cc-[_4:hK;a/\l/CYn,imtp;+(5]jZdcWO!VH3De1kdNWP8n[p@j<B^1dK3Ml+f:H,UTQ
%:addDHTmb`'aNd5[Z1#f-Pb(-ldM=nP*5:Ai!%nSqQFGCMrM52pl1UNE<@,3jG]poNL@1'YDEi!,0jCV%qWto#+0X($m#AUX.ebV
%gh:l,ZCU]T0h1`3]OjWkifppR&Rc[*pYi"!7^jJn#)pss,uFG.X^]CfGIHe=mZ3l>X*(.:jPW\cc!>:UIEbseif$6mSHIhfCH>YF
%RUBnf)r4sT=tpQ%V"H_*<=a)*:Dei9oNnf1gFS'G^khqKGi^o7Ju>Hk_WQf?#ks*6%NPXH-iAtUmXeWA%F=T1j5Gc%")2HJ_bAh]
%Vq#U9`&1Klm=*Cob0gl%fG,=4Ws1p77pbRcYmUg;@:":.hkA*<@?[?9EkR3:4jZ7FiYZ_pE+ja5APUrM)klZm1:'pCeS7;4^c-B(
%i2Q0\\H-CLn>ta!23r)uSkdC1h"mr'pGBcW[?7HlQ77&"[;*TPFm*j8B4MpWDoEnmY>iS,[Hi84C83Qrfl7hPp5#Rie?mll<`@@d
%Yqqq+FC\knf(/coju9L"_A(f<^MW1o;Q\XSY6>T"rW04a*16-.iq.*QJQLRd1TZ$-"Mp*%0>,pcNN*E,:QN:[,\)&%=cVumaR$k(
%6#nd8JI5rM;)hd087"flq>3cm(NB!C$BCjX]c?P?;*RDBW75Ridf\8-I3B'/lZ?q,<i]I1&o42Na7qj9aVhg%)Xai2P.dRHWFN!a
%^OAi1ASK&>)BB&1o/>D7;&+cd[aZ].Sm.Y?admUE^=-[e43bf'%[6?b/1oXs/I.Xb"+_AlOs)P"DQ&ra/"aIUJ]1efSc)+@gT]8G
%k6/\@L8NP`:>-a^T>F#C"\b8:Au3rG7KR(pE]DilKXrh]1RPICot1mnpnCqiLD5%Qg/*R:,Q2VZo*-NO9J+0&6k^LT4(m)]^"Ad,
%A$)<)pQ\5?Zs\ZA.k\-";R6C&gVnEf,W`/DTJb'Z%`a7Bm;a+=),SCQ\IC,@T]@_omJlihR$#WsbtbYc&^).7pcNs:VidV%b)EUM
%3j<+@6#T[@I[`Z<Vpq`3ISA*>W_obCR4Rr#!6dm6fEtOqfitph)[HdGmVNR;Xn2C#g2!@<;P)I@'3tDQ-_8`q7'p1c`bDD/;g8VF
%\K.YZYVdhAZnoS1F=aGgG&u)0UGcau,u/7*!l\2W<1;:i[6rQKJiI6'DHdec9$LPaUJ:UHj;"df6DNPAf^;G%p-)oX4GPhMBs%8Z
%fsDb<[>!4mhfF&.NS`!cH+hkEljTR.UNI[G(lbF2!L6,5?*8mgE7B!.7]gj13>t^3DV+-DFXC94Sb-&"NANl@*SmSNBST)86$nnm
%JL@I0B\;h"Mr"A8n_!8;GABld<+@6FT7,dq<@Kck>SP@fgRH,5Cuofeibe`2I?m=q2q4pY$5@CP:Fk7=%nHAbW1=2t%\!$3C_5.`
%I&+Y7%J:2NEf-Tg*ui'd3MhGdbfOjo4DM3&R\ZsV"hJ+&JIQE<d=$/7N`PRBYc"-_Vq3,dr/TB'K7uAJKOq*C.HXC;h!W,5_5LM5
%f-j@V/Cd9QI=ZK/@n(<nNCJ!;r0HWs9fhQQcq*UFDJ)m0><0Nq&?@q<`pFmkYV*gOB[ek(,Lk>q`["KOH;]36Z[394pG"N#9hY.$
%QP4'X7o=+>;l1-9>@f!KXfuM$b^f!k@ilP$+/tS3]'jdSI'Z4LV1F.3SQZ);WJpjh.MV*7k(8Z'nGT+^E*1D`qZCN,KNgpnds"2p
%[40?]QdllH!f]dc!4H[\T%*1Q85OY*;m^ZC-\'V7o;Rd_p%.>!%N&_b7^MThGb`q&"Jr+-MY!L)iPe_Z(rT!WFs\9p%YhGH%05El
%R6dqn%R*aN'_]Z5W70]je7k`G^5f05%0Z!UEQsO@]1b277;^OgpS0YsEg7[#k(_UX%nG"+S:tl%**n,"fQnIJ<1bo@V&E-BfO2<G
%*)hi+Z:t!Pbd6f3G!DRH;#SG8*I-t/f9b62Ee9a2m<5an/p=8I.-k]'@<FPk#GL#.7?TECobOB"9MU8fW*ag(oidm5Y+5.BX,c-m
%YU\=J!)jFH`fErs9-8=l[2q><0RH%EK1.4;,ig(T3;'UW6=XE'$?Vdg[T(+9eXLBAqH`JG)pQf"]30p6ja0@#J0!TZUqM).i:Iji
%3$P"nB^iC(dFB\laG#7YXVq=!Y$e=+FS3rlPVNMa2KEU,hqP&R?NCuF_Y(Uq^-%qJ2i`<-GDZbgp;Q(-80-a7>Tre(MGsPL)Pj$2
%%Hm).0k6854&5?F*7<)sg<Hs5GIR@bCCd$^9dVdMpJF<->*7*2q!C8/kThp)f).GZ;tF@nPF)ZWMt8[H/*cMaZ,O(oUZn>fj5JTr
%%G[MB9J!.6*tr<.1[O`i_FaO^Qt+MaX!T0-T3*m*8F!-M9IFu");ld*WTOL,EhmnE<DIj9'1f%u,;7'q':+oY8GQ!upf4Fq"/C56
%gU\HUO6PC<2:$UifZQfG%%oROmLGJ6[g14/n`[s(#s6(F-l4i_N?A&S;==on?aJ-C6klOeNW$>HgXS>/G;B,)1P-&Z`^L'oq?qL(
%7;q2&5q)r/kkLlR5ALt6[5b4(80JH1(ie/@kcH?A?;,2IM;FUkSXr;)<`!.I4Hd>:n50J#VlF9@mtJ*]-GG''%)">$-]mLl.u6MD
%*FHU2R0)nRFYCCl%\BRZI[84P$a5]XW+;f8,D??`!u:d^VCO-T<3_&d1Zda:fZX(WO<U9nK[)1Zd8B?AFSqoe9=;PH9Yi@M.0Gj^
%:n=1fNQGp&]pB)ZZ7@@@39[$oJPk6?@Rh^t<@*.+R&UnOHTs3P*@Rf?6*qt"^!['.][OsNWGK=*26n86enGZ!DH?T><BI0dit=ue
%VT0XBrlQe"X0$*p+b'^n2_&:Gc41k)O4S`_lg.;/)]B:$m(hT)fX@HX;-QaWk8?P[3.0:7V=!^3I">^k),D\1eH4<8N7NQl*+Lcc
%l@OfE:QV!oXWjo/0k_<g5%"GaG\:rphY5,T>9n/Kn2Io<M-3U>i7@#uar/>*%d.d^A(^B9C(qn1M&[8FH$c2SWh<`U6\2N[3Bnau
%"3YGMDRpOn+mI&%FrH\rXF`DGC>8:M`J31E(:`RWCsd5,j&"'kB;p;_ZidkIO0Vb-g!!<2B?.FOJ8gpVJDR]*mbdoG]Q*N;rd+,%
%b&d12rb?V_]j8BT4)`o#?F[DKF?`hYVE9"?lXsG]p=eZpm3d83e$\#Hn*b,%HR5So`V80"bd)+*7OS3^J%fCIfj+QAI^lqndctXl
%?LUH=bi\ciXg[-PGrL*Lm+(OdL?0H;WfNd:o',fFo9$;$bO8h(-XXBqk.KU>k.c;f>45No1A0dI#H"GHZ2@#FmM5<DSWiE,gAM[%
%-=8L!T1/Hsa,q,"c)VA)B9%&t2rdC;[p/a>\T(dI\@L0^f9c(ZGC,%?m;`Ab+at.i_qprfHouDS[E[F[[7^.eS%EXrZN6)6^6^LX
%h63:e:[apSNWA<=maM!0-N(IL28<)H\WpHC^YHpNXkmqD,i0<[4W$Y;=^!FpQ0_RF\I7_FI3Wgb]XODZ\ak#k1O&kA+m8M>5'cbt
%p;M?W<4p.Ve`EpUmY)RJ)39YM]6`Z3>4pA9Ejg/cl2B0+o&%.)ma8_O8AKl&p#d,<$mX?\I,)q&9)%YpO8%3I3VC-/<upI$Vda8l
%V&d!l\]04R9DRbA2o%H:^?;#R7X;,)HW5YiAp]T*<`cqMbrM^Q)W'l<h9>8&gcjCpOZ!tic0p#k\">Xjk,7=#2rtQcr9X,IlM!m1
%/s,]n4M6[&nj/e%<t/]jPO.B5Z)S!"9mP>u+)gW0*u-a&'lGV<DrWMQ++0ehW!NlBSGfj*d3$P-$6/in`lZd>eNUIJoi^t-hsh_K
%i4$_sP:'Qb4TG'OZ0pi:n]#nNbKE[<RfUOUhgX/MLOiLZk5bo3q^A\Fa+r<iZNt1#b2uKVh6<e@[D[F^V3F!cIp(&u*kh?[<@m"A
%P8.`6?cdr4DdR/NF4l1njf&#uoBXH)Eu66>]fSDX%"0eOn$c'Fnsc`R2R?c3IlTO6<PO>[l]q>&o0TVNO9#laI!2$tEjJ!'Hh=`F
%,.#&]n3nN#T_q,ra60j6![n-+<r1A;dl57LMPMW:/T.^5GQ5f*5O\;8M&ToAL_Kbu]PZQs]/kNY[%G5sZ<Qe@GL-*JNMh&snFreO
%Ej5(ZUQ>]uH+:/MD9>Ylo/4VEnDsG0Tu?-Y7AiY'6>FB=HG7"^3IT1DDDmebl^nPXPo&\DZ#T]55Ig<!6X_ak&^`\)?=E))lTsr*
%*+!M7n"pJ@H%gD1Y"?duBWI)D\d>F<ILh7Hr?-<5Z.3jF9<Sj^c?k!q4:_\CC2X;;s(cssFlc:d9oH[V?K>L]bjf"b)3iAZREt<8
%]8XUnRYKO5^N1m/Gdb,u\#m>@n`_)/*ZW\\$[MV4?[f<Z)(Y+J8HZOrQ,6SYG-YS"rse4a1jeq.Kgs<OqV6CarR*:LZaIfBB'/mJ
%m2bEN`H'<kCMTdBOr*Pg3Zg,4Q&GP/g;ePCZ+PFW<Tf!^jo.%:pbjdi9&+aap6i,3@>#F=O3PQ(q;\r_mm$!]XG`:dlas"=@(UcR
%_rD7bpIf@GK="j4?bg+H%@YV&NU5b)X'40.AkO:Is8MLr1!CEc>=,?Z)/$XbV8lq=qE*$M;\\GlY&b'YH:K1hgs=104.Q`Bn'Z&7
%bBgQ,RA8*SF8Dl[I,<Y'Q:jT/cYl&jm,#pkpV#&";=E0&5GcAudf<;'CmW`@W@83.e48scT'kb[c=,g^M4K'@SMBTh]!I*bSR^Eb
%h+dh?`-B#@*ZNthg/GGcP^==aT(Loj@JW\)N.5G:0BVImqGSC$nlPVYZ$P4J+c!;'l7K?I>&`iYr#n:QhqGpo)q5`)bel+8Jlup_
%ZJUc_"pZ.7@l$CM8as_\2*l<o#cE42$t04T&>b7r7*@T8[Wd\7Fm?(n%.u@!,p2C1;<cE"^E\5qi,s?[*?,P5:]&qCp4T)JAE/(9
%<PX84@VIO?`mF@O#Ro!Z`;KVQA.6_95E'mpq:4r(#U*4XEo\t&ec1hZ$\mMu5[lO<RO?R^73PC?JhGTPK7>B(^l;`lG`7msCqL_6
%eX)UnIaJ63kYZdl<oh[9ni?9N:Gk&eO5fKPOpu[2=>OfM;I[i'?lr/LdE)PZ/(#CVPoBBu*t!+>ap+a:8RH_A4Ye5qZ"2Df'Ft7&
%U-t7fpf`4E]fNbQ$Oq*H(eHmfOqsl'M7?rQ?;29eZik/9X%pP&:q5l.55eAXJ:nL1pojFE2W;QtnXC>S_WH:8)#Smk&+:Sqdt$9G
%I(/Tjn(h1+f#'=^CIjo[>6(^J^n/YTDP#X4I@dKg3o/R@?%0Jbp9p'B@<W7%]/sG*AGLo6*V@ne4WZpIJ%kd;WNlg@FrpS;ht.-N
%1#quiS,5i6GL8L"T7?CjCGnjap=.8*2Y-a78"\LJB\_/slYLO-ATBBR?5g6#NRc@/k4$hiIm*Q,Np<+b<b^[j;-'dfeW=RgZ=i?G
%n);j(^<&eJeFT9uo0uqsJ%PS$mk/EZJH(K:YcJS.'kOh5FR[k5f2eB%p(%,J+C]"LJLtfTrtX]CL?Cl-e1Wj90g$90*"2sm'o>kL
%omhhql*Bco\@$GUR@]2cG;$AWo_*Qr/DNFiqHY\Cj$E[Qmr:Mf49$KTm_];@cEaW35<R0(])/a*VD;lq-\>?,=,!IMM0P0.msK,4
%IEnPHJ]uSAOD-guhUH_01]+@_JCqap<AN:KA=Uu>=SbFALVZ%(cITr0#P&=3R(do$MQ4.XhnHbh_)cqNJ`2Y&r*&?&\,JFPEd?Je
%3S<fg(a!AM^/d/HRA8Ku1;&)8Q'DiOmdn]T\"n1[Nur\`Y=iY'E.G^<]Uc\0qplZnI!Y(9^rJ8CS45)l^"cfr8*-CQ"UelNrJ",$
%9E+]es$7e!``foZ1N9@c%sZMH>M.U)4!!tQ'L$qmGe:31ki)*nG@fT1o!NN$d0J8Pm68k13nT,Aj'DV[7^`!YDW]KmUGqD"q[ZH9
%R$u:EH\QUp4$,->>NsjbBA[J8%IGgpU!^&jBG`(Xbedu(IIZ#pgH0[Q,HMh[f0?#4Qnp3I[hJ%S^Qj55[<bu.Xh=)W)OQ9jT/(Hc
%`G4o#f_V&>AsBd5[BeKblhRm(_Zq\-W3-eQJ6'f%fWG\lL!p:9/s'+TF5uUcA+Sd3o"DGhjeF<lL@P_/HUq5!KK>^,k+B+)Ib'Z?
%.Q=iFSuAO&8fm1JhD44;F-!atMV1[-a_!b43I)Kt0Yq</hI<gSX*1Lp_@N[h%ZTXU?ZSS?`eXhPqL*Jo2KO?cRpaaYW)8a9k2&Fc
%T^^mq5r\Dp*@n2$I/Mu83FAr4'jh*1rW7<CWKGLi]<*uhe`Nt]Bb`<udC,7Zp6taOSu5`am,1aLQ9Jj+ku!(L&K!usq=:rjEU38G
%h%,&8q5qoFfhY8W(3U9\+6[*Pk:SGUmbf..^30/5I<EoB+oV@j>^X5=n"-9Tjdb\FNX#6!e^W8+\%Jh=qe)g7Z)j_gWBAf_/K91P
%X<mZL<8i\7liTDbH$aVml0E]lSU0rrepd3KSU'nti&l(*]Sqlkp>,+s:A0j9gL11RD(q"mj``oT5"#e>OIC^&hDgBZh`\\tkGW?G
%qqer4"^%(m\T_*Fc^,\(Oic)(!b>W-hn907OFOB6mMoM#N,$2;HJ$nSIOH])r=8"kFdi99q;tG])[sCfdsQU;FE\+J.+%[-H?J0!
%rEI:eL[>Q,8$M)Q>^,X0V6X.8s(W'\]p287s6eRX.,kHbful(nqT%`R^F-F8o?_bc>2LE:ZL3-eE(P&Y[?p(BeZG,!HNn65AsjmU
%n8Z(sI<ZjgI0l._Lb.BM^tuA@U!0"(ipCpWAa[gl+T]u'+738S^ngsU#W'0i2.SW1Y)G2Vp]S?]7HZ$1o8n]\qEg"YKs/f\o!Mc8
%D]nA&r,hg:^2ikVRB-=0`s2@Jp+q[U43]0>U:ESCgM`B]Ej,%iAbO`a?>QcW>@FjCj0l5"fj9q,eBj[&k@==!^*5d+g3W41mgZO$
%IVI\(#$^$7]1hg*ruj.7:h0VXMZ3OcO$960F=/=`:EBm"8kS/UB'VG:a@!6\:\0iQ*SdHUf$O1U]3WKh5+WR2S*,RQmQ>)C)>WJO
%'AXr*nB9s`j.0Xf,Mrs("+'e:?^kgYhYF&'C7eBP1L_3jq&[t3JLhgH`2-JeItPFNCtJCGb>4YqB=QiHID>b6Qn8uYk#M^Sr3&@T
%^>.Ij;`X9"3e&?Fp[[Rdo'5Akb:f2*b8pS)/H.+UEr+uH=LVWnjPje;YTF?K_>W)_$h)PWTA?(Rk/an-?N/WU:+*es<nQ,NE9HY)
%ON;WQZh=8Ep8H?Nq?sa<bP,O4Xg9<MHIcB+iJo#A/&uMr#E;>=ZkR^F+$X]$/_kZWftREaS$+['km4hbY`GA?^r)kTKj<`=fj@4_
%ItJMhKAg$GH55k\rDGM_I<gt4IWF$B]0co?\LkL?h[0-b0.cLT:XB.@)n!Z>]XRD;*JrWnha\*8M9L`J%pZ`[IKIO;p6WuebF7@K
%5J>k-Gga/D?Bi0H"M`*?6B!`^/+:H@f@F!B?@D>N<<e?uL0>1hT*kKUEg-@#YhRe[faSdE2>nYL?hZA%d9Zk9iS?esRAh`s)$[VN
%_B%7K&f=Wgq:a]2$%)".]j%b-m""`o\J_jVK"/MAL#m^;a;Fhhi>%1"B4J"7Y&3>\T=)E0NE;Q^kQrP0g[@%9FSt?l*6XD8^OI;6
%&8X]UZScCe%XAuh5ZH[`K_)F'WoJ&8[Be0iBFW!3p7=E$ZF*m%o8oRdP-iS:I^XB2CtoQUpUX"k*b9"S&'m(Mj'e"23Ge,,o.0]F
%bJ"""faH.JfPbGjHX!>]`(0<=DRBjVmbtK\$fpW[_d.;\f.6N@pV=E@,5NWaKN55]qKj_e'99t(0Jq?V[[-[V0*;_LX\NX*A.R8O
%M`WV7+WWEs$knSKZFNg_49uni_n@(M?\#YP^ZJj?aj7?1/3iC3Q[M;ZWY;@X]_(L*47loe5-!IGgX*C3hl:X!HR(jbMV=s!p3\CN
%DKi[:OM4n#HG95&a'R@Zle^@/3`(8"+?]:[YB;TR8OG]oH%W-'QZ:>TkFioJeF399`FiQ]2N@B%cYF%Aio\/VUX0sr))Fho7QJ1<
%Gm).^;5(4>%`3\E4"a;F@mQ\@E<<h,4cl?N%S"U\?KPp4'B\HT@:N[^P0pC0n#t3!]:/^,9gpc^A?\9U]W?6Y/rMZl5JD-.Vn$HN
%M\"pacis;^F5rP].KADH`a?QmoC-O/V\P*`[Pl`%^'9MFH*qJXQ*2K1qX6(G)m6P'LGes>5U@6(DK[)6r@@p-\I$]6455Y@Y'q#!
%_0bA?[+E*th9kWFj8?G>rn:K=rEU.6^-:<R2sK;Q_FC5pKeh"TJXZ/[PLaFgm;j9&>CO6Lr0=0j"Mj).c8d@52pbNBh>+G3O,0s(
%bGF5V?@7!ZXf\nhmC2QA2ILF6fm`ip20o#^XB52pZ$1a:*;@R#>&C>\>;R5V#rh(#V.rILO&f%ap0TIa)JA6(5gKm]q2*^;<t+2-
%%.sE$m+P5ui8M;[T]0;NqG4MpSRdaf43)dCaihp^]0LcBA0B*QSGmm;HWJ>RA;lM7X\^.*pm&P-EL_M\I8np&H1rMPEE@=f^O&tV
%L/r/!-]R0#5=+#qgB&<E>KZ<IG_YCakO4KGHiU'GJ&,IMI98.o1r#]Aqe5<=h85Io<jt9+]m(!tBD#Ouqp49preE.1g$BLR*ntu!
%6$L#Q<>#i/m,!@"<N!+nC7-(8i@ssUYQa_-pHbhJ]\cn@kFQ=g'6?#V!nC'skF(@XkFq\IUA4@8GgK+AI;Q4)!J=]"iq^jqg"PQJ
%r5\*7gECPE3[4;?p7V8l50R*=Mp:g-I]&Jn));:&rp&t,Kr#Sg(['r=rCSlaJq43=#]rHLI8kRZm!-_AX3#pdhkMprXA"ao5FD"J
%;YYr.C""I@`b3l2MP%YbA/\6^*>C[jIH7mdrm!aC<AF=UqOO7->2S"_Fstqu^-2X6]RmR46/]-,G]$o>)"#'C0Z)`+358S-r@q@(
%OtBIr\+Z+6XM3d2=A-]*XjWDGd+.H/XZQ+HeqZ?Xquf/s_!N#Zo[BEf`ttR)@ekLLqIt8.\TN1tQEJYsq`2PDo+2;91f_0Hql\m1
%#/5XLRR7qgf(ICFO72)+P;*a?^S/t,dj611j_UeY[#P*/A;Y@c73@ahfa-CsqsT$#W&<-5h/,u7@&Db>qDQXbSU>0(V-9KXCW-V?
%'UlcH$D=ZFJq7Zi2q8D(HlO[Z39c-JL<+sFr2MZ'4oF\k,VRX;^Jg^^%IT\[%<$m:5PP\+AkCUJDg/+5.l_rYgU.LTidWQ#Ybh>l
%H0d2H92g7lXoI([qLAP*J!mDLg^O99d0BlZ7fpT3=2rL;AjXiD5=;[u/PXi9nE]#@'UD;Kh$haH`"'V&cJaQ;\/+W=R[Ol(D/NS+
%i5>_+3,*)o<bg0.bd8loJWpJY9q+HOD$g-?.A4p[;aV#hKcnFA\-=\(#p`eX6%nX$ErMPgmS@lH5uJ:%1FEkN:o&:E_=c!3_bq*1
%jbQK8k7i(.2GX8KT8&rSrOJ<3;C!2r5L"p\,go<[?]UENIRR;WkX)n2T7,&O?8TjCWWJG-%otUd(X,mA>'c9V$g`@cD1fc++!VVU
%FP/NC!Foh]8E?\!8J;R?!Ae,(>uO$teh!7IJ@^\\"a+*I49Q9`2fqbmJL"\m+@hf^Q3.P*Jkf<B97j\'1mAAL6#?Y7%,p5c%Do\+
%WDOB,96j:;rsc#S'_2$B,@7s)hNf>ts0o/pCD6u-cSb;g_1aNNQ9X\i[!bfUKW,-.fp:qk%7@mJEHo/4fkE-;,?.t//iBqckZqq2
%X3j6>@h:(ig3.>bLGDd1?/)a_qq:K$r7aeO4O';J1>Od.%9Ld]:CC9&#_fsOR<j_\[,orCDJL)l%lKa!'GM=kj[4h"r?Kf#b=I&o
%3/o/&#jk11)c+ZMC!K!NWCI<EY"$\or3jK).7GsB-32`G/+Z'#Fd<uUGSJYml=Jn(91i*$"TV"@^`[rsh/E9Hs#iGN*%ko9!#pkr
%;#![nm;h"o*\mdWgbLb.0po^OET)s'9d`au>]"ig1glLmF<#"/HlUau?plFND'eBXj7kOW+AVoFEW*/<`@[NFe+%)$11:9_=]J&r
%VTLdP@,$tG63EbkCugcTdjh._*Xm*!iefld#Y).u:X@BQ^7lI[.G0ThWM%\J9j]*4(.g.2W0!;hKs\U)Bl1dSc;G"f*"Co)U1XbJ
%B`98hM0)FUB*5QP"\p8C8!#TgCDImTf<PUH.Pi**NNF%5F\$L?.$p&&%Wp1HAeD]s7VnX-j,?c;Cr0^t^G65@+sF3223^IS8ZulY
%FB?9W(ARi#^d*WOO(lAd^bqh:'cPQbab%*FoRan*X$Egoj;'f3g>s'8;Hi;T;FBZno"AF>fubBY121dhPt]\FqF:\c[4de]>`7H(
%X@e<ib^b?#J7I;l!d1s=9&$-qSR^E+`")JEg_cD%?,IkC`"66C^eQjE/VHA(.=efSBIJQW(=H_k6(&+q"Bm;kBm0\O$TO2GD:.tW
%a?dLq;hW$*aa6@Q$ebnQ_Vf_Of7pCD6'f]]!_I8X`JHD2;J\e3co2e3!bN"^J4'K1A/9=n-BtlO-@+<7s,>e<;&>N?QP#`d6\>]Y
%,709I7Zc-B(.?::h_fX$j</$`&7jBlCW*GOLJT_9,o+M`L0Af2#&RP'/uX2bX(?oqKWWUei"+P_5o][*/bQ]u\IW/8)V8Fl.<'rD
%JYPgV.;h(BkVZkEX,.tdUfoH'$^big_%^ZYMB.hIC&8;qCj]5L/!K*_if:5"L#45>LJUJ8aY_'Q=!1=F"E>GT6S&Ou'#*Y*5.$!3
%2jbMN,aY@(RLTI'(1?.]]X`=gdt-2u77s4VQRMH>DRq/^`Q:@t5_@sM"E"U)9034JCW$`]YG4L[A0Y81q%A2na7UW]ck2F!;'ZG^
%,Ch=EFfo0u7pCSD"=R2"LDb,03aL10=s>Lr.,J.ML6B=dAM9`V3<mbbN,M>?dSis($AshfX\idDI;(CC>m#03d$,G^UB67J)6/5n
%C3-_ah6(N<*S"iF]`7iVdCKjS/.AL[Lf7jJdA:EQ71PA!e^/=:>6T%aV1p!-;6c4V7e$p,L=R_qV\M;](sH!u-k-<DR]`c\#W@Rg
%L:G\G%imKoD:Qp4aq[1-UO-M!G('?o<oAGbUgn$IfB@3^E[l[p@-PapSbO+H?m3pe;`^-l*Y<Za-\@@[:p+mg+KJa("Hg+P3\[fa
%4obWh:sfSG`XQ->"V]D40FU+#`'[25!.?P&K5_'lGAZ,!&BN8V@C.^nQP^oSgN98b+@DUI)sf8gqpVU]0B&B,!k1^N=Nm"ER5nY%
%BTU!QaD]P2>.ElK;)S_D*+,^[JE:ClW"/"i7ZRi8L&kfbS(4<d5V&&L743rfB-@mh$\6#2e9dl>*=]=(mLP<k\GeYs5kAs&6\8;^
%W1f:u3Oi'\abbA'dln,7R5dDWKoAE>-H9.)9#+#.B#$P36(ef,X]kf?+j))_#,\\`9GAM_%m\A$;M-q]'**$-Bb1]Ieq?H;QKoS$
%'2b&8I/sdC'1YT`1nb-SlUSq_8#>[#p=iFg;5t3Y=6V+-A\qUN^&ge>DZMG//dPu*geqB6RA6hjKJGp\2J0Qh,Nq@oDZh:&Of42F
%T3re(H9q>/ZAja`eDfC?/N;H>-]3O39jMihe7,^WA\!?f6H'X)m_<n^9d]kkG?jE4.Q.Qcf$trLj'P0q@7NKu!P`I/T`thj8\)]>
%/dR`ren,aV^tr=m+^o191b#<MY8DkSg=u_RXUh4)&Ru@Rf\fq2DuI*iSVA7kGK1_rq7]4P2SW3qR"Gu3_ToN-QQMoDicY]sQmQ^I
%?id5KTXPmJM$d(E('[EOP;OX4XYAn!+KO-Cn^au[D6()ZY`!P@>RoN'8Oa`SJTq5udnifFJd*I>;egalA?(/jE`4=eN:n4RW5/Kn
%;Bkh=Kn.!q5<pJ'Z5U6kN=FO>nnSZ@947`u3#I;p7*bikos'm:O_#D@(0TR:1.0"^-/,u<RW*+)L)`Ql*-tl5"lklT$$^QJ.fcAC
%.j4e&htB@I:n?MXAJQ_1BEXa7%ja#0T[lqr4jbgA7QdF&q2+k@]S.(kr3@2BqhtXt,f8%<R]/D$SWm^]66caITr:?6"$Tkj1V=9$
%s$3S;:,^`\(j6l5&WA#D5c#7LmmOtuXTd?q0ZOS1:k:"cKPR%R`j76W"tkuJrM\s/$MC[f@a*:Ee]>QdZV3A)r?a!ABoO9QG=4$:
%J)<E.MFFGjp]*Dh,Ci;D"Rns`,5]E],H$ddp)::4Q84G3,K70(op9:Ejj9?i2$cr+$&iC1WD<UZ>W;#=f_ur\.!7>Q/:Do#Q6kqe
%cLA.+$U?Q2&cL#2ZFoTBX9fdTj4;"0N%h8CBps8p7nSc95)8OZ"Oi,^%7+c#QqYIBktOE83<oPl%&T`,JRLV?ETPUl8>&*G+MWmi
%FmPDeN1;X\Og*/`dDfJ!$>lV[.<U?^7dc?U-XBOhg>DsFQ54aM0Z+l%7M),i$H#-\`6f-@!C3$2j4O@3?m6/HK1I,*0Eron<>^r%
%k7SuS<!P^fj^!#I!)se[YQ.LNVcb9T-JDq!7^b%G!5&EV*7Np4D&]T>"[W;(a'c.GqCHULli</V)"'g(Cs83^g;"gAN^/.uUs8'_
%Ge:+fMBU@Z1qE1A($@O\M.!3KUdI:ZiuI=ZZH16j:_SoK!2;eEpjlc1.#=uf6Ne8fDJeA6MQ%C5R.E;d^g]G;!5]C;E6L$NXSXq]
%Y`!O!;Kk9Ai$aF-c%)(`[()e3!a(#5Xo*F#+X*gNb4:cl)CupU*XJ#ZW[LB?JO54LaZpUEM?f*`3R`%%O@VMd%N2EoEl8e3qJ+_i
%;`0dL*_&hb"O>N,gi_.&Ek%Q7QQd-=eG`[c^gu;Ofa1&E%.]ZKLG2r1GJP1VQ*1P=JKKaY>kusLCq(oOLeaX/rL.ud;GulE;H"bn
%kX3&BM(ttgmU5f-LS]W#"<jr5<>38<Y2Tn49)=JMgbPNa"l_isc0/ODNF(.Q,7SEcSc\UtPLD)1&(0u,8F/`'OE"+W2VBg^corPq
%(GZ`7<QgEt5tpB.\YCE9QmuUk689*fC_Ml`C)Z@M7c9sY3_KZa%hLZoD(H0@)TP\f'"i-K2?F.!=nOCN&dSLM+_qNt#5jglbG69^
%.>,.[a.a$4KQ>^N1dN*MT`nHs=2toWc<MO5OEeYYfmp=2CC<!0=]Dm;.j%(R\PEhP'LNp6jX`f5VCSmqO=DG?5lj>DiA4D7'Ud"7
%(AM??B%s^c_$Dsl8XP,RUdJJnXMR42%#RkK>L4,1(b0/i%)?es#X2N`P,&B!i3PuXKHl^AcJZGO8-sZQf%7(B^+e]ROBLo?[-KEB
%(cYW##4lmA>cAMF=CWh=:"Z-=Fg`7_?lM/;%'4gl5R72b6W*q3VPC4QZA;dNS&iGK/b89L9KoD7V/d:A>%GCQJjR6=IZAHX5*!89
%5Iej)_&0)H:4tT\)0K2:WO.85DI^ZP*9!i`SO:$'JZHee+5dW*&.^[-c>Wu]GF00DJRZ`qB1G^a*<q62]$T`0eQ:QOe3m#+]SN,R
%Dt];h68F;)s(Ei!bdPWej[]MKNhs*9mAN3+_mn4:UJ4D%N4!c%->Y.d5Aq?3:o!`G)?njaHs26G9q=5hAQiZ#\erMogkeYqk@._]
%7r#P+gd.&WT@:rY`Y9KsCbClo(DW[>R"oHN6#CHYUO[lXjF0_Y:q&1>F[*,IO0Y`KQD*Np;HBLl"iY^oZS4o5]60d#=Z#a1"m_nE
%!H8`6fK'?_%*:r3'\3*Q80.Wc6fi=*\hg/Q(0l`p1RD#)aDK:^d(oep2X!#sI>nKO:)(<1&`/L$",&<_UCo\Lh^k$7]9c!eg1[T.
%Xh^]srO<=1iTmJls,d4s+O9"Y+d,n650>H',bt:+/.>3^&BQj?+5raTEeJWBNoFAUpClM=g;DNPV0,8E(Sm&]JP*MVFTW,R1i+1(
%"4KobY_eC7RTrKs:nRo-3M\2Oq9@V62s>FX%jE[ZnLk(?)hRNo=upE6.2[["gWF@LBibY,U4KU^;Gr@I4;8j<f0SjWC)&go<cOAI
%''7?#oK#Z96,?@&IAglW0j]*@;.RTZVB=lp5j]sM9-_Rs`%[A7#lf1Aj4cfCFhPdbpo`R#S<)#'c8;('`IA==RK9NV7cltPIs)Uq
%Si4GYgGHf<7_a20)rYoMa'H\W'uuh`FXVdq71`k#,=i$9Egp``gH&U#?p[i<+%/O"9kghOi`o@(;/j+!91Kr(N_d5oK)<AT"64V3
%Oqo(b!Q\h'O;BGH.Wr:jHgl+kNME80)D'L&)o)Fe6#!J7;bnFW^EMmPCAiZ_$_mk!0Vj3@@,Y67)2FU)Xq"'#W="'7A>ESiY5S%k
%%#W!5qIkML;N-I[NR_#g&uN7%(^M]nUV2E-2[k<X<7/Y&KMn:5<k8]PoW?`\+,/i#hZn+58e`Nln*"9pEbB58fVYe>!&+W^FtF_`
%`AifgYcVfH8PEGJ"!p(ZD]J6/kNSYn&WT%]FL]W-0PhF[hin,d.9>00#"a+\/er@1*@bd*C?Vd1[+AF-!_hQAJ[)!q.9aOV;NaXn
%&FNps`sOq,je<AF2@;-,^B@ktJEQS+-mg:O3`FOoBI&_<AE/QRL7j.9@b4#.p8bS-1id]<(hRc&RI*@Io[3;g_TXq&kTk,:Wt7l/
%C?#I,WO0]Z^Nr/g"o7Yo:Mm9'9D>-CEb70\$oFb@`C17dAJ9Z)VQ->Va_8G85`$r,UbaRO)31>OVLb,Hj_C+_eXo8[&,dcdoJ$UT
%K2^K-Oc4C_LNE"`Ooj4#K8G,9Tm`kL?kTeT&uA$\d`,KXGeQ<H[:$iJ)+11tl2dSG_^=a[PO(j?i_oi"0Mat_-D;g&%"18Er-(=-
%[7uSu-iup9o`p0?eNF_9#ob-X%2_@Xee^Ak$%7'd=+E"Z'6+Ru!HK"lgl:ZEZ7d1mAcKa(`Z/oKWLPbDAP=Hcd:G"96+Ohf^gf=F
%C;Kgba`PlI_\SJkJ19i>c;,DH2eIU"QO*_=OpW5:U\(hre1FG;mf567-AEkgO1<heeOa<d\AI`$PfR7,l69RFo>`Rm[H,(Q(!sg=
%)Vq)YVf`:,Y+lIT6,3:>#HqZtU0*:@4Q+l"3,QDbrbkL&oWD\-LFpt`k*$rJ1/BkU->G'1-(1/%d)+9I-(T;@]b]/a*tm7(D!GLB
%k@oge/#^Ee8s(8;^&GNOkqcV1f^#9O1kM5ATe:Kg<;6K-bWc`W?`83jP<b':b7S8(lL]H0`DRu@^84"K<*^Y3KU*t,()hUp;J\$k
%MDCu5]^b?gK59`"[3EgaAir&L[VYN&n,SQVTL6j:V7%.F)F5F4Q:=h_?;Ui_d6-tK)Au.G1k_/a5cPZ^Mr?$fSXlfS<WI0F&;g[+
%+siNjnW3#G17;Pf$oVU.Y#LNi]WLEJOCM*ThF3:/JeNKr+[jH*>R%jFrMD4(3%%>JjFWYS\'5UT\)DQ:aQK[8l?3U'"9JlZVM652
%<2^51-$in#=-ZL<5Q+HuG25_LdE6uW2`o_'[X?Xf^.\jG+[9BZR6Dp`kUBGKPiFF]`7<B'>HJdBDJeQaKrDkIF9d=$c9>/\F`.n:
%0#uJ/i9am)3/6bob=JYfqd:(>gsX><i[N[N3(kF3WmFR]\J,SdPC9+PM4u)>0N>%m?24O8G#Z$8-7H)9cM\Z>L)saP8Gl2OY\a@b
%:$1%eAEpfGTp"Z`R4'(5KY_K8>R0=abkjeil/2.inHpj7^r=j[fpGj*o3W4uBgpGq3/24KRtmC,$@<P?CqlnO$![UZ6)C9c7/csT
%%K1`6PbQf,qft)a,*DkWS'+K*ZFMS:!0+059e>jDWM7*4[@#;U/0suQ9k#O^%0aq6V%@0A6/<BbXU*uk]#p.F/+mg:6qESb&U9I5
%((*@<h]qp2JmOd1p]qb?R>Sd7[$^"ks51)U7kh,R46EATkAD^]o7-)3^/eqZY$^!![!!Q$b[Gg`%,2)aJI0*d!`oC8eUa]XPL5)K
%>%G*^6H$W4bj[eo=2:L]7jH+*@1O-FEmu*g)imfph&Cl*=H9L!ea9!%"m^9`Q7bA</TnL6@jO+IMaK3kM03WM$Hfo^=N'\aLn61@
%b>D(D08n=(]DWrf1En+;EUkr@_@a/MAT'[cf1!f;K[_6CBidS@@JamFGi!1DRC_7IKf/6BelltH![=Qq''Ip"*tIZ&Jh)T;U?W^a
%0XM;7-1\f\%ueU9/S(`pFTkJYld?EeEr8h)=S720P506JK\cc9n>9K^Qjq]X^63J):p1(]$kS4d>oCt.BqHD3YnW&)P5'j,1e!%!
%Bn@>FZMgZ'TP65^bnquo-4hJn=a`bKe+'WV"UdgH/I=P^%$[_CD10'J(JopQP%dd%>["*4%&6td'/VJ-Y;-<e$8s6cY<^0Z?nIbW
%Tlb-!8leTIZJ+3Nr&U9kn=i0Q>=au$*._TVNtO81QU>-oQL'\?M9n"F':^#NF[Y\Y&Nf7F3,=cF>C@=*_0TS5^1CQ9Yqd;KD%"rK
%*\UL3,@tK^$%]6Y)11H93aBk:/R:h@0,&d8?Pecb'ZfHtBirURKB]U;)(o0@d#P/tC'tQq8$/99"?eQY;6Qp+f(EA.`l):UqR*1'
%?4Eh`W54a.i+[(\/7UOQl1trB=@QrU.d$lV<2&'"'85JRK$%i2!3_:jkZ)N3KD5!@5qJM"ZZo0Fli5tl]V@!9j./h^\hNs:1kZ_p
%7h?D$RJC%]>gq-i>%r+>+"Mm$qOo)l661.,*XW9BJY^RKB36pJ?H%iVVTpXrEHGk&?+#jd+[CXYN/jm_2_;U:W!"(jC2lk)UOuL1
%9nF*i/;JBKXNZ=)SWPh0C1t2G*/FYk+;LX5aoU$dOI#4!6c%Ppm#J.#"dkI2[5"XsRAuQEMr+#-:\%;O&U6W0ZY')WH!S)1LiY(G
%oe%^AX/?Eg_"N\$4.(qa+P8@>53=P(=B'rQ6XY,tl;\LaV!a?0G#;gH_pl@;GeBp=j8)ueD5rMl&`U8]iA4"tF:/?Q(]'q.2Oc.\
%HM,0f[tnl+=((KC'_NltBT_3V?N2N;-JhBllI]_e)CGZme>3C?*?5X6KV&S8@Qp<Y3(E`]V9=T0BM`,Pd/pXS0cMIh&5o,I1(+2=
%,Y+*+M)#?+hF,cN]!SL@K8ns00O;A)R%R'Gj<Jl>;_l8Uf$DS>l&3o`\lDjen+Ug>/$T,_W7!LW-O2:J;rp4r[#fg>RL3T*SJ-'?
%eT%L=>.Op9%KB'M/ZVcsWUcsQ**]>_@rf,+'asCW.DaZCA^f^E6J]&gPU848#t-BY(;?$5]!6iB>q$Vp_D.]Fe#s'OFj2,O]l(Y(
%4lsME.GIbbLCTWR:i87*GkKil97m$^2cdA\/7)kGJR=/4q)t[W7ee8f)1i@j)^hTRbB^<(f[RrNNgY&?!tK5V#eKu0QF<p=.n`rD
%7>g:e%QT80AWI9mCigu7V^UO!eJ<;&dgbk',K?j$W61QMn3Bo%"#,nKd5XVf4$R>HJ(;lA$eq%%C,;&KfO7^c%D%>ZpmK*o!74ue
%UgjL"K1@>S&DrQcW^<p&%Wqc3Gqs2,enrWld9^CV`E<"t\`U,tlY^2<#O\Kt?BTc%TNSXNPj7gQkW5]WgcQk<rqQ/k\AE/S-$YjY
%Prd">(C-FEjbt?5*W_9(gQMoI%?ieU]!4Z'9'5MJlQ%!i8@gBH@!7:$]?ec9*(RW345mnkLW%+ANsL.E`aGf;+@<JqWQIK&C_I2K
%:]^eeYXF_8\RQ-$(NAm(&\*#ccrKb(nQq3+q]chE@CdK"]<V^JV18B^7"6'2V0d!<:;o_ee`Q'I9<G`Aq@Y^,">2R37(UmPR,:3k
%,H2Fdef)Q6BbF@\eTDHtTdC=N#K?=^:o.p=-)dT]Pt2R:>g+?GeZ34M.nmb'EE-!U$Q\?!U=Q'uop"UArG<3d5r5Z99tC&0!!F0;
%Abb"o7r]&*l;dJc<@o-nA\+HJKb"`*g.^BA@/0[@"Q@"n3`DIS9I_j?*!!\iA0G?PQ^%=N!DG)Z$*JuW'#?:*V7m.!6=B"m:>i#N
%VbB_Pf;3;^kW"0]X`&b]9GXB^"kKag$>Pt5dYd]ZKq:_k@>rgVjDd]!EeUOP&g;S5rL4V<mR7PHW`06JVnV&A<NkogKPa>'E4JFJ
%[0hIi-,c0nU`D+A8l\3:@ECrnB[r;]@=SX(FNK$PW@(D-0B1#P3&O*jd8Z=P%'K&sE;[Mj"G+A@UQT(]%-I>a%=Q8$4FVWf>5?rQ
%Qb#*8+$$!gE@CghU%K6lDUf*0ipb#<J[UTQ/gSh1,`lO$qGAS`"3HjhA*]:H=LoG;TNZ3?3%^R+$WHfMPSmBrI4!N2ik"n!8<unI
%-5\]?RWOja71]]P`smY+>#GLbCZ;!8p=,K;k27OL8*Dfm8F#7soWZ5;0's/R<mSYkEX%teFEWDjTY`5$h_D4*3%3Gf;K2br-?J;s
%nC["F!tt5#eOM1tb5FFakr=+W8:@WEgZf[_&cLSUDYtI&fL@kt+3Q64&leQAX4j&sQ,52>$!i20E`@aDLecuT)8BED-3B\5(pn.]
%4/*oWY$l,3&^,e]m0:I8EX[Z.,Ri:0<<s?MIP=qq#7R\h<`_DVF;PbO10idZ`cc3))MJL2Gd%Eihc_Ll]b];i+-HmKYBB,gb_@rs
%%LC*_UonP7gLhYP&QFd"?An//%R%60MH#i_@=mX]5hcjZ'XSP;Wi>%-6f+GYWe["BU&gBM7B=g:?b2=-;r!dZqf*?YFfCP(C-1-f
%XQ[YW<YHD1Si^@](p$/)*IBLU33>W4'/_<1oZjY+'8f&P4r/.GB_[f\@uhf(:F*;@:ne.5<25DQ]QbXJ^gLbKGtYT'LZ:)mQ<9`S
%7t4rI?tt7R&d9F9gGr2>dDQQ?0ioq6(UJF)`C`1IfMsn6da;.PD-N8o)"%$XE.*CRp$iI1JsmB#`Zlub)WG[BL4A=5k1gt5)7ra(
%RB#3J5+-2d6=u7[X=\$f2OS03AT/E^,)BTpj(aa9+_h_=h2'n=ok.r;C;plTF_Sk^@AE_JGdSBj6DN)u\=H?\o,1:^QrU&^?]aE=
%KHTU]l'j_YTc,SVC'Vg:**moC\Pd]-F;Cq:AQUkp5q9XcLQF1K_QLcO5Wagp4)oCBJ5L6,:@2^6'Mg<$>0;Mt,79adZ"8UR@\YPR
%CIUplS0X4o(2pQ)6./Du.7J1"jc]L;0R'n1k:fEFZ!>Nu]EF)%=JO(kKo8:9&(=&G:1I/-<=rP[H&d9%;\^ZL[6t!bIFJXq6+f:M
%o>a[-bc,jMGb.ma[$o^B`#tPT$*\B*eF=E3dQC2shD99S88oVD[2XImD+=gBRAh"maOm7[o&hOrOZ-hY*=+RrpOsghe-R<dS?t+#
%n\_69Oo>,\l7WBPD2+Nf^G)s"[?t;K?!X=_9XNVA-mn&T4"9,0/A0\O%RYBROo*N`?1>>&Zl#oG]W[+\Wk&P[R[0rAW,eRF]C@'e
%o<6'BR/3bT>U;eJ<9@=N8,Aci,[@+8i*q6Em?sHR`q?oSWW4/J%<P;.n,4T.67qtp2\:+8af_<j$VH1@ch'BM+H\pEMWe'641(Nn
%YgX\^`Net)Obf#2ggB32D`N\_.2)%69cRE2li!Tkf/#NG9f3YiG?$(5'P,Fadni.peA<YggR!Y6[spqX8$T$h_VB9e^(sJCa`Nof
%*IYWP1b$_+k<"]1^8B@Di3Bec2f[IU\_j032cnoH=9:0X^FZn_D[=6Y,i8Mi2):7?BF(T+MORen[k&N:<:Nu/^Oa[E<T5<KgXVYB
%?2Oo%%_8#XaboL89@N?k1J;(-(Pi8M9sEQi\YDDW-q8:!VeBV>\q1EcV%IYeY-1u$r,AD4WSJY%B&WS/^Od!I""=!6WmY@D2I\\(
%)bRe9qDtZdO=gCu*7kJQ"Vb6RP;B;.j0QX"T.rUSePb0ZeYbh*Fk_$rLhVs)T,[8;bl*IXVFAA<;.F>PI:P9g2pmh1^%uPrn+][T
%#e$FFek6iG:Re=6/i`WoQjGRJbs[<J5kLeTHl!:"L81'F\j'!0VH!d`;N'g%K2`sY0L&n%8lr2o+n4P)[kRKc)6Ejg<t>k<5@R4m
%8p<gmoC]/=/#D]4NZ&<<`^KmXFU&>QNtJjTY0CBPmM0WRVWmOUpi2s(-(g["a_(;^/o2$7E38$[SMD[2V^i,^4D_/267qke9Qb'j
%dDsH>DiS;"8>s_*=;0(Yf3/JqqBrh>UB:sM<DS#H(WLH3Q.PF@<;$[b/4qf#5tu2G05;343s_ZVPuME"'P(Hq@8tam5_,L9<3F3A
%rhV#3+0H9*.E^fTf<3[Q]5j$-gms]"[qbb"J#QF.55js6_CN'MjbcIbkK=(XjTo;Z3O<Ok#M5eP5,AddWsupA%PdK(VA'lsLY7un
%$`;VA10]McQuJichlaQ3J1P,N\%tpCF,6A6\uB,"Sm/sA5QCuCe`9W4=O!9$.Zi"a1".9DXu(kOiWo?#4l6ag9CTGuR(APn_8Q\L
%q]/R>7E^DH#d#s9WG`aOhdXLZ)fITh5["4]8hPLiV'6-/VU>aJLSc>pUNpU[IsK/jS7?<&/d^fP&l*idMDcenk6"7\(8HouiCD6K
%KbQFk;md6uqJ)ME.9B2XW7K]s@^O9RJ)QdLcR@mDH,]pI+Tt):Cb+(t!-\Zu=IhnTV?Tk"8+<aD#Xo@'4"^Q^#^(:d:I#n[@W?+Z
%qCJ;L%:u)hngYHt_3nTf*"?n]o-;>lf9sFaOSV4q:q7^%fN>'b+jBU8=tk8t=in22S`tnl3/Op&LI:#nQlJ>C#J=jdI?tM$k#F!j
%0T]d<+$l35HR)$$3.Z0<TFWNO@6"u`glQ$6@m?;P@f-9nNaqB)c%aDq0=%g@o^l(]em6N:?RCGFPYA#,&YoM]:45Yeq'@="5*TJt
%d\V[6+[*X&U"L8fgcqEDK:sPh?"??TKR`U)%n3WF5F@'mU[(j3`Z2mT)7i#/P4`pV$i4JKr_f/ZPEZrRqMs^KJJEe$;S$FQ>JS0L
%pL+W53_T!j'Y6@3"oZR,Q>1m\NZUq_H0QVaWa'K-Z&^knH!Fp<L+1&>7@;%*)[&3?+r.qt>U1,8e&oCNkpBaR>XRl]8"rN;g)0cg
%p%WL<;^KIi)e0KFS(P(SU1,FIKAS>Y%GjMER6Y#UMjFj;&V9FB1>"jkIL(rI(hsmr2"fc2jZ;BBNTgiYKRq2M'LPsVk7mmPEOl#Y
%YbDiNMV9_fU(iIZ+,h#[eA^\<WZf5YB!?(*G`0\I+C]@KQWVVC?ZZCNHRg5iLF*S#Zj:\hFQF>T[WZKk_V7.E2r[Cddg[o,"G>!G
%0^uq"6#Ed4^SENM&;]`q%jT_6cguthDck2XGh9,:n'Z>7[M4Sl^NCi0X!e5m.gmIqI>]-.S9(0s'D(a:Q4$%D'11?9DN*lfKn2,2
%Zud5O8@O'mO_84jd.)g`>t3kpkQDa`%6]0`YP;O)"U0RJ;BJ7qD9fo2:m6_^8SCs\=:Br[)-.5Kbgsa+Fe50n&V#I;G\'lNQSa?s
%3l2;'qM)T[,K,P^8:A-5N?`EKmqCAn:X/PIcl*OZHDEN7B>^uJ;aIC7!A,jXX+eMEOc!7U\M;8t!A11;@ZZJ%FUUD5ek_)e0=:Q"
%+mQgPo8C]p?VOp%83pN_BQ)@LSRH5Cg?A1d==-atha!'qk+B#5MF,2M]*$)M#C8E)6(#/$JRBo>D1.!q3g=R5KQ,AX34>ZWGhteL
%5-spP1'>kgE)I-<K7q-pSQD3&?`A4qT5AR2WKtNQ<mE,YLdPR[/-<Fsp@uQ7&*,6u6(EPoaOO*Z4jjsW/!,[U"=&T,'IBRR4\M7\
%%!.GoJl)rN&(P@?!/?X68IUei^T9ACTaiN3.-33D]t&-P7J)<o\p*S&1I#TI=YAYXnB:MT+tm5UO9";CMo?5Z)Bi2UO"Y<RRFWLs
%V@sqN8P516W9J&(f5c9#A5aNlJX"5aY(0m#%AC4b1*P.-#O+hATt;.R*&2,I'D0HVT2bg`_G$m_QrNZ*\[K>YS.=@G7];0_PoT]7
%Y&[pSl5/S`i5]5nRR@C]`RoWn+1gd>C`CT36kEkN4N12DQjJ>9/&J#T">UG$7$=%Z10jmu_G+,Y#&=j>e=46,S"W.b!Y;]DQ,(23
%cM\:sY+-2q!/[H&YeY%aGi?OTR*:GVRQuN](9-9(9FaCg%$_2+#Y3KD_Rh-#_TUVu63TV&4BRh9g+'*+^Kl3q:p-gpTmXaN/uB4'
%OC@&^+aTKo2mC#f!Z=[k_3j_-TJ0FYL3UXLX*1ju&CNJ6qr"E-RPfY'0]kZ@-%dYBEP6<k[`(ON;t1CmFK2W7RHgr7l+$T(/Jd<-
%>XKr1=VZZ9JcTDNVBc`%4tqEgJbrH%D#+PE:7I6o/Cg*'W\+Y>Oq:I+/j02EWbb=]pe;/-hc+$]&XLfg_6Yf8dM`h7&OCPT-m+A'
%`7%*Ud>`1:']H&fOV$$,H;;#>;[3C,Nfjr7.A_#5l-#o!=W@;X=pE*BV=HQA6F]=EKL1JrMC&Uq!b+uYq;n7<d+K.-'uc!%2Q=pm
%PEhOi]7WdGJ_AtI<iuL:5q%RD%FVDD0l/<NX<:`"8-OW4UX/(ePg#OR(Kt^\(lt\rWH9'@nBga4FHo7aI)GX-K;j_f.\2;1fhaiY
%[jVR$/R(T0V=]ha3Yq?;mBj#/*(al^H_WA?UeTk5@g'?W^G=8\,bnRGQ%KhdnC5rJ3Ypug>'fu6;TtcL3X?L<JQO(Z=fT8iiS]\\
%Hkhm'/kLV:WMG8P<;R\#]B^pH'rA8$K;VU5"Okok9WS9<BH<jB-KlA\/'31U&h]3<&eLnf0eS9C'kF8R,Sj@%9-q%bUmkU=B4Pc`
%aU*DHbqtt6mnq%al-m=D20961!hnO?VhlP!5cu_3Ld`F+9WW3tUP5kbng&VS9PXG)ahj3/#f8HQPs#FA8dqoA@)5*&^IpN3&/c*S
%]!Z%sk3$2b6/7q1,UDap/sc:mQHsYnRtrXqjHCpLR6L4Y4IEOD.Tm*$bcB-Fa%uccWkr$KX[N@QPkg.YbeQK"CE"1$j-LtS<W>6*
%:79$G/_e-!'3a:lddaAZ=HuD4ikfnJ:K?So,BC8?STR2P8QB1p6r$;Sel9Ti$+>PuqGIu=#t$*PSbfs#*E)/P%1&4sc\5)7!SuFd
%`@)RJ!_q^DNYW#=Ztk_(?neneHH"29E?t[<6ib2]L7KG%Ztm3cUnHt*]hoe;([pp(%Ftf*s)k_7O9Ll7K1c3'>MHn'kuqVU\b\>3
%RR,im`eF[XQiqGp!caU1=cG\De-[NH@$W>:Aik<qR^U^]MNc^g?^.l:^M8_'%nE=((mkA?dtbqsSmKm?4(nn/s.?uKl]EbXZ@h$D
%kWdRTJFNX)O8$hmI-/OA5Br+f$lF_,PeY&MW0/g<0RqtbCB\qMgm_HHY0&ddXd01?.RiMIK4L&P`asiE9%Bai"g?$i1AZ+sMCasq
%[-8fo@.e4ggj=8gNrT9U7Z2\T9!WSk.-%+i^r"+AB$l6+\<J<S9pp%K5U@.07<sr\A[?mF([2%L&^GYL'nIRA4qTegSr<,'PI);g
%0uWUd,>(djN0BI!Z8"3:+tsM_Q7SroeEhO@r=-4:D5OH9/f+VGM<F7;GaE?e+jFKa7Ap;Dg^l1WiglObfri67]A["\K=l#0P'1;T
%=c1>_c61_,TN,!0SO/PCZh9iu]mM_"hBN)n='A1AA")N%1&d?^E$n:sFiBs<!<BG';(2,`9#8qG#*7X:).o"Cq$OdZjfl_i(.%/_
%^^aVD5sj<7B*/cjdZ6Mt5uVW@dE;pU,\@(:d"6OO@tKAe"a:CJPN#Sr#Gf:aoOJOEE_BUeNaW\jq[M!\`=RO)L^+e)V@^Ko(aUq<
%)XqU3.fdr\A:!oo&mrA*X6M5\Y=fbl<WoW[XY#*TZ!lCEbg:3hGIITFXCUdakPAj+J0Q^]-@dcC_/d^=c]p$R[TV??V`P^`&#gS`
%S(fTi,cUutY^MWMk8:`Y?ED7,HL#J6M4j@\KpK=uU+WpYOrT^'UomW*Mk5\lohm.<_s:U[]0/-Mi,K`i*,MV7V%K#'Y&>:9lP!uT
%E>_e`QZb&hOC;$s1]>Q;HsCI'Y"e(R0gEnB7l/JX(\M(R6B:Y/7'h1B:1:T?"Us"1DTICYXK&@uiRC><(6kD$V-iXrk?(bs5O`)_
%P<CWto8>QC(iogjX,=+t]iZIAAQnEnhR-DQE![WpnZqG+[4+>3I#b.5*r(!$7a$<Gksb>87MD2+,+T(f0:JFJf&r\&JNe?4m4rpE
%Tn)<9^(jqZ"KIG@Aeln>\c!ND0,"BKeEH#1=U#"ETu.*PqhUPf]qnc&AGR\L[<!-5-hBDI1I!]q0/dH6d\VdM*7a>!+I"/AnW-R$
%aherZUV_#?_'$Cg^pR.M"HNZXE_H'R[VWK-eq]$==>&+F$rA#2QM<71lQNWP8`o5gfq!;-!9[IB:Q*?k[[b2V2U)5n]J)90bnK`k
%!u'5RW)BLm/QcH##Pd%X1X]rV>Ap+iU3a;"/#:1H#F9eC;Gt^li,f1U&bdPTg)7nFe1n3WW)QWV]8uVHX@V<sV#$,DXFA48$AT_/
%%KqdI3G9Q/M`dkTNZp.dNRZN<Th%rM!r,kN-\#YQ%#go9XSthseUNlY9^97mkYH-Y0[#75G^'iu"l>YMm._?A]qpa!ga@[K7eu?h
%Fsp8'_K[BYBpab6Fq:OS<]cJE-!Z-0l[H/Z%OU(`/-4W(\3HYZmRcmY\2:O6%b/ZRFc<9*`N9XfhH7'm`seQ*Q6!2>*!^e[\ZBk&
%!!@r4Bf?Ju.4:&LqR2p5+*NF#@>5?<a:V6ZiDh\^ANZJ^OG]dO)RPm)"V4>6R8A0?>O^RW)+OLX&qn[]`I=l<Klru9_Su[4hiMYg
%T-Z!hC4Kl]:ba_/@`<@eF,c8A)sLM]qH3=5%hm0F[b;0(!`JF7d-.bQ7L-=M('%=7Fq]t+if"ae/HW^K;eKokNcA`6P-+bj5.sj0
%_%d^c;-j(D4J*DM@C\cs;pnSY'nKc=ID)JojNdS:M`.!/)<a6X\1OTk&sF3jq$:kZdV$N$T2`C[)iqCi(c^43;hUM;SqJ=AUm[cq
%TO)N88S7^F-R^0kkOOlW3/r\73n"RuF'MH,RbMFAKR/6OL##-r+NP[ZoK6X@QLjl?gO#8.oPmjTWX;6'EWN6WQ$rkS'T;AC9Tr.h
%b:7$("efUiL&3c1:tBk6a]pNu`9EGY_HDs;WP!soX6=q#_!A/M#GBWm#VU2jc.(Z0YK>GUcHYZ3>+J+!+NT*;G9i_GT&gc[bf/Au
%L^N]eGgp,;do`4eFUu!oZ0fdkcn(+X^J2RO)iklCcI@G]!tHWR]+k+hc,4Rj`g8c!hM4?W#nY+X\)Y0M-WirXds%7N=`7dOA.6KY
%5_fYS'(OoFqJE/Ho6YBL9ge"EXZ]d(H2*M[(XfC,^_13toCd&JVL_FE5XGXHaEJHKoEVip3,mLS[$\r7["np8b8;t`#D:.>>0Ib%
%JFo]clu7P,P/>@>B+CQ#Hp9OIn?3/IkrecRoJeB9QNVJE3UYiJm2Io.BB%TVH'`Tahb.WYm(C'OqG=_[;0eGE0/%HR_,G@l3]dsW
%2;M'3E=0OrmD8@E==k\"=@?r2\qBps+N5r`eq(m)-0JkA3d8OdS_/6#[CBrP*1_r=&`?<fc+t&*<PcKV4dppSC*a33<iXl+]8VO'
%Cm!r!Uq18olh6L]EB?tS>9;C[1l$2<C4[qlZLq\V1p;hiMI8;s3nm(qX\F]O.&1mS\Is>aAhUArL2I8"Hp5ES"(l;kAjV$%h^66r
%A<4l:XV)3m_kQ`pd\ddBIEM1qP.V6u)\T#FkFF!981SOC;ME]5R$REVI)c6P?TP(5h;^cH'@]'`XD*4hMRGdA[H?n\AF!/JTMm=V
%-^jqUFc4ZS0pn>nm]Qe!K#6n_O0O")^eRlXA#0i4'e>f@UqtU&:/DOqq72hkVd$B@FMD<92RD0k<JH3R0ra=%@K^DUrmoh8)]=Nb
%lSm,df+koI&#]?72\*,832#9o?iY#Nk<AZi^Qm07n30eTe1M0c+eb0?$JoM7,Y7.<W'2/>B'?P=Ylt?HY`r'"T'`7XXhqdaTQHO+
%FXRY^PcM)XE&F3":g\DUB/f?h9ta`;HAtM%iHkL\fb(+t"_H_IIJ`m4q@T!k;e'9aP(@>pmb*6_gHVdOTCa?1K>(l)dZ7'QgF)r\
%0G+0<n,N/Is7eEg)E/mfDM2NO($oA/If,>9@]?Ncr,E4Ke]gVTg#KQ9pm)_,$prqgX\iO)n_%m)$kRYZA-"iu]J[K^55mh&>2?"?
%@F:T&'<&u+@h"!i,.cQVK=>pCAZ84>8JC[E!Qqr.a/^&9Cr&L:);cX$5t,jOs4mE;?_TF0@)iHX7u9bWkmmV,+Q(j;/tHLeE,)1*
%d0,6!1f!YYW,Nn)CnF\f5]pdMZ"/NQN(X>OZrs^cO!PT688SXr;sXUc`>_9B74\n:Mb0;("FCSg,p6Nd,+X=YYq"2U%*WCtHL9Y2
%8GWNieA28Y0lEB<.*X'$!Hi`rlC<N`=:emHTj/R.`,$452NS6mX]PIFe5$J#Ai[!4)toakrCJW3(NKtB/TC9]$G7<;?*hYV0LO.q
%![e[Q0]"r1kbnU,GUl2"2m%UfjgTY)hDBPZ`j]N3638Uc_/nT601q)$89G]`b6,XCO$fah!j#sFTb&4[p6CLLOB1am"fY<DojXS6
%FLu%Y,m]j#9+_1\alZKnE^;G'e]KbU)IHJ/#?IaK+Yj)FIHX((lkJiB$/VHS6=FhPa>D)oI\h>E)$La,c_LHH"a+kF>rCiXJ:aCU
%cPfRV.R9n2Oqu<-49;!\"r+$UaC'R'iE=%WKZ$thn=;Y61Rs+89rM.4?:2*kUGY,5`[Mfu2-?o2$q5!P=YUT1<A9;]>U?^]OshGk
%<)H'N0/f-0*H)E1)N1lWMs,Q4?.%GL5G5G>;$C8lAN``27u!%1g/E';,S9PUUbj+oNKrdbR#:9/<B.[s=s8r:-<q"_5b\E`"dG]W
%2V'aYUk@06-XqF5?B;=R_J3;+c0&'P-R+@hX;7K!).U`]\6tpa09^gC=WbuMnN2sl?t6ulFk%n1hI>Xk5=NMKeUYai;,ZR;n2mJ-
%NRJ2]7$T03nZ#,-7!"<_A20UU"GD\fd0Y6AUbWXs"c9M$r4F0;>9k7mGaA"BjqPbXM*[RMU2N>li;u\c^jr.`T8<eV%*%%6St86n
%MaR1\="P&?'!kY!o15`%+rsFr.b#3U!L<";XF7/b.#_.LASg0g5rou/`G+$!?=1QPaYNQ98-*Bh9(diU#0Du>+ScZ3ZJ\@B8^hmH
%^.7#oVkGFD2c>0OB,)]kO)oS?1GTcXEAs<ta\-q^*40Fa[N2jn!Ep2,1Kd"OV6_Vr]\DBRni?fU4>j/6Hr2=*/p8C#A7`lVqNb)+
%m/ePC7.$Z4W%F6e[,ZC;g@VGX/3!ge(usinEmonY)9o[W9JaSd\OP*^q-;!",>#jn$h-EnM)VBT<nni.QHf)?'rH>9[c5DD@b"BC
%,XflqW^2O"W8*HJ'g$2WE61YND2icGgQ%(#RqGe)(c>NuF*Dh]$CqEK^+:>!E;=K$`]+?LRGG;tTO\E`)hFR?SFVK<dM%66UVTLH
%81ZssXEPVAVd`7k'NgEPeP>GMp8V$?8P3]%j(--pPUBM9e6M(#$1Y>FlpTC[.a;:IQGM5qa1eK+RW^hk=9tT;M'2JN=HV%V?uU7&
%6R!9_^8T`QE;XMDOaXIs8>ITX6oWRS3[u=90;n;N$U:g#5%S8;B?ChbWZ;^I^M4\@/4'h0WhnJ)Pgsjap:!J;S&Vm"o8O*?S+tYO
%mcR3+[p^_P0$j`?(L".39HFRcd/oZ)XP>r?0L8Qi!6cMP+&T&1lW];$X-c&b/T@-F%3<ER4ne]^hDS'cKuQ#A6c7'Thb^u_=l76?
%K+_/?jcD],ZU3)&YiJ*mWd-<jcZ:'L*IcX[Kr[4=eKB"N;8[e&P7s/!La,MgWFhpA4;/*SV="uX$6lMhA['K.UBkA$f;B[UTNWK\
%Lm;:97Q$qB*os+BB9\!A7?C-3.+m(Oqij<qkA/?4LnWHW0)%gD%eB2XOUnaJ[oY?cp"k@p!,AfCO[]LG<L-0BE*+F3D`0$3B(3qW
%!i]1jG3qK<4ah[Tp8/M$bdVCT4LHTo*i(T^L=FSJBu6,hgFJterM(P?PpBR)>jG7_g?,ksk;\O,=\+5I=.)9`qPZqUcJ*7J,FLfO
%cjmgK.]*2DO`9Kc;j:qjVC@K]8FufI";2/Yotasj&WWt#G\Y>Z*r.KGLm5!&LKWG%S?j;WLgML:=D<Q,5iFIm'PrFD%1rT>V/><l
%Q*g\;jDNju^^GaiqL*]N3!d_e3t9Y@i$@2n7*!G>6=J6=>oHVY8OH-.E\RG=KgW4A\C)'WeN3r`V2=GQE6P(iDkp4"EEk('JLaX1
%9p`bR?:8qTc&+*WJ+2%S2UfH51<Lqoq0M)k76gmt].:);.d+nH!)5\Y:rHtAW94Y><Pp`B+W%K(KI#JENA"H'$)-%@KOWrghubo9
%fjl8O(AAKPN%oU6AX,dG['%6LA@GWKiOt5n_[YSLAqm?IBH[Ok>=k!J$9(1Yg15pgMRs)C'Aj&EN0r*5OZkkO3o_g@N&5=N'q_VI
%,b8:=m`"P;U/#7hL=\XP7sQ<%&'Y3I+965,l[lI,3[5?_N::+CH5;$^^rG,RIoIbP`4dJL\#I^MHeT(/M.+'b!sphY/#^Z[<DN1"
%@oKHGLqP]&@5Oofctbsj8^e;LE`s`,1BmQ:Dpj,;8P0ap4%2`"Aen$F>#t.C5lRPN,U/i4l6b+A/^"<ca:Ym]FRsY9=P\kN6!bUO
%>"FoOgJE!)M;!r1=DZB36Sa=>Cdq=mFt7%+/T>.S9$Gq$0M5mr$d.a<1aGOsd!8eE?mfW-,>B%LFZ/IU30Xisp0<GdWH+OZ*P.Un
%e!#oOhW0d@BI5.u*DINBCMg)n/U<P8nJL^u/S?;"."u8tZACr[C<8DuGWmsK]>Sq15BNTN'c@Vl>HLej&2tGn8pc!9?%#!#oP6O<
%Oajr''45:aaXS%e473gnX,XkEDnm3>ZK(Z6k]@VhfEZ`hk4N%>/$E"F%"lq(/U8XPYf0An%lcsX8bq#b6Oi=*ZUSS>K5p/?I0]@c
%SJJ7iO2*7\<MZq"+P.Br@V$q3\_YFV*^+J08>AZ$D).5=ge:7>W]:8`.c+#?@GAudh-(r2Jj3.G]4^<lK-hKD#'D.9l,)<$&b$tp
%R\cCHc.tj#(8TCOXps=*%g[^/Wn#G>1@nV*Xk?+<72MscJNg*N0QojO:g3.JEGGQR<j!FAZe;ONAF,O'HQ;J*5#";P3\[*2jb6]t
%kt7b:>=j.#\CX]ci='S''n]O3_)2d`gOf^Bkj&n'%sGsn)Cq5]N$[E;_pOUs70Du>`JAnV0K*%K1Z5pGmM)CoUU]!bRec<q#O:Yk
%\KHC5EAn;_K\6uM.bO"\7nF&&*1Be<7"UEbpkMO7n>t&=$=ee!O:<><;!0-VN$9p7Re9kib83aaf]O=G8Kc"1ArB\q[1Ze*(mQQ<
%0@m[PPKK4Hq.\DOUAOAsiq&&r^V\("CIlgMfD-9^JHmKCQ:aATeuBsFT/2N;VrnG$NE8,rfK^QZ`_Vd4)_%n)aUuhLc-#'T>;2C<
%$tX49E(cu2*:m^<`C]@%;BGX\?84UPFrYF+#;mX.i#k@O@]Rol$N<s?In9E34PE1C`abN_(!iZt!.(PUfKmsKc=P7\<A=O]hIL+Z
%R^h@gSd&6*l?1MEU=$c%BA+JtIp2?OT&%/u%5=Wn$j@SC2dSfNMfo6-i![DUL:A!=mmV#Ar*q&Oj6UG9G9_Go.fFm1=fY#7bq.(_
%Nl'i@o<N3+c,auGgo#i"+B0]##6?[<\iIQ>:l^_XM.?f?ht&MEG2F0Gs,!G>(jWg@F94:L;$.rj5RLLD\d5)bh*QK+e%6QsSM.k[
%Cqo9fL,fX\Q8f4;!Mg\^56VSE"cL]"`oj&fOK82mXbl:NA5c0cSi@S)]US"M+M<V*:C@ba?HVZ"Ad4o\)JJ+1.FEAI`B;l1I,K!-
%c[WW`PDd?b_blX=(OZ45QR]E$j+"7nV"Fp?F&<=P,$U>CK$YMSbP1CaIUpUO<5Q:3/s-?6_@4:\%9D[B_N2!jlVS]Wg>cg.e1B;e
%606W<R/oR+eN8D^iF@L%d2>n).&g;>-Qq0pfbm_'21G\+I\&[!>)Z<Rh8"<lLPOpSgD_+%#PPMHEO:-Zp4cL+B1)t.\4DI#1>^%p
%/cJjF;Gcj/Jl;YA77fgn82gdH02i`=Lk2fB*J^.+UNTeQ$Okj63tDhg^?9\:i0_;uA+hO$X,(Jq;2!lO4#rM,mZ$VPn&r#m0-3PZ
%&8`SP7%C#[V$l="WYG3IG2W++g$X2V1!Uhf6n]Zf<Pg\'p]`j`O\/Q2lT_iJ.)m)?ZF@V6N(<#/-8\FG\i7b6k:b#%h_Ui8"Dct3
%%8"or*k7l%:ta9i%tA74-OG9n<5(hiL/PK:1ZW/Q-"2NLK1_*fXBZc-^K0AsYLZkif=Pk8mgjoX]k+YIRQ#(/>5Kjo5GRQi,2X)*
%MBr5%_a2cpC."L381?K=_=^PF$!b6=bSI,6W$"%SqM@K:H4dQMfmAsQU_r)*l\c!/Qqfb-000%_<0t=<i=gf,kd8T!bmP'(j@Pru
%UdC;!U/pmX"&ZeR?e?p0SfmVn0#YhR#H:l$4YuC=M1BL1Qp^;1Hp,9!7J\&r4t,tBeSCn,R^Xh3YPA+04lab]c,F*R`d'3o?>tW1
%-Oisd:a9A-OW6pd<iG^DiCT"$'`.0o$4W96GF%kI.L^nV5uK6l8-i+"n@5(G^VW/'7J7.[*u8=<jA>Go7E/#)dTD,nqW7^%GWLC^
%QL0.'6/sLr*61VP-Z@i%C5?l!`2FLnJA4d5n#=hj2eSZUGeM9TipCQAS6\KZnWZS_9_<3IXtJCg;XE/7dC)hR#KLG,jg@Z#R],D?
%1Ua$ecQ0^H8,f)]9L$gcETYdSoIqneOjk(`K+ZHp:J!HB9lu2`K_p$DYaZJ6.$m<T2>Lt2)XJ(+?"Xr)PPj$Z.Qte5EDQ3EEM/SO
%q;2s!/mp>.MoGR::H'J_2(YSV8Yf"M&T!jAI:/n*WKJ!_B-:&LMCLrp67OdQaEu&CUWY&pYcBaAga\-N'?M1B_AU0*@?V"@O/M+l
%WX%$5Nuc#JZ'2]^$4=[2*DYM[DoEf#h>\Bt7RSl?_Opu4.CT\Y\f&BAkBdl-23c]&S?Y'"=6<h0.e,]EgPKl_pFE?G/0WCm/q:MX
%o,L1I_;^SELg+uLC2>8H?^C).nL0:Mh@6YnMtXsJbkO?]XA7'l@ls2WZ>B:4fJ5G8flh3CY0ZW_VblqHG`:C%etY?Hrj$A7CMar%
%$+H!D7j)`I=o\WDNm6dXV%krl2AW^_D9R80CS&SO?ELU\Y'8QNh]Mi:>N^=XmIW,tl2sidnj84CbVC/u\i0`XR1(2%5YSZNnju5-
%V`2PHe:_4AQ.YXZZ*4RBT@'NkT$D=&^\u'=Tg<%jZmY=0!^O_VXZ^sMfWriH$-ja'?#3D(XZ7]SqPnA>n[&W1mF_INO+/RLn]8T5
%]idbJaD>!c\_'*U&cj60mS<KX'4fM\rL$i3IRDu'^H8R,e(9p1I0NS00D+S4n0B0Urn5CY7UEKI^Qn;YB5#ieX`RhFrpt39li4-_
%/ceo=A9`TG_q2nq4BsI'"BJ6QMMbK:E=$0P)D#0>7n(p9[NoH!l/Odp,!u"?JJqZk8\[E2[[cRs97slflBZm1CXAE,h9^AIXh+JB
%D16*Up"i@tS%A/"JFooi.%!0*W\3Dh=[,^OZMXMT[V"KaIV%O<%"E6>T@a&7<g<(rQga[e;*0[!i5_fto3.a2PI9cV<a;d9/1.3a
%`UV*hIBe7Ik'np1QX\>io[?NfqCrak.Ia6CF?@<VK$g!eK5faL/IqU3f6Q61JYGSP"+bHb7VfF4?M;KB.YCs;^X($9KfBjg@V3sR
%Y2j'JrLbe]R.MU2\*[Fg=LN]d0)kJ^VDebo=?m!)QNMJC5u%Hs0c3O67Ki(..29D_ECn+_eQQ7N.'(X5h^uFS+^Z+sD<8pWZLt])
%Jt^?+;HnKJWKjmHm:Deq)()-1(6EQ>N^RZ+X\,^AT<N"LrqH%J#Ij):4=ltOF#"dH0j.A4dm_HS&(/i''?jW:Rj&Wg>AD2J71'`;
%5VN!MMSm>K_YThWSYk8),UeVCM4d7c>-f_;&UDn&LeXB18d.F&=MieC!dLoIc[&a&41Y9:hFE/T[otnXDrrk"L(2<s.]1m*p/Ik:
%Ra/OQ!1ljMop31sql,uPl=o*Q:/l`'8nEIDq(jKnd;cUV9%I00:^MaB9fG;E]=o(&O^NftDC0HRa\:u$A^.@7!>F>%A:!Sf,(?R@
%+6E>ZCDj19rOL2!b]*l0#>I;%1A>/+791N9B!>HX`g&SsZ^[N[g&PSX?&f0TD"_kc$NMLnl%%*`b1JuQLsqToY0*&),@UftPm-R"
%Y?<F2[bA"*:JL%d,;gFN$YIMj;JT*CNf*m^R`ul$UeUBi;TE0[[(#)+h5/KtrLMOkD=e#H;C>pG8:4Wt>.WP.-ii7PFEM>ikt#C&
%q"EH-$uSlLrr%C/%^BadA31i/,tA-e(7`'c:&Tm_s!Q&$\._=dJIZ>(pC3Cm]`Ik7S>^86#sh2*gCTO![gaP)2&U;+9`YWFfG(]4
%n3;I<F0unXKjYR@;F1H3ZbDu0TOL\rKfugd%i6MKAjUB(YUZ%ih+0oSqda]RhQ=b)B-p7LoX^lV'78Xu$]m<Q]dMoL^`hl4r1[co
%:]DP<F8%In4du[6^d^thLD&A%*0q`t+AE5@\X4'3UbG;!eJf,>N8$sB6l&,!*3!G:3kqg\RYKor/g?!09eKPj2#+6Gr8C&&D4C;7
%b7kFST\`:ADm%rY.R:VK9=[o&jltktD'__R@ILZ;$?G/`MpGbBf:3V[+Qd-.9s^dg6*2j[bN&Ds*J1"kF8k-P%#bEF;CX0d%VfR[
%E?734P0<ELAM3k2OJ:_-ge]NMeH<`nfED^lC=[0W[b"JJAcH=s@Gd*K4gemC#[kTUS%u;_eqoiDhtD1Md)A;)o*^O)QOT0<imb^h
%GuQj]SgG0h$U>'[KXE_)*M>k&3(LrR*Q>JM.<Ad[K\3u]Eim(R36$!lG)b=p(AGa%5YOG43A)Et=otL)].I:?2Fp2!Xj(mla&bN4
%XIh2e5T0VOQ"Z?-)=4aU+hKnl_G@0C'>/c2P!E%WJJP'O^bh"%f]N;:2lZP.+HH6#!6\Cu&he9eHu]l$A"oU^M(.-,&.SJPHL@*O
%N\T]GKri^J9<-3:]cgs>4r_G+-R;3b6t9pZ05KdU))-<*C>h7+)4.eZH'YNTN,6s6[WQ*Lk7+71Z/XMQc+iuC(d5?;bW@?1GWQk\
%R0@M!`<`J<S%#_sQ)qNu.2f*gX:0DPZ87<Y>`PKRB[U"of,WlYm5ht[[hRij=F2!,aGYGeHQqu37-TooSjb]!pC!&XTB3OeJH"Fq
%7fUBg=T!PD=aI2amLWpc<b3^*8Fk,OJK3TN!5`lQCP*=':^K"a@!oo%0h&,ZilA*r2c16g6\(C7Th.La/>GYpW[q%+lpVV/c8m_R
%CSM:[XT(G.G#GH(gE=ls4\/k4Fe2Sa0=1@G"`Q$p@TXMo"88HMejluKGmM;*.Z[D/T4^__D"$X#@"Z$NW3Za-I?91U)-FOjgntG"
%,cOpX[kWo)JNZq;'>EK1</1n</8?a&R5M"d9>rnrN!*c.\fK,`D%9#or"emZ;L4I6<`*-!bd'JDabNlkmA\#apAhoX4IM+"`&iVa
%CA+`f<JU6X:f&9\Q5*j(]-Jj+G??K@CDg!.2+LPR,gHn,s!FC&eX6n9CK=S]Q,o!2QBC:f=W*%RkP-rogH`)hP.o*A+];'FD6s.4
%D:ujnobE7$!_pK8)t7#R.5\6MA1]JD(0"KX=O;q?JpSIhPR>3*At_jDXaWb8a_0-r;$K*;fZ'n/!g&Q<L*&;hH[S7.]ErUDoGF&j
%Gf(6NlP-VqE.;^iZ76/ZltC'M<`-n!ZQ%F`mN5p4<KW/,'Vo@(8'>>lOG\^bX>E#)`X76iC,a!2Lbbdi(A;jQ>0Oh/,)+##p]8en
%X4RQu)<UM$=H2CQ2Kq)BDGhA3>Ff3F#X^"\b8XdC@^obQ4O/J``+fXplV<'%c`2-q=Y-XV3bAKuFBOcY,h=EEG`bA"a1%gN%@!M,
%hP^V1GT[IOY_c?<qm?Q,;1K(P:Q)%^'YqlNi'GIq.V/c)I6;.M_J2dB.nI-A!m[ZOM`S^7>>P[#nV7Ss3J.I![ZHH4pao*tgOVjE
%%h#%kGgpRtl7I(\$4;>..nnN&ma&n`e9+Vk.itI&@@ZD1aJ9iDq\DV:!=F[WAKogdlNBkY8CX2#,;"Rc%PjfD9<I3)8[S]g#1ptj
%Z<(U,R+Ku<TCXugPng/'b%1Y!R*4WSgqa:bE!-rCM=1V)BsWINjM:;/-s^QBLu0*U;DJmE?:",^6R7M=W;JOTq;7+qJG+_jrM"K:
%_-WgR+AB5jU<ZY]8Hl$;o(UK=j"OLK0*cR')KPp46Ul`1.Q#5^"%K7\4C_d3%'#"JW\"aBJ>BFWUT^pDO674<7q@e`e8E=I=IpQo
%".1f:0bDD4B11uM#le+,_$7r+k<SQlHK$=f?KfGmdJiF6$d8So&$`$fp8IXR>,Kn<"r%igP'O#U=PG!@U/68L5.tZ--r`pBA5#'8
%)mQZ@brAJ$cnt&N`X<IHWsK-BH.*'d<>GONgR.Hi@&/n6=9*4p(E4GuVm*D3Xd&4oCU!T)#C>j1@%g66FH%%Rc\a95Q?ZVm-VnAT
%b_@'fJIXK%+^PhC:arr"C+Gl1Ap!74Su)0Q`r\*CMbsQe;hXp9!NMdrg#-fcB:s+U/DE<lpM[a[J&4G$r;?7!CQ=@&i^rO-\QZF;
%+#"e#s)d9,:,g!53G402cj)[OjZ[;,=XqDQ5+.gEm[?2D@-%";<2NE(^T>m7H0+^u6@.82iW7H?T(Rm7UCs.51_69>)=h4X1#O=7
%h);N_/"#a%IA;V/>)hg0?U:kL'K.<mLi]o7lX8oh0F_GOa()Os^hB6XhLM9g'P9X6SmtsN3`R7[&$XL([;mJ-F\@V,!nZ,%-E_][
%-Q67=&4E[LOSs.GmOE<eh*'sP"sA[O(']3/`3T>1lp<\%c0n4:qYAL3B7YHD/%`[Q!o%f:Gh$M><!GTQ$6hH?#s,Q,Rce8>R%@=H
%j6+Vb#CXS-WqGBtVf6].!/S7&LV\/1MX>h`Z\:,D2oib:d%8p8'eq_hYoo*/@4KK:n'j$@N4.__I@RDMLZRI>*%Y`N`M^di:-i7W
%HN3J?o6Y[AQ967!,g5/@*7#NeRDri\4S]ne;`kFr3ku5='@,54%KHkQKPS4s7[BtKBma?uEp9fKG?,TCj;;%&<#"c'k52=01QRGo
%#WJfM:9/P^Q-[,"?ctA]fLH-MD0q0O.OoZ\"[SAgL*4\!#`+J-6$"%7W6iPt6u(>jGSdhsQeT(,jd'%m5Nk`EDWj.tDVEbuZ#"op
%$gR/aqS3h=e5fT_#."=Y^TX(,cP#L+\nALsMbsj%k_b,I[/`(rQZSnGG*d9[ls=0d1N5_=Z#J1;Neq?EpFk&%]isss%s4*PL;QS4
%@CDGh+qMZ>,'ukWI;pZ615oIU>0$^cqL"s]G1TX&l5k:t`IQ?3/DRV=@q+-j(J#j&)d+?nS[4-&bonV%%TWZAVJQfk-"_OZfj#rO
%]+tr$CiMe"G43]7\U2TOR/s(T=L`'Xa2G:^0:,;Jb^4[\,7Io1)/PfGT-*fG;=Fi*=2'u3b9"tQ3Dm3h:`S!-p+De>:?]!-?2pi%
%V)k5/\7oQq_m9(kO@_irj^c"^'Y&Eg"o-fNIT?S\gP(*Q%Rtk&kmN'9b3&Z-Gs+*uer!PBA*BumDs07md*@5uAb07]OU:^gHE%mA
%91^=K;t186<It:CGLUVk2p4G>[/dj4@@\s<?-_W=G?bucrbq!^%W:"2nuus0$R@L$7Y]DQR(\_d!)=OBog,"8=SOs-Eb_n3Fa#Do
%`/4/9T[%`L:#WX0:">Y_)u>SKRs&sK/DL3cKD=#9YK(X<+V$/VnT]"UYD'4n_LBcnT*pnM<*_3l$A7NcUG0-G]oc1HG++TsS0TbO
%asoH.XG<(-,hd`V*X(aT-pI-@@=sO;68,n6`5D2CL2!M8V-,IZZTYPQbsbM+R+qk#cV)!]`I3P:q(I;To%D!p'qL!ri<9+pR2So'
%n5[t9A]7.G,@U"l=p`#?.SO:o$$&G0L:'_]lM#Hf"W@()_c5kT6U+EYK#H[9;+-I+nXtP#'-'P^OY9h$$2K)NK%^0jhu&tKQ@F;/
%pAC>BOLuSj%@)f2#qRuQP7U=NELWtoD1b<&8*Ae1\n!As(<!R_d'O"tdcVn;[[Mp5-0O!TMlpke#I]SBSm.Qa[GH3[[]\HZ\6@MI
%jgnWR.@FNfi&O%0j*ARVdo%8i>gLf-O.8/b=T@o"Sa8"rIm<r/++s9j:Yn85LSt1C?es1\s3:>*s0t1^IZK!VkC7p8`=or\QsEe%
%#4Ia*Nti:ripPed?Uq"Ei+:U0jfS^V5s+]]AfSi_,U[N4cf]]hdOnfV/Co\5,:`BJhPkU0(lqdW>7Ou+baOm7j_So:hV!l1Wh5sc
%.*K>,`c(U;7as,A.ifc0@K[Hl3A\1W-@Ufa5PC+^h[GmNob>Vnk9BAIK#!Qf9[LCB^/Sm0a`"%rN>GG+[<-[B38i$s3*HM0.Ie&n
%BAOLr#+nt%cg0Q>NL^F^QKG^h_q)NU(=[fS(X$8RT9fqsSK>UnmjK9GAqCdi%5Fjj*nM(t\,5.5IfI%.^"?qpXa!t+Dp(d`mc2*-
%0tpGHKJkpfFPr+W;0&b**W-6NC/]U5;AHgDQ(.d:4,Z7&6n)\$KQsG'Uk"'6,"]3SrEelm5nWd'b%LDt4!n_5S":g0.!TACM1a6`
%\2V.XheYMr:sS<Z>Ccqb6VV4@k4.4`^tQI)V8t?#KY8ApY-+rPC9j?:@]#K;?^Do"5sZdJAsgJ<'Wr;LRn>,eam3h7d,S-p34/Q8
%^#R#J!m@tcl``ZL[t03/D'5our,R:3-^J,*m=,"!MUr:o7(eh&+Kjrp@+b0+D[l0No#n>pG7EX)-Pe%UDSbah\;mK3kd`lqY^<--
%E;m.ZpH@OSH;5U2o9bh9[A'P\Sb.h>ks!trM\%EP+C$,l(@qGcWEKU;S8JZGEs<3h(0[kB@aEfUm6"S^B>%toR9X[@"hR"s@CM2s
%IZ/jH&.[Xq\@@-%a:s7dK.B&>[t$Itc.<iD'k\FR7_U9!JYgQc2)YV0hR2%0'!iHW<L$pT=co*]!ZoDQ6'0;EmQKUN3ba,h?a0=<
%AGhd4n,&Og2LGI#;@p^E*.(Lt@4c>\U/0T\5q7KGW_nn7#nj9[M1QIOIWq8g=r=LL<]1a2]bkQIW3OUN,:\P5*EEOn$#/*$%\K)8
%COm:-EBkn[?Ascg2,Q/V6c*?(,;2Cr"3E'F!Mj?'>,.]p'JPU-W+Cu;1G>1bUqDlOHC^#Wo!DeE4\+E"4n-,fp^>BF+I=Nti55/7
%dQrp$.=f'V\U/(^%uQ]b]3f:f3X_.nlp:%dCK3ra\?/DqeB"B1TI.Dea.$\u*5t8LEoQ-P0$aPpmX3rCMQ$j&.m9e?[B`=H=8Onr
%lhR^S!MC'C`F]-ZE2&Z8m>&Uh,p//n>ncJ<j7AH*H(^\=1)W0X2.\>_+VhWk9c3'VW+rPucf_.K>pZb5lL>Z.C3)os35+6i4\:,<
%Qf+Vqn+0\f(>[u;[=i\*;[EbM/g!tA(Mid4Se<4sDc%uG?4rZk]*98j<I2_\i*2A3DU,<%Z(^b_JF:ORc>XRXV27[;mUTWY9(Bb#
%5Ks/`7IUQf[H:_PG5i9Z+;?]X;Zh=;]W%H-e,d&Aq.TTt`ZFu-Fm6(b*+1C$c;L&A8:[s$]m;,.9GP%4&u;YOZd!=38^'oLIhDnR
%bHfg)I;X\t`^4U";fM44g,L;BP(AUt/+V2f(8Estr3C/5lN^=YOs)?'NG6"8Q#S88[XkN8G@:5Xg$X'h)ecP?%5cdRfC<t3?Yc62
%F)R9Jc<ln)IM]W46Jc&s<@^?[mWO<h(0h(,a\YAom<oqc*G;GCXB06jPj:KAi:i!km.Q0d:"=T,!eKC/itVP>)S0Fa+E_iq:tu0`
%8:ZCd8076EIM:\Gs(8fAW>HsM1)(c*V3H`97o,_J1]fu%$;J$up8"LAk[rS@<1kUD%8g2AljSUK5b#-f+P^86Pqpf3-g=br7KOXe
%r33DM)+XcWfLg86*!?\<(FCK+:W#]GQ9sPd=?(@'/$qja!K\,=-%J)NP`0?aCi;hFe\VTq`:d+pN!27UmB@S>X!WVd&BXtFRh$iE
%Yn+>,jn4oHArtXP+9=WH\F<>KM-ntr*Te!e4HF3Fe)Jj%WCP8\Ua!Ee/'"U-nQ/+5Jj%4d_-CrC8m0e?o2f[YhhI\T.35D098M;2
%,#q9]#2cN#<9PZOHBhlg_3qYWh"/"=j6&7(8`Rm]%3?kdj_FjJgg'*i*X=YU>ni=DpoDO\CBnY.;*j4#0+pOd5YA-7/KgNr8oFcI
%j$Yh_Q4&H<o#0SiPm(jm<c]7r(518R-&(?1>23&U(LM'ZY[@NLAonYXkT]he7&h3s#"d.)a-7&um'V'_AN]lQHCM-"^)7uEZmKRN
%R7_Ye6n_)knQ!u#TF,N`9D3NCJ;]ZZeR:j2/%@KAgP?T$-%$Pf]59i//,/j<!5/rcHK4/\8?Jk+.'?:WRdOi9CP[X$!2G\c@L7)m
%1g:,0Hq\5tJCB0DEdX&o4[.MG%1U)p8<a<_].9/pn8_0UO24$+L;O(oWG[XLKAe(!0&g"A=oaX0-muh#Ql8(ns2jb5Qk@*&LFg*Q
%4iu:IGr^jkF:PB<>>,#<;aO"o?^Y8WNL'`#qk;JOg278WSt!jhPmWnUWI!*e"J/"Gp+<6D@'a\7gnCW?7GET>0,Xh>`R6@:aqW81
%:2K<S43!S7?I#88O/X^OB&RkqLG@OL9E0-thg\-"VFjYYkBi?+Z0;#?6nNc#U$qim40]m..'ct?f,OP-KJj2+R1P&=#K'qR9$fm)
%=2!Jsafb[<9Z`<Mqf;TtM@&AG%!:c+^iF5@nm.DT9a8$*A7h_Y=pm[k7\Y6EI+'Cqc,,Uc;KVd&\Zb+203LW=`gNeNFg@hPr%hil
%oIF_#?GCBqT6Y[p5F!7?9?chIf;[P&P<a?\:AZ5tE7Onk;mp/oQ@<E)rY0j$lQ;Jloi@6K$JKXnetb-^C?TpNC%ca'Sjh8?P&fsf
%cVDN3JU?tcB/fcp;oN$5:jVpVPMh/u!k&AaF9MJ><%!FTnW1$LTZ%+K,:68&'RWa%!)uX/[$VBhct)nY!gTa4]E!JuoE8&F_(Ol)
%]]TJEL$Ga..c9.G\+J.TA<@MW5`O#+?5t.J)cJ;YV>Um8[luBGgk(H6Z0X.'Ma+qOhdmRpQa?2PnQC*C1B&:Wn39l?mcT9H!MHYl
%@(2jmLR)?Eb,44(U;`%h=c)3>YK&#P`[PPoPR]-8,Uo/f,S[*SVLF+>mf;fXKSN!rV4c9Mquk/e[bC1R#U19k]^Fif.f5:_a_.2P
%+3jEK_l*0QanW&^-U135`qnAo-,9\Q*$e%Ec9f2h9K@o$_&q07JIu]a:)JL]<Ya=p[/1nGdq>h\e!7b#S?<Z</fHuLL&]2lW5qLc
%^&V]uobonuaFA@UI9]_dO/^nB*IdKl'd7?%mC5=H_#tZL.?*/%=9:(j$IotA$Tpp0GF24r`EB!Rb&]C)r1qAE:^bcGUVc$f`/n(;
%6_Djq]3i3%BBaZS01knmG@5\JFnZ.3J5Mh)j)le?(K!8P!>BGi#F)[G6kW8I:5^.dmG=uX<<tG^_&--p*Vj([SH-?H_;an*qh;?U
%i%+8eZS5/\]AO6O"6C8!R6l?0bI_kYMIllKhMTQE5NBT:D$KmM6ifC62B_9'2!.tX(/"(A2%@l)c6_h8Y,3gmbE`TO@eWidpPrLt
%TS0b*W//hRGGZS2!.#+<?b:ELn7]==h0+cZmnGDAqVf(55&^l2E*[`mn@5'c3M]STo>%kICV,[eaFl%,97qn@5W`>/lLRnQ[p(@$
%n8e(pU=t"'+3*4ra9.@d3Vo4Sil6(%g(q^TfB?=YSZX6JQmNSB%m;Y_KQaNnkB?1Mi)lR'LUI)(n&AI:Ll9IJE_lA(1@*CWR70"T
%83Umdk%nQ)1f[l7qR5"i2Z_40l@S4.a<#JeEo<^9>_`M[:U"GnWf^O!e:FRST#_LM5W38QbYWijaL]`4^:eO/r4l/_Mu8r<(Ep<E
%"Pk51?\6X$9^icRbjs!.MTD%M%L(($]N<r'D30kP*"9-d=.SHGL+j:9>T0pOdbr%$ZTW7T]$!;E!t/,'<K(Z$lmE_/kl^FrMs)Q-
%dCLVB1\[T<?;%0KV)B$#Z#;e^@Eaf#9#1QX`0pWdmPCV7b*khKXR4JV`A/8[!(]OCA0i!Y!Zp`\P@@Z3E(&'dO&<::/@m=J:ik#D
%H=I\]#1k9<:=/_d8ob2`2,Z+ReW:Ns6#,DA0C]"e+'+YU6(J:#g/Vb*nnU=;Q>G[mTcWmd!nT!r@(EKIEdPZ<H^3)lZ.`m)_I6d[
%:Sf;f&>YQ=KQZe\1^g[_#V-8\m[fhZ+pM^5j0pl/)[RI30VbWX,V^bDgHtH`=7#14,Li>Ta<VZXeI7]aKo6lE6l9r"egj(N8Q'A2
%Xi0qr#R@VZ9966s@:j:H,ci1kGhe,_=Dnmj>EIXH"mRCAZuLLs,7Y>"!&sqD+=,.G%LBFSF!]L[Ajc_R#5_&m61EenhLAaQ+jGLW
%j![A+kD'Hlf\X`N(.&bk"D/f;(<o-:L00CFg%eGRX2[J@1(^i+EL*</0[JIH8C&17Z-mSu1crm^e>,@rF5SnIh@8&m,KNb.535V5
%TbTei^C/2@<RJ-*Y?m-PS10^>cuHF">PY0oK9$f#=3XOt=:li_V(ZEm[t6rCdHZ8d7-M"0'$5ER=r+r3JD.(S;cXW!OD;.-N"5PH
%.8J\c3Kf'(11Zl^&J^M_nEII5_[N=,W7*ij'2cVD"d=8$h]eDb<E3'dYZ!&I,n!k,M,hVbC)1\$Wj>JAI/c"(#o>-r970\m5Rp)"
%i.Tj9Q/85om1tfs<AAP/IVH7pnP.hkM[G=_J],&6IU43[60`_%<_1A*.Z55DN1D0I:mR"SMX(7t"::!cJn:6e`E>nfBP*"YPI,-L
%>:A]C"S7D+1<rM\of0^'RS-NtT!=8N3S+!lW+<)gU`gQZqcT\.^X0D>_)kcTGmq@%OqbQWl[el\:j9n'ILD_nhj+?=OSe`.8f?@!
%QHh2fNfLHXi;g%'oVi+Q';[.^&lB\WPpM]n-e=qiNNe9?OEmu`68H5S%;a^hgiS\;WIkOt3.rObal5-?U<qbY"cI8/_&<04'eudt
%`jg6PGsUc"osXhRU-E,9F?;`k;5>qT2\S,@ok4['0Wp[Y-Ok)E8OD*F*_@c\TG[m?G,rgn'NR+n[ZF?'T%S$[@Ejbr=>gb6McMDh
%1,C;P`*ab2%`SX7:mbKbV2u7XJ"_eln4+N@S+A,Q3,Xh@k9SoCpW`$T3J.5!\j3e]KQ;k7FNZ]N_9TV)A5p)GjmJ`5LhRPj4]Tr8
%2^7>-.lF><=QQ5`D7(1_e6+SLkV]0Q=K4:qip3WXEa#BXBAemap[2V3_L"BWaMHeP"AB)BO\fJMG2TV4!,b,H&p>R!Og_4MX.F=n
%qt9@o6^fo*^he=nQ1(Yr^()aXc@!9?3.^1+O]rBY&dm6'pGj:hmtNYWL?DobWqIGGRj`bq+NS6!6@r=HqrU/PZ!cRtbB.p4a=^27
%Zd'8Ge8#m?p0M;54g\39j`#hWR,,sp5lIe$GcSkJ$HEWo>NL4(>&=q7%^'`#K(GLr2+)8mUPsKOnW88R1j6CS]!;f"E:;6a:'oIL
%aI\Z3N8`^A`kSYi;*4MQT,,=i^+'X\$=dT`rRgekP$;gl2b;"DRNS_PVV]W:gP+@*?]Z5^C`%nlc=+dbR95MGf#.$9n_u9Zra7$L
%)I?e5?:WRff'Joq4bp=G]OGYRiL_11,#NKZA8\hq%cPsCF1DE!ohiCm<M?DKj()V(hmcYfgaKASZYO;Vr$#01%<>^6OT]sndPW&E
%$"pGBo%`SC?9X1>eIgJ^<VBm^ZndE1IPUaTgHfhMo7S>d*1pm<oc=qD)--j4qH>c>@GL.J4,F2a]>"pCofXi:[p:$+3R/*K"DrpR
%#?<&jnk5q_(TZWZSbZennM1l,d+_:67us(F:rROT'mOIrEQuk$0"Hp[XQfCDV8jb88G=iWf?g/0^)d*O>3-AB7KkH?1MT]]i5TFO
%_t+Ie\Tc!_apBpIXrLP7'h1=rL*U,"PE!IX9?03Pq%i2>ljaL!aE_Zp9qjhbN>j$Vh(6L%:!,g6=JS9jW\EZRnt6>4Zj/\+Q)GeG
%rT12nL$rWXpW;ZBf3)1FU%=5*.rgK0MrUqjR$lHS?!jAGm'/I&ST[;4MPD9>ALf`8S[m'C1Q7CC=I`As)HuI(0%O9%=C;B,VUMh0
%5fBop'",'u]:\3oMt`taS_9@.HjQRUSbu&7^aClQ20l5M2rn0*r]'>!\_,j5ZlM`%<1%9,?mUDh]!?q$WZ!PAj7ti<Wd`f)pY.p6
%00@NFI,0dCQP\Lss006.`p]7\hOlO*4jZEBnQG*-:"JM%%0j5O!,YQ1,BD.tQQRVlE=FOi^MK\'6hM]+T>)#Tjm#_HI<@-qBM\BH
%%K1T%/XsM8lLPhQEqWktio_oe:DY<XAT:`,?`\U[Y[#*W?(9QQVi)3ErSadj)stP0kP0:EI1Gi=!nCmI?_JCRq%CYk(Y:(V+2(3(
%l$L4>YeElKh+'+t9Z4uT<(ucG;UnqHd;'IZIJdQ>aF<Jj`=/q&=3^Y5YLg8+.fLPK_/iGhcarTVVEd+dP@93DA.P<NS8AT9XSGI5
%k%7A.6CVVQ9j[22QW:A=CNZU:&E7OHf4.Ml,mS:=NZ$pQo.HK.T=lHXb;l,[Rl\0<JIX]<N<'&2c:SW`6tKX<4d(JB!>*k^LLVF5
%#nL*7WT:@$pWg\J"%B$$82&98AD=JL\;;Y;T^Th@7ZQ:7$4!YN@p-TM]WZXOUUtC8bj^7m``k1G=aUi-g]/j%ZCBeu9Zs41A_m:W
%p7*VYLW+"g-L=4.&hP)g/)e?a<oTqXq^c-up?uc!Ijo"/Lk"cO6%@6959To6mNhfNb@q3;[IYHd:enW1ebC)iqA3Q#329n;Zb15U
%oKiAriInt[`"5@!XXOjE=]B-e)WE?$@X7C6[bf3-eb@^[5OB9f0<WWi^>"(D2R7j%=098BF/g:mA:2ek=56jd0c80lX:0l2<Sosc
%ndiI%Gn-fIafp,[EIYN9!;TFh8@2FDLHh#t<TcDFceUsm(C](WZa$`NI1#oJ!;Z-7a`8#QY,f?V[a_g\'#Mb"HDqRLg7F2oc_+ZJ
%i&eG\(j4RrHYR^aJ]ln)oMtq#oIC/%\"%\F2SYWqG?8/L6$1X=TIuj1PrO)r@1(^2q1SUj=Grt_;&!$8]SQu^X0[W.XQki:HT-:W
%0ELr[ea!&09V9E,W<d^C!NY1=kblmD0P<(mV7:@bea#5\Ii;s5j0Qi^WeD]Xnj0S.fF3s<RE!GhJf4*k0SfE3A&Jl[iF6PLP`Brk
%1_OPVSJcf]EIE+G?GTtalM"^RHCFM.=o<3ik=*EgQ"CGP88$%WL_NhT&B#13fU#U=ha'e/N4cmDFE:KIQV%H2Kc1.dJD^ZHkV`'J
%5bX0M4-XfS2B6WA0W\p.:q?kc$"Hp=M(WA&?q+;'pq1-BPI9Vs7W`&(7Ga,:5bEkDLgZmK%&@]9&a#EP2*6ZCOk0Q60;G_*GT<E(
%=aS!NP\FVV&W2=Bj@ou63nADhi-L.?GYUDi+6UESql_E>@)/VqEBFu'GR"-g!-N'&CXC=>2@sN;KSi(uS;QUuLTCmf;G#0Hp`A@1
%`d9@e@U&`qjSD&;_]t'2E\,>e%m=mS6jcuZT_)-jktSujTlVm\D)>j&k<tnRB"]s\4i)TGncp8^GWMF/GE7<DN7o:r4;K9srYX@5
%Iqo3*.j_k+.`&;7)lXtkQi.\PkoY5H]X5<\j/fMj1ZJUFD'r<`ju+P`"fp(3G6LPfotk"a/6io\+GsN\=3E_=/!XM94`&V%@?4'n
%'!l".4$4%!anfnAG"!n%q+Uh^`o6UVMd9#,!R2BjB?FOS0RrTM5Wi88ZG3.mQpJqq[XB7UW2U#r)SLFpPqN)8n;1-m3a<#W&!nj.
%krbZD2I'.`XeaHr\2JW,Zdt_3?5IVEL-67sVn0Pa5mIcb%OGA4i_#@f"I9\]Tnk*H0Big';pDb'[-3%mnM!UCi8cbYT8-sdk"tBD
%gSXJrI+4n9XZTp*qRfeVWQ0CD<4<7'#T:t.M@810N6L%,">G>]3ZqP+VGWpBZ8$4lp1MM(Th&TbC9%(),tfM2dsV#YliJS9jpT\5
%o)^i`+rru7AZO!/<a?C_l?[9Q4rYJ3dtCGu1]*:l(.G;7U%]/5eS]'F"Hitgl5mmLKrS6Vn5>Da945kUOG<<I%mk5sQ5QoqH@TJM
%<!B(Y&/a$Pb;i:1ga6eC+qJ[ND^&:B7-QFl1.ADs7g:7Y;:HM[EGh2[H#L$ar+$5>fiS<;Ds%;\U>UU5VCF-SO?M[c6PPtOK7F%m
%lC:C&D,T#`bV\u;.?o9JC9k7ME&st^BNetZQn>k:f?RKt3p1iR@/Ag/4;/Rj>^c#g:.*mJ%V+<_l;JhB[XO!'I(9oOp?<eH7q@2g
%(2KM83#Q/UAPWI98*.Z5`r$6Co^gfOKX4+r*Xgp<5o(k/(K"\0!5RGI++B`F71cc"D)b7LA6BTejm1PCW6rJ8Z_6eU'On@<)%i[>
%"5Hs<(k)nA8Bc0'agl"dr$XIlm1^UnhtY+MP(ckr'=s9iMm/A(AD\0ti,=+dP^HA4<GT9.MoP1`[/8*[eOL!uG'8@J\Fb-Q\7e-n
%_`>sB.D*N(8JY6q@b/JZg'p9WR6;)!ki.QB#/!5K`3[F"LLR&&#)9/uOgk.fDg@.P7=3Q/2Zfu9Lr)Gi*cQ(K+c@r8=Q0bLoc[O)
%IR*iK1?><KNm/_Fni9H1@2fW@V+i@JD^[MGBAS$+>L\S(N)X_08Y_he,Zcob9X@#lQpMo]ge?Cm%o#Ze6hD!P6/n;u+2QT?VUfLs
%8kgn#EAn]kRI,eTg_^C,r]Y.72dB*'KfDMqbQU,Qiq_[1q<3Tp8Ss*#<-#3:?>n@V7.h`:qgNKhijeTeQ$;3AU,'%Wq14OfZULq`
%E=dMH1acmAn+2NX*bR]Kl+N'+q<U=K'pE^>he+Y/V-,NoAfF.6#:_IZ9A-uUba%uiSe>B=U&Y:DNiZ*CTg*L^8Rps^DSXM)qEaXr
%-*%G&$JX&\EG#(_'PVep2#;Vgk02$74gkY9&F?;\*dA9nU_Z(mqje=JT@'_UB$&5JDbpb:5kQiJ^@3a>CLMZ'n_]Lf`nQ/dAt^#>
%),nQ0R^[Jo$qi\]Yn6XHFoBF;(ZZ2]4A<&3Pr^S>,>s4hg0"3ila2Lh&hq_9ROMdpm_q!oW55'_E!gj<0Hgec!(r$@:76ncS_0q>
%e.h,g^ef"2n-(O.Q*#rUh0S1_cZ1$t7H!mP!^Wmaj1*V*p>g_Yc'm"b*Xjkoo&1,Ed'P>E]H^%X&EG?[RGU@i94DN+/3ahKqA%MR
%6rp(W4psotc&t4-M2WQSit88kfE@k7CQFe*)3J_p*[P:uWOXpOS'afaaP8GGKL_GG5qFIPXrgJk&>U#:J-OdkU*M2MGYQaC58=_9
%oH?0M#5mFVVG%*YGdDp_CkYEA24kcF#EFSn>FoFI%9q/p[%GhRdm$C>ASX#qr/jOd[.TfO]a_!^K2^?nZ$Z8`jJ&W7"YU+BC6hnV
%84"3`_+h4lm\n6[\VEj(9B`ND=2EZNQ36+-lW'OS0H?mU,]k<>@a/2`dQD#r.Oj4H+Vb^+d0'N\Ztsl`YUr.U6;[eu.&r)k:K4?>
%qOu]h\#'#ilrp$ib:SH`inaAB,MGG(&9%=gS+0?QNf0\q%hRG43*+PGo(H$VW6U"WH>lmn-,>)JIM!2c!D(:$[H2,Aq3_C*V[Tq8
%[g%$5\&9J[$ojWsfN]t.0$5CHE\ZEX9)eV+;k4FX#H+4hoE.4(Crs#--@H>J64h4Xh:c+nQWb+Q452u&jgdgM<Wo-VZF/&[QDd]1
%!63XW$lQXWm3u.9MOajgNW-2Cj#jSfTZ+)$h<eJd";>8QhOUus+0$Ki[8:_R.q"DRK:NP<#@%]Z'3/j(;#?%^M78fAP?@rlnfP2q
%gCr!a(o`s8,Kb6t@W?Z3?@:dY;OpJk6sR)B[2?A/H6,ha9\>;W%>3>)0YkaV&kRm[D?sB250P=/G$0bS#EK3MQA_<)%U`_'Z+c>`
%N[,"KQE[5l;ISsU;/\F_ah)"k61P)a)Ph@u@Bqr[3pPI]lsu3/^s&="*-Ke&qjjaeGoS;Q&P.Y5RAMV<L"W>K(<7ng2k8*u!&*k'
%hI_2L10D\943QDI"`\djJM_<6W`)V;F&CGOqtu\PKUf:7P!2l3AH<*&fFpU1gU+"A3JtVXO52'C#LhZFCbgEB6SPJ^\a&<G&+^E*
%V-:XJa;Q8&m_/-%Js.:PYjIBh-0X)-:daLf/^+M02UNC<dE[SD?9tMTQdBK+pT3&t)phDte]*31*7Vhm"__Ukfd\m@KOET+<WTH2
%<._t"]nHQKRsNku6`R.p>JMaKDOtj.5RXl)&a/*,;Z%S_B-,&BFV`csY(6r.+l#rfs25lWEC^G"],p;Y,H]0;*"GlT75^YUYW&`l
%`h=[N%=?+GVM73oLD3D^W_B*r)Ou:]-JVR#J?[)VS@?0eFP(V?f_d840JNa;qK7Xp`Jc[324NeE7,gHMX*<]N)3UGI<,D0E+?p13
%)e'@2-+;C&@[^`LeVZl'RhNAlX#;dPf)O<4gU35\h=+[BUl"0ARkW%iT:U:4n[WWa'*t3CM>Ls@fEY`M?)U8^$tWOMUM#n)!t,Qh
%#FLGmTM+3]j[l_tORM%<&]AK)a2@Sh`l`sb)X!f2SCGu14P)TQo6<R\<7U@Jb'Z]JhOpOcVa9Y?63248'oXhSCUgOD0>f\h*p[&)
%AV7K@IM]_k-nQE@R"DbW9%g^76#n.'&&$#qZN1JN6WD/o;^P7N?iUaXI>6N#J@^MPLn@$;"%b(H#D`oNVmW!IKlt0<VP]AHUSp%<
%</j'Ie*!dNd\iu;%u.b)GSJa<P][*SkAL!HJ14QYZ8YT@LVuXYeE_u1][N7@gc@Hc!Ki;.Y,M54i-")*VtplIU"4[j.20u7=bqA&
%(6_?h;CI:[8RO<9K&p"0.d1JAKtc9'+j,hY;@4ms<#.-d$J-)F14@H>QV]/F7M?ksX:*P'`jNSk2=p2t+B!((8h2gk%N]\bl=nZ(
%5iSM8s0JQh-lr4:@B$AH0T/:f+B=@2&.)#R5;+G\]Aiclka5\4ha?kUj'["Y2Sd8\$!dqq:fPo2@+^T>#No?dKUbL=Qp(g=P$+jK
%85&N>#+2?n@P.g(hG@ojN[r8\9'd2>0Lc]U)3FnP(Z(A_?`[TFN&ik`M^@UUpp_,mrRK_jS:YW$_T93RlTM\kM;HT2&u@=L1:'`<
%5=SPI\tPca*@mpd>B+3O$F%ts1dML-o0lhG2GLT3&EpdTIBZ)GCPuU6"3.j/@VNbUO_<!$5)ScA/2n%u[O'R(A3@?3O)KdL\D%X5
%pLO(N"imEE$H[XiH6dhn)-;q16mmu=8Bh-$ZO8[N&QNjGK#`n4]MK5h$JZN@2NCGbiG;l4H+Gh#]/8=a?>,W!/)d%Z5J.IG,)Wi)
%Xgac$GHsE7!aEU:O$oSY@,JOK4%uSqk.);%!\e<19`Y3RO=CHoF?e1!FaO7DYo<Uj/9W^$Y&RJg)CJ)<%r6A&ik9S7M@`VcmuB@p
%IQHmZRY"CcW:G-4`+*;5<TLia"W'G_%i3F6P:TCpArjM7+?<*Eb")\l7Oh@'&6rZ$3k_:"_lF6.Oj@pt)%H%A`[E=>$$-Wp4O8A-
%1[9.9nQ<:BjP!<X-^F4\h-5eopCRLs]cG2pa#7Pl/Hoo2Cs^6^:oH.b$1K'GhKOiUh*=s&Zb#O0'j1TG=#KSU=V/Zo5r9@pIrhig
%$U*0SMqFdE9Fc:r12nej<GUV$:(d[#8Ks,_Z_XGY0]`9<,p66f(j^["4;:bA=.9)$*((F`L%mh)^:YJeN_f/AI!F-`5]E,8d#tY2
%!Q1Uu6NN8no>?SD;WjSbWVC\M%4?aH^cfnZ"l^';am+I3L+aFG0G"a?'?LaE&id`%Ku-VK-"C42!%Y_U`R%r/BjL\@n?sUbV59d6
%eD"5Ga2ffh0s'1>=Gu%?)`$^$Mc=N]UniTUUo%P?b#!XFQeVC"Y>p7SBt<U>[^%YjTJ;fr03Z#>)P`QU?uA(=8Xa@ubm\\:[Sl8\
%N^k$l'5B^h7SOc4*UEms9=3MLThIEnm8=4tfNBc7>\=hNI`Lh'9!kKn6p@66&3W`Yrh41Rr\1]g@uiI.T\HbH8!ukodh>C#!5(H+
%J_R2qOZi:CXV7i@LV<02IF@Mc!+r6H\p2Y(jrr<dEGe6m^+^-ff9"72_l.mYjpj`0WRR3$CJtL+]EOG:CSjoof`6j8*spD=$P`:s
%JO!Tg!,6-8L=[UC$V>2^d4#-\e@ZOYK?*Uq;J/jtJ8:LBD"oHtJL<Brf"['l*X'mj,d_IQ-Fa^@g*[_d$pE22/3pt2L/m)Mm>7'$
%q6+@U=bBPNBEMs;GtXl,UG6L_Y`G<ujm/T.O;DKf_P#=O76&WQbGW8Sd/03ZWikPU[_O*M>h`,l;p,N-:3&^S<1UL*7B<6c2G9ZY
%qGtka5$DcDNZ&Wl:Jb1m[E"SLP;LlpiR]@?FQZh37$FS@eqSUh;ft%<Wk^7n;O'HR\lLTt$)f`7m@F?C6SZ\]EJ#hNPd/!gNq>Gh
%&T3((bAsq`P8Rr'5`3h4lBHN0IZoFfN=gaJjVb2Nq\8KB7$=cj=\-&OHS\PmRtSmm&LkejJ6D(<M,B2jW:n/;(sF*+UtUA6X8OG5
%SM5n[Ni!(50n?qcS=uf!5r_H[\#HhNT4*1W$h2*Q\^,mSehGtC\lI5'#RhJ!aR>\]R`E.?mTY*8aO02E7,s0Q`T<"ON.JRT\`>7<
%NA!co"tCWl\F/nOW@NEf]P7$;-t\@ffE$X_)acl\[Sq(pXMWU;i'>&/[9Y"aNY+Di,r6cl(mftURQ2,q3c!)u3hhBYOU2n+h9N-$
%]3@Z6CatCol$sPEWrWh#:O?L-_]ObM4E^:BYG4/[4kCH!j(A.=3no'JnBnYk!b\O=gigp0,Dn\)ltfbIY*IMOq]52]`de!Te,T07
%rpTk)lKQdTrO[RRqrd-,^&I'lr4i7@5JGZIs7DB\4<l>R=EW&H1S7EWf\2jpLaf;?r/QY)EjToUg&d<.mZ,fMmcF%A)C%k3YuQ0+
%^G2=_c3gjGYB6rg(!!MeV7O)81q@![A`n4i/*k%SVAk5RjS$Oq-$'OTR2Rq_^3,jA2^0`Xe0[YgT*#BB`Zs"PIDAgCmY?29.W.Z]
%D<NEqVLX_WmrIg%J"qUZ@PPsU(1?)Mq+.(DIaqDY)l9S:<uUO"J<msm<#?=IPWe#;2;)%\WmSZCG.D=\5\3bUc(a#!9K+Minm1E$
%?]Mhj$A7Bc<Ngg\bGYTqs-2XWX9I+JE@N$8BQlJm1EJ<e`PP\,1:IjCJPlVuZHg)Hpr=6S#B;4e.K1??24Q\t+tW#d[3>([EnU1d
%W6H[P7"fDX0JIhsaR5ue,HTctV,M<q+o_0GCSh;aajr'Bb1N@?=hCBrQs9923FTY?*?#VbPRD?,paQqD.<#u7)=.Phrh3&5io0Ru
%A-,NM"VYbi9ZPpc!J".0bHW#@H&@sE^G0:m(2iA<-LO\"m8Wd8.a?!kR<)3tNN?riEH?iSSV#AB5<"e79.N>C0?\P-*/^@bEtI'Z
%gD2'toc-XVq_^`gn_1_DWDI'`glu"NI"*D_URp6=[/,%7#_3\!^0I#\Y?AP:B+(&;]4)NOBUrA@,:&%g*@bmRQnYM+)_*WA#:hUd
%5Rg\an$f[[kF^:)cb84VMYCbj)!\5Q3,6#rg60k6OB0g(H.-n0#UhCq;6&BfB!\6Us4>I%)\mCITRk;cHPQb%X8fJ?o`5jaimM&%
%mQL=GaXVV]2Uc7&#of/7X0K]*!4@=XKIK.KFsjU,QsIYU(%_7^&1eUuQ@WS$7H]Zn.hs^?(]l>e(3gfAWW08?pCXu!/E.>b]jO4?
%m\u/pT=Q^k+Y,AQ!OC8DW[j?@-(!cF5IC<!dYo$"V"?Cm6Hn2%/AZ3QL8nQtW0PK07bq6]i?uK*?C'tB@(tU,;5.GfS8#F,A)'SS
%(nR5TRk?X!J1G8*^UgjM)$G+*c=S.Gc\U><+Y^geBd*VCIhd4N1l+^mY>k:U;qY9]()WrZJobi(&b?Bs[^V+_n;=s:;"</7Pt,tt
%Ml7#kA4IXBle?]5B_>*u]dF_+knSpFPGQ#U0n:r3TlAH(oX"_X9_+ZDK`o6u/VOL-j(8hC)^\WQp#2R&_2KrqL2eGN=da;,=Z0/V
%:I[LTq]8\nG]Yrt.o]k*9,sV-2-22J)VMUs&PAA>$Ad`QjGJr[`6IURc;BkDe!c0=&6+%9OkPfRa*:mbo[eDRmi#!c!+C'S;Tm"7
%(]tHBCOs)'0bq%S_#t\d=*RD^/)[QuCo"cS7fcdQW\'5'cC1<TiFU^/G8UiN;\=7>-fc>H4tmJ02RQs@ZSI\sP\gI86I'R'=f%_l
%@.qmI[-)&9PH5pVL:12pQauqi!q8E[#"VF>RW$)XFGD0n>Aou2Wi.ulA?t=dSst/[E'A[aS@NpYa7u2O40?DHODbWlmrq-VYnaE<
%p5V)Sphu_A81DaV"KoTX\Zf#f=YCU(kqN7;AmNN7V9jdU@1_7ZW*AMugloJFW:)@@J,4r^an'iIjB8+Yl[@$$;mhf441f6h_F%Q@
%E0Zp@AJ[JaV%16>rh"XB^pQB?NPf1-9GhhmL9fG,&<R>Jbn,OOF-p'"GC3_"'.P')M)enq,(O#d-&r-M'1dg3LCU99'A!A<j633m
%mtJ<^8>C1<$kfimR>?c>OeD;_I`m\\$k.-hY<Zr\E$giA+&r>/PD#-7_4t7es8//,s1eKohi(S6j8QF`^hS=bnNS\Is72$:5;,%S
%No7+uR/c\bSa;E)Im<r/++s9j:Yn85LSt1C?es1\s3:>*s1!0frZ;+7ci<j@jbFA*&9S^KU_hlkV'DL<>r_c`8GFAY_llHs+aB(m
%Mjo83O9nYpo9Nf2/4%^F0N48TY663cAf@Y::g]X$fOORdU+45$!aCYRH,8K_p\n(DJ'd=@1&LfdAtL/.T?f%%J#tg,e'%3L:;D\N
%fP.L<AqD_8@;(76rGuQ<1gp'@E3e+_O!YV%UUF$<gO5-crh8*0F=ZkS3Sbgt<OKHU_c`uI"J=(VM<CX47HX8Sqr]%?j)%Z`ON7RX
%`;:t"@L2`t5@.2GVOm$;]NTV2OhR7'Srn0\D*&M:=?t,@MM#b9"=,f#)*2\2PLq(1q_F8)6_2^oZX:*YB5)V(00/c]Fl7BoAbS^a
%).>SJ_Wsg1/g:oZ=[0l^a'g_1^;;'!YJjruIClsM7*S`(2l(>rB;a2ihY%"nl,;RV'E*Wjs!U>.ID\!h.ZF]`+<p<C,i\eG`u'k+
%?<X2ZO.su[d>8Zg1:#4<ARgKd8C"q%aCQNO;5,>PXKZ+%H-*L*HdUAC9l@JHnMl(]ihsjU^tKMgOE3Qo*@o%h,V2iiAQ@Y4pbmA`
%kO.tV[MW:)BrKGAUI\ns.NOhQ"c)CmZ2pMCR]"%T=5.S%1<(:c'?2/X#:/n-5+e24H+fBBo*j_HVb4C=.E/;A*`uZCdGNH5d[34V
%?l<R<CPVbCX'^>,#!JIhla,ZVW8I%!$g[\-EAq4l.$E@q4rZAQYUrE%BfdO[dn0CGM8=:6!.8_2o^5FoZ_G81-5B#9(t&+'nkE<!
%T6h?I<$X33%O;jT,U'05(FDb&l5>.Do`d=SKu3EJNO.^O:)s+>!6c@LA:X>=4DL&^Yf;K<nKM^9`8*C\INfgr.7;5^,m-U^Lt%'_
%DF#!C$&FDB#GlW23>[JOcBX4^"pA=&`EN',q'e(t$$Ck%I&OqfiU<ZhYp'Mf8JMue6S)VH;9$k]68#4=MA^sCijo=2*_i@DBg\g#
%-PCGS.r#kh]5g.OSeNs5O\pbn1-%WA,/E]`8SNS-Yn2Tr*Fg3XVm)$\9"`20Hr\K\9?2i=<_QjJ+QSH4>Y"G?!+Khe:^P$G!P]!Z
%CQMHQ@PAFiGg9["c%[!Q>s+#_V_*R:^.:E(WgSPIo7sDgXE\=8M-:HDe[iI`^,u3D9Hj*,@:B9\Q=E$i"%gm](b@ijp%jVt8gao%
%TFO]XWJ7S2)c?_I.Zf%J5H7?+>tEja=+B2Ha`>EVdN:rU,.3"hi:"Jq@KEcoYdn-eiq:h'0=t,%8-Q^aQbXi.Of]30ORdq2I`-gm
%$jGm98/ei5OEd9?58K>!>'OB&/>Rp)o*nia'KT2A$/A1AM)nbbMQ-mDZ2RXa+Wjr2jDTtULeU7E%Q2<ZNZOZOZ'Gm^-LkDSTo*;D
%FG7U7.G40[ZWWMYAO1l%J`BG?0aOQa<XD#fGj89bfQhKNFN/21TW5>"A>?#p=W$n%fC*[iP*-(uMLn&qWSsRPS%oB)_("RR?rEC,
%(rOg3Y\uc34Q+qiA7aJ&&:L)Qc]$."$`/F>YT5EKAul#I>_l1?5GCr(KMXdi'?K%,f^F@O_!=9GodqVN*McB!!K]?7Fn*q:$t&]h
%mUjt9`ADdNc9X0qW]W\^d\;>>)9k2ooEp5lN(j/N9^#4ea+/==;W]2;b*nS''U9sS3e@op\mVA&$CF_EmV6*O;4?$8^aMh::'A_&
%Q0H,ZkGF9Eb;`A?=f;6+E$q<oLdY\=J5`E$%/?X7%D;s7lm\$]9*&R35Y-J@>IL69,$54JF/LM+atch07R/M"*\prF!s_",JXb#?
%.mbCmlkWRH:P"@lP";Zq!`BI?MK,LmlP;JdNC>(Bc[bm.HU%(ADl21I8BY`H-mo&!/S+<)fBdL=;BEXh?lpe&6_D7=iR&//_[J's
%P#tV?0-6A7i?2:i-tpVsF.bOnCleo.)G_A:F2l'Ei3[H+Vu]*\Xo\L(@ZP#]@l48fdr,ME;"BDBM']+Qo%H#3X1_W_oW,Z=s0h9d
%]kYrngd3QYk\LG25`*(N!SH(mKrT>!5\U578Q+er"NOn&,uXP.mn?j(<#7QVH,c*L.ieD.3kfl]kYOcQ4CJ@If0k#%6jup!2If;2
%,:W5=5brfB&?Mg8FZd3CbiT#Oe!^PYSHs#jH+\(P[OqC#9V[:5-73l/7W"rk(.B\JC%G"S[\mZ%Qf/'o+S5*`c75iNq=Ug5e"ldS
%F3P7YZpB-H<Z<EoB0PX-;PgH2c*;IR]pZKup"2V;>-PKAb>FVTM1PEr(rg+8L(mPsFI\;j'+cTL-*^\h*@1FO+Ac^*?geGA>a[ff
%eLgpS)]1JJA%GuX+`n[o\_["=ird<*jasV4((\pWj'`gkS1[9Bk,34sAN^B*2en(;QZARIWeuoGD\^*3,:e_<T=_a#aBe;5ZRtG)
%0@Sl(aJ]S60Q$"o;)/B90:=OI2'nZ3``^P\7t'8Qe6sY1(9Pk9m$=%n7D(6C^0t4(nGr/+8ss"RpG6;+N&OC1A8+JYWgPMrQo,`k
%DYegP$X4a9b$ma18l_So0;U'q9G8-7A_$--)Z)E?mSEVu8*9i\IostkTIsl*d$O>fkf]B$[!i&KT>g5rk9'(E<^?#Df)Y0@<^H)E
%f4!5-Q2c?fk6%T0C1S89f>]<E."T4#@ET]Eh'#Slp:-!16mgPHU-Het!Vse].,pXmbSdhD&BBWV=Z-&IZhF!7-#2E2(2nBdqM`*N
%O/k&dHj2%VY^L9YELW?H&D;!c:X`$h!kh"V)!CE##]YUI5=D6`GZ\4(S!`+`1u_K"NkVT`rS^QEM&HF'9Xgd,4>+7[)%TG7'l8Xr
%kA.#16<s^IXXl@2E\s"mdGpF/G?%Raa<$[1TPh9F=a@U"/I=h6Y+XoGZSR")p]#"abhs#(>G*P>5[\d*h389)L^[ei9lkgmY%Fs.
%_2;"F:^[>q60c,O>?60/k*i"&J<Z8Q]ZgQY8k_^Bn>QOZE5uBRSJXF*Up59H8-.SB4UIjW\,D>EoUN)\=aMXKMosABK*)I!]MlU=
%<k/Fo!"3P'I'\\V14WbNGgV>Z.P!i09.`?p-R#H%`%@rM<I7iliQI_;,B71R4T2G?LEZIhs763i\,UM"g#/udAG2H!,Lu*3[B%LP
%fGd=u&LjDq.SX!9"Xj@4Dn(_tkkAad'NRMeE=9&*,;I#M.U*Vq1NnH!i%9";nu007DYZjM#jVn(\.W;,hh'4:l5:AK0!Ddo\*;g8
%:)4L>VQ:_<]=fj/[ms4":s"9N^7PY]\4nn-^g5XrofS4@ZsXET7@X][a\.mMndIB[]t@rH^"cElZg4K_D%2F+f[l2pe6N/8jgseX
%q+-<8ft.>h&tF.fl3&'L*m+11H5tus4$Qu&VSHddH+%GGG1"gn;mUCKjIZhOa`r[3eM7sDDA:-A<4*pZ#6T60c!#qpEg"9GOm=iu
%_JkQ7#c++\&."t98F-3):VXhEF1,ch4^(&jD^LR'ilu&Vc;+fhT9l'42N6^TDXE3K#bG]%<RennE3>C&BdK-ITG75t$IqNuQe&X2
%^2<Tp7I\74l[<r=4Z.ElK2iaSU=)F\<f0fq,i9sUO7$ZR':<Z+LOc);OkTE&Ar"]@gmT1$BG'cK_;k-MF,S:(G@a-&YXJa%<1?<f
%e.#ofn-;*T$%[1,Q',>VG/p==R:/"VQk(lPjn:EZ``ij:6`;E2XjCY^]OTI%>HkW/UH,&I:TrdV^m0m-eeo#"'ED$'2+h]Sh2p,S
%8Sq3NLu"SHh'6k?EtNMGF'+j+C(UnGL7@(tT?M5/Rl"sP&n3P0J\@>2oDk!'f+B&qP2,ETKrmXR%$!u_gX!GZ%*q.6b'Hq!@sm%k
%3dDt%mSg!o]A(#t\i1dR]7ebcC@gh#J:D@.'_DI]*A#`S:/A>kX/gDdMIhYH+tgXT40@4GZ1=77nku'^iPBp%-.JJR4htqFDS#IJ
%gFV0nAUkXS(U`]m'@qC(ir5QL)S>6/LtA9M?rWJmh3<V^#,/P4ITi8rhqg>iIc/92cVL>6atU;`U5nB+)Xl:XnqEa*[g+e7L1o]$
%YVtW./HC">Lp\GD4[/OEl4Bo%(8CqL"I():!Oi$<a%4?]p):O_\J`1>/8bP;;hUc*8!MnpDZrsE$-`Y)8>BP2!t^9\!fN=e1AIe`
%_=(dbGP43lqUDP],9IcE$8.4ioYft_#,/H'Qu#`ubDglP,ppIIQ@rM(@DiXG)167oBo?O>9X;@\.On\67VM!Ca5j1:,ha=@R#1)E
%chc-'OVtfNc[lktQ/mLR"%&!rHc8ke2XS&BQcgQCQn.<%i!t=hE+<I6lKQ9Kl9VG;7M/H+/A0l_&?8D0Rqe5r#<asm-)VU%hKG<`
%FpVdb^ED)j-U:+a5EH4S7_r,nOHB1t>1Do07.2;EpX:OiU6)Lo#`+4#U9SGn-&]V@=%WF]F_0MsS<=%bV8e+==s[j4$>Q6G[5H62
%,p5>$]E>^4'8nnTc+H_$<65;5"[,FNlKp/p#kP_=V\E?Vc*fqJhOiEk=6k/3gR<V@bB1HT3cQfiqAcLBGKgT4N\]q8C1:#R\Jh<4
%V3B9hFtC!=/;a_<$tr9;MEB/.T_WZZk.nAbIfR>#X]Cnm_U3G%J;l1=@[U%fGohK9Q#q-'j5<F3M3'@61@MjV:':IKkdGJ0_7%Dj
%]>S_<QrmHQK=?s"+j_+Z>8Ff0&:t0#_N]Y7B#SdeP>(W<e0F5YUsNc<0`\jOn\mU=FilQ#[2giDLks.4Y>"%6=9KiVP\.iAL<]!l
%7`LDM)j*3!H3pqpOK:Q)rh[=4M4kLi@8nEbWBp'F6`L_PJPKJ2c%NA5.+FIVSu\a=[V.V<(^MW'<FV0VFrgTH\/?q,8UnV($L])G
%*4Y:0<!ImChoQE]C7NV?R/+?8K5&4@G#G]N1bb<I_KFRbM`*-nM?'!e!^!Foos*)l:1cJ#R5]1uOUa#oj8;.\s.;`SG^ranF.JE(
%L&-9g26Q;iD:d^BbcFlYnZ<7cSMGd7P"]%hDcs6u=n!JR\K8f42\)4DhGh#]qA9cQ1pp*:$Mo?Fc)b`T$Z)G7?VPA#7ppBmR=I-<
%1Af<C$=j)4>aF*BP>l([f4qUQ/ao@.[tR*h<![I4Oo)#u-,HgU<6e/5Wsp9QgVQ25RRNu+Ro).feY(*eZ_CEj0c4QpOBj_B0jRj+
%H#H12)XY*]2*[N%/)YWsMPJP0e!c7BFc.,5Ft+XI7OR(q\B7r>A8nl=]&4hMM9AO2K!Q<teQLa'6V1?;(MDS6YZRM5K73'cI:?&[
%E.ftV%96!TdoOl4&a`G%Qd'66q%2eV=BAA4pXQ2t'#I`-Po6/\7ST+l)t?@3aO<qS"j[?`O*aB79S9-Eo_+k)"Qt@]"BooH&\>IG
%JmraZUDm[0L&$'9h3kb(HfGrH%_SDLc!I0W;C,EVE3FZc7D&"-a1Io,q]:K(N*u7<F3YE*b4T&IqbGoE#9<&RKPN.Xb:-^j5CNtf
%GB9Xt70,+*N#bNU%;K].IobRcMP"(Y53PZ%#CX_nDu[$__"dkC#_Tc0`0-ZknBhbhLFs!RDB-kK4ThbqcSn-3(R-GYOblO8W',d\
%6W-<T>22qp4>@IYgaq83"s=/3!cF=c>J,j<E2IDfF/E66k>N\244Z.(hYXTpGD6lmQVZ\]5Ft'Q$AK.9/m-VD@dL0d-l4<\]1QH(
%'mML/e@B:\(%723Q2u/E$-^*hc7aN23qN&X3FrMFJpC,JDBsl`^Ne/m46$E-^)#?)X80dg=KR*Fqe6MHS'J(=Ck!NWpt<&?#HQCj
%!#Fl$r`:Torm,AcD#QT&Jfd$_=XG0P94Djq*le>H`-`eX(<&dNmd?/->e_iEIE)fk&Hr;K7U#G>XfQ"jD9$J(J!ajQ.ku6da6KDT
%LM^T:%:rNr_pX^ELBZt1\M^s9!6DZ`G.XM;%7r7Hqb.PsnlEB,#;423Is=JB7GWB6nIMOD/mJ<%*oXtkUFZXQ0T:=gTb]cQZVe1I
%f$mt5rsU1nG5c+I#8UNm't"ipG,&A]VuSM+N:gHaC[/'VJ%gXNIJR6+"0(I"SqI`AP*$>IBtFR,ZkU'`VcJ'?gUq'uKaq+Y*N?C$
%S]PA(NY9[9*#__0$+;_;XB$@K*kfJNiQB5<=(P/pS7GGN5>[9nQBMYR%^`.-Fu8hiOCD5P.5>5pRN:SD<4EKLM4EaeW0X38(e^OJ
%-H,OZ0P5j%1`.ZX0p])E78OjWe,\GH\m!%a[Thg(a0I"'O4"FBMplpdOjqX)ee*8RQXumgf%K_XnJ"a*^s4%=mL"gtC5ZIAB!\.9
%IoT[C9`\)pU_^R2FquHL/gmmF:BZTNiX<&%e```!E-)IK+tsjj<d9`P.1FHlC(][E1Q?WA#g7$=8PmD7&MA0%L(kRUGcs;_@_,bZ
%ro^UOoqB\h7YsTRh:qkd-4'p>RF["O6fsT+..Q;!Cu5@a>)MqA_IVhX%PIjf!i2X27"f>WARd8XPuA?YZlp^.]l6$C3OaNeVhE.H
%JcZ0?9Tk='(n/e_IUeSYX9Ltl[al1Z)>6ACBM&E%Fid>@-6uTR0BBb1FU3JL]jNic`_'W?\>%Lq6>s]][@9Da+j3J#qHUeQ,ei'5
%*VAk(,9Sg5c<)E%k`-*D)-'aQ%SRhG37\An5EIA\[ki4I5&uI!5\*9k0N^7E7h:D/DqUWPGpAGIWR.3P+_d+\$rWU4V_R4MqTF$\
%(i@H\`:5]U@HL<#%qh1ujLVu^6+'.QN=uJ11GL24Q'18?,>'85e9jqOP'u)+/c-UoBJFWf7upf'ZJR4(1*L`=S'@p*k%?/M-o7MG
%Oq->15TYO*MC$p<b]tOH9C;@_[\l;=W_mW821^PAd)+-2ga^S>D.2!=8N7T?1*-U^[=Fe=DU\ZU$!D?.7KuW)npmJ:lspD<7M;U!
%(',k9D4kHk'Rd9L"<\"I->b3PYGRj&.jE'-:)G3=3Bd)BBZ7k:3XA;#+UIb\3D"ed'2TfaJK]lMDZP9.D(kT<F(QB8T'.@n.;E*\
%"C--aNY75F-m6if<sKK]Qkh=nEjSMI6=OWeM_o<j*CHHp9btTN]\=ktT+cu9A#=5g$9qHV)P[-/fR((BgU8[om+n=a=>'_Si'Y7d
%*fHjBPCB`$_SR-udKj><9/="&o_7bc/_ZS%N\P/6[9)Kq[J)\Z*pP<1T%QWK?Wr@'_.uka"eZC)/WItuX$;C7^\3i(?'$NgSE8n2
%;)G]p<c7e;OVHm5MF8U4=ko8Bs*2cd@,3t>*lI,i)E#i6l`?h+JbPa[@H>r7'dZiRHu2o/PteJos7[7ZkEFFgI8]HV?&Hh7WdfBi
%N+"-Uqq'2f@e2Phb4ST1gh1d0Xeu340t,s;ki2\Y/EYQ*i]"p#bC*CnE6'll>Lt@Q@u?,cdAiXV^!2GoTqLa*Sm;ZIpaoi*bC*+f
%%N>KO-IP2WN1o5p#X2JX%NI)"p>9!jZ*tUY.fnqCVW)\pmZRhX#reTT_gu'N#Hl'c_PeU1j1R=QKbB8)3`JH-JM7R70DA$I\FjU7
%+E$c%ZJN1ff//`WrWTrP7)_]>IWMm/gh2V^X]M3I'fC\_'4C`Lh+d4qC%9rQV/i3Y!2QM]0cQ!9St<OMKP&<RQeks:/<fVtp[C=j
%Lu_\'03QZ"*344>7qu#+4-XIIUeY_NY%l3M4.Enq#bf(#i6\NID3O.a9K>C)Zs`,cQ2-_hSLNX0KlQ$B/gD?`HqUkT&*::D@XfZG
%[q;k\SCXer1YX3CjY$'9RKi47%2VeaT`"6+nq=HH2$XppL=-HtJSgujABaV3>_h5Ulg/VMMaj:RrcVH4O0g;,C7;r3Y*UcuBk:"\
%H1r;^Fo-qkM0q-4Vp9arb*CaMqO3%S0pbo>>m'['nWa%E]sI@[(Yg6YZN0LEX[gsUUt_,*)so4`W*)9SG%A*bF_8=PJ7HN^C+ma.
%E-(gM/5]dcf>W@n%I8;22!9G,USk4p_n3V;>;MEolu_"t+HYC%<O#?#s/f@b@:[eK2Lh3pPh3?%DmR$3Tm3]CH5r:;d8IMNCVd,W
%iU\ldao)WuK-Yq#07J8X<:84=0\9oMnY's?)dj"0UQF[D!.MJf2E3C[mjqcHAMX/13qa\J05nZ30B7Q7Nlm5!il(%)E(<gJX!"t/
%ZKR$]PrgL`R5Cl]goX"Y-:`XRXW?94jOQ:14k?qdld!Ys.@\t62$9</ClQj[I)6<p;K1isg;pWPr"]fOFqA'H8SO2p-pS%.NX[k8
%V(mncQJ+d,4=%XBaYt1BpaX^$k1?&8>P1NjVIZW>E]!OO@o;Sf7LdpF[m.X2luRK.!e4lM1b"Uu)G`L(&_/d[:[%:Kmt;*oFOIZ&
%n$#^scQ18<o`d`E3EE`WmS:o.62-c5`!U[WAGdkY5.&2OBOkBO'[H*TWMkI^Q$n>C-;,4%rpNm*FspmQ5ORX9$5qKskf.F&<TG,0
%\&&_5eXpOo%1I`UU9\<.f972h25Yg&3t]P_\a5#_YG;2Rm;BVgO:&sELS@A(2:eI-]3-R$0tf6R"9QTldAh5Zf9"m4/,ZX\_G\s-
%[h1VcpcLQpMl@4U.+7*=2p/`,?i5PH1M%SaQ=gUBKfJ`0E?e?LbES"IafHF^%(AZmg8NC^*33.LW^_+>;`,U!=Mr.;^1Qs*&s\s?
%8EO-kWBr)>K9YYqNj"d,h_*f9V?H&V@06$:%e]cpIG#3sO:rua^;kfF/W)V"nohiLo4HQEHngT$LP-sV:m@jM$(,`g"cd"/0X(2<
%hACehD-9kif[76`+^l8I/srZDUV_[%E)FU+bDO%_a9'R[R.aoHrS*H)T6e$EHi<FE>6Up.W\Y,:;J5'2]7blM:%(HoU&#3l`GeI(
%AWs@9G=F:o\;>EGp"gOK%p@K#L9KTo2mIeCW8Mg]rY7$dTDu$)l>%Vb'T&,ZDbrpHeoN>3`EF9.Gl5V4r,3.3n+QUM@^kA5B-;SH
%VOAr75Mck\)pm>N\Nf/Vq97>O9IW]l_t6m`W5?g:p0#q+l7<(=`\E1X:!3?R5A\B,2!%]!pW&Ognsli,\^$CV-V(:tN]2i(G<;CT
%?`[,,X)DX5nL_W4Z$!pj)[uqPZ,>*D?&Q?-AieH1os3/_++;8qHrj8>a.Z3k7AEZ6[2Hr%R`kP9:$W[90tgpIVsH=(]fQI^rb8D3
%6`.AaC3\:DJ%_=La;mkjfRdkr;#<K8JJ<[frVp2@7G%.F)G.Gu1U,"?P30Y@o!aO^qu5esACf-*%`Sf<NRo*525)suj$m[5hZ,b9
%?(6BG)]F_`M\bm)Y,9N2IBL_6.U.cHSt<JOR@6O/-=3&h0q3Ip;[p/:Zb_oPmd["PEZ-hR9NlCg>jP/A5?NYiCgZP\Lkm,8dm0qG
%@R`?gRni8hkX3@OLJ@t+^/\;L^g"+!/a-0WLi0mZp'^:oR#rF06;"=tE3h'Vkh@&^l+HS8=/!_Q2C\i7s4^PA?Ho*IX:Hhl)5e#K
%(]F'uT\gg@nl`Nh"'NslJ;qstaj:C)RT^@O0B-LZjKC%jbXZ4C%'g8/1/!9>K'5d.qogN%&8,*Kc,(Pr#Q_b@@hQF-6t9pKh)Lb8
%)>F2MomoWFOG`PPiGX^rT;HLZ>PMF<f7O).#I<(8G8h*L;)AVqF366Q;*fkKM3;In<*TM>!iC+FQQXENPoIG!9K373%94>_4?FM'
%X@.tI$m_/%-l/8&m2Cs'2%%%81RTTEm"j$;PF0q&3j,T%*SI<@,E@SGg%eGWV)&h6fh%63oP6>J,A?^ijM8a>_,gWu`LsDk,91l?
%l31_L%nA0,2Z]eGWWlu<F:?e.=qLs_8/63]oidf_=VKEq##Im43lu2'mfW5cMn[Pj$+*r2_3_>r@m@BL(?hdL1rAB4o*X-Ya.Sf]
%=FY\cB'Gam%&9SW0No=LU_GW>39q.F14r#K?SsZ%@@Y%[1>&s%KQ.rYdJ5UQcLm7\6gh)qZEAc9=Bm?X"F'?P?*s<D1lM>$j8S9g
%Fr"g$EnEj-1<+$=kKiAM2XHIfLa%X7TRCn(A<]l/!HiMfXRhp;W^%iC8h7_4_#aHhr2^JY!hI!k/PI(SeiOG\5rUV6H@fT9hutrK
%)j.Q$6:jT$hf<nJWlT%Eba^^A<mT$/(Ti*<@Ea\Wc/Y2!8EQCc(tWAl9Op!>,1aNRLc&UeU.CJP8*CB13@c&3;u!SK1"E;pLq\Wn
%7Q6=:m`0,?renU4@8VKh$lCn_LIkU)F8`7nWPA4fE.)6((f!&e*$nD^o5?ABGZOo!=;^@J5kR*Z.jglkRRdP!E'rXs)'NR4:fK=n
%22!Dt\t^/Xd^=#u6<rF<Vs@<eg^J5_=FN&00aqUph)9?Y9Ng@&i7:2<_A%aG%Jde:%hOk@0am>'0WjA@Yo(WUj1A`?YA!"cNo':L
%OtLbI93CSe0lsXZ!*['-L@_;*cnlOZVgr?f/0hF_0_OC>N?-t<R&9+$_1^LX^F`4%"p%j@4X3O*c*Ah..NFq)@\NaV`4tbB1[dts
%g/AZ[c"Nn?2$oeM2*e3CLi<krE]!94e!.HI*iB;0BJ!LWOKdA7>]D)j8:L02`T)HXEb\-K1HtWK)u&PpVK%JXRL.)R/DuKl\IhK`
%!!*%*qKY'\hs*N)pJLtO1!;mXd"!iZe"E'?":\M@1`;Z#XS?LDK@jhRH4lUeF\(+2l8unj#8DD`_(*XV/2%^eZrR!#NnSro1t6LB
%`0nO\>_-h2<Yg<:3<P?S-;@oDn\[F'S6;mN`t>QSU,Yq&k9KMkZ0,'Z'3m#3Sopf0X*D>!.G>Ak;8R_,"rs9nHC0"Q3j[goBC%\^
%*6<HJSVl7jR%I\]"(D8eE?uq*a@rE?:J6_'M9,l?lj2kuRB/=Td^EKL:UAE6R)6,>5:#"1P')6+?VbAGXkA?-$EI(!6?fKV:"Z5'
%fX7_7_=4CJ*Q+5=e$.k=Ka2[TMO5ce'UgJ-6YN$Sdi[<h)Oq_kS)1fr&W:&o(#E_TA9o`j!4%0`Bnkn=hJ'C0jfoKVZncEnRQ1+Z
%k/:"/(`m_c#ktDF%rO5KU@'(#P#>#dq-qnISS`>p)Tmr^:cfRp*"8iO!jD6?X';&j]*nT"04p25'S&d,k`poE8eOKjJEV`Ui\nf%
%=G\.qk5K"'SD9O^l;[D^+9R[r4]D.[rA$(pjt9:^`Ms.QXNc53VJ7n]@gXQ]*2Ce;Qu73BL@jNpP$R);%IdB6,d7PJ5gY"iWC:eq
%G"o:?-2)F"\jE-CYgcp#-=hqcQt`$k2-Y&@Uf_o3=4>?n,$&>)FRZKWm$^ufgDWdPK:[DGS3fC_F1-s^CO;NSVo`tmV>Y;cN:hOm
%eKmLN`n96\8@G'?CMM5:Tr6t&2.EGXOU:JN$N]9']7,EBOf&NFYShsDjHM>s\');G-JRE]s2&Q:GR!P!o>&KXekiL(G&<7+0;E6a
%N,#TLdAj_e/V]]trl@.E'mI,)_\4q#SD.u2c'n'[1D(!ch@\P5%9I4D:'e0AZ^unZEu9DhN&ifRrS@lJa*_^iKFcZ'%!sLg([\\.
%Qo3T@a<9TQCKJuCZAZ;?-Lf8LL#E6gA9LZNFZa+]H]r]e^Ye\jPp,P\qjp,jBKY^slOj%j?NE.DIB]AuQ4^V'+FM[jr9g]Q]bKM3
%auD,2!Q6V5[4:YF"'1F:_sE9cTJ`%q#9bXiO&N-sVs`%(<:4qkpnCst&qZoWPLmNKXQDSpl.=N!JeW]G%ZtA6dYHT$K+:mJOYpUU
%nVOED8h_m1SpT!>E54OG'D]jtbQ0<0[t'.+G'ADW\or/UM8('j$psAGJ^#/fmp057_$g)I(:_o,K9J&p%;u]/WsJUHXr@q]!;Lt\
%!Z,IQZgZ\-Da/d9pmFb]DH'V6#n:Demrq7DZ'lKV)#\aC/r<k29GrrT?lRr;GpHBP<.R<%"e,+%UN.t\G11t[Lf_0W-%gQFGXjSl
%WTo;u^"jRr?Ag_0oRTc9Q3@Cj'4A]Sloph:CSZ<#'@5>h&&[,rkM?C3/s]]8Q>VkRY?0QSGb!&3^TVrF%j\WRHpIp6_bsn9ek5pn
%0sOdb,r@:l(FH/4cnr(Sr<?@XMJrPYQms)7l]Nn#@"@A?r7>_C22p$5\2TDG]Dg'4`uP.jDthhi/phPeh`_*qT1WHO.MDtl&'`t^
%]8GW,Ki@0ZXD/oXYL_45o`C-WYi4B,i\6(YMb\ZNRU`A)mrP/_Z9<5HN;t)ojZ-l5_Bp[i_)/Wp)7c^6i"YFUHd7?p7V>]\[)(CH
%SdLGcZRb\n610,=6=aQk$lS#>"EhW:d0d.Qh'W1,a(n^ud=*)^-a.hdRfKQ.\'(q*baQMChmrh]T"!aN$/%ZaYB)Ar9<:99S;jje
%SZ(>Yh[d_oehIP*8]K87-cC>LX:c(janh9%9EkY5K?1JJ6G`$aCqsT)nA9&N;s_5c'4E@P'1,/[A%>`.qAtVI@rJJ9<ng-O/ipl(
%]@nsV2@oCpD)E]rb4^Tr'*3mQq:i"jn4LVchcY\F6,-`KiNj<VKH,s0GeqHR!9VRa>A^a-S;(N@Q6kF.\.`'p)/3HfAuR.-NGoS*
%'8])'iZuGC&(VSU`@=J[)f$@;DlU>8k:M'),:J!2f!B6_U;=)0Ui-6YR)f,JWsb,O>5%3VC9PIGm^BCoq;AT)>:8?QE$jA0;XE.S
%3qVCGaKg_kU%J5JN$lj3+Ef86^C-UFZ#Sk>S0"BP^KDm:!JNpLe%37Z(i%c94@P`oN*$rR>*6l,hQYJ5++Q,3H"R0HGO?NiP-omh
%/m<NZj+'e4J(oC'hD'8PDfpUA%<ksc?r_+N6:X\";$3(F=V-AFF[JUS<N^NmlIX]U554'#Q6$q^Mn_B3')2*#^tge.UDYHq%t/bJ
%=(gU6E*InNUl6m'eXD5=<"g1IQTETZ;CE)9bf`67E<kST/qSE`n:YuImAq%;@&85E\i&G[/`1^nWCV2BBPslq1,\T*WTG,P.-\EN
%'/@!&/aW<7NXYi$DsH8s;i.Dir"iLa$'N?a5B8QJReM.ZA>AtOLGP.ni=)gu"CDfp*k]caMQ1o?Am"9-XQ^JL;%\J42XlroaUC>8
%8os(WRYc58Y`)RVO3PiAY7WhO>:EpgqacF"5\],![Ab:ImhSs;eXMVBe"keWODsF6S%EPdeOTf:-L@l>j1a`rB<AlRXYjH:]iZoA
%hAVL`)qjjmiVmBq[[@P/@BtkZbADQDXC5jEpK1>ehWRGeKsBar\/LbBK1$T$P-o#[Rmo,mYar09P9tRe[oUtWgjK=pHb]qeRr5)P
%&$frAC`Ms_9e*O^K8WCmXrjn;Olj870s7rZW^A`ET%1:t"94mX:\:3j!%<RU_\@X,.mIb+.:@)MabX*RXE[:nGk>A2au/'`3EZ5q
%5E].>o;t++q#.M<\AI<AGYc2*!XLmD>*=6\]-,.\4n5$/Ll"\4,g-:4>SQsfIeF_7UFR2J-l`J0FJDCGE:)K(oSGhhMIj(m`G7@V
%DWGd0]\F5%>!M+A?PNB;0$]$k;2?DC,q7sQ]bS&U0KmA(%.44fdjXa"SYkB@E`oPFH2esO<up&cK+/FlF=8%gAm)H]B2,o2N8k.C
%mcf?;Hn1s55<+0L4gkNHE`!8k1Do`$7CaL8Y5LEWh8(%gILJfmbb<Oeo;mGSr\)mq7Cd&Mp][#`Fa]SSZ:<#d=f5iGXOUnXZsS\T
%Y\+Qgb6S8[X-knEIqRd7A\6]>Y58q!1-&!D;&9$$$N0jNqSB?+l'8pI@a_I*:Mcc`AN.&oMddd;jq!&<g8IB15W`Mu/QHmAI$;>&
%>:VHBU'8##q6Z%BPX0)2^#59;p@O,[]aFD9L.XTU>Dg[tg47to</eO1Z*X*;i1KG=*KfRMF#=imiqb7WhZfi>7=S&R;f6?PMP?ub
%<M7M0Ws>U/qI),L$VZ73Kast0`O^]03A>&`D+sM.2n5j)Qc[r00,[IDI;W>Sr?]/Ng2/F-ggj]oAa>pk%>4`.8'Q6)**1HKlt24*
%(l[pc,9ZK,4q(^M\5!PlqQLLDi%%>'<Q2>AQUcAViRJn#9ng,m",Rp7W0&+bYd`aW2V?!UXTf<O1m5Wa=Y4Lk42B>jKB20*fS4<D
%;KG5#\m!,m0/O)Kg`+hRlIO@#m'CRS[i)1)[-rTa<;EUcNr!3:I4J),]j%j4%9o=Ko[.2-qgL77:s.R_&tVeS03?uaF6JFM#%ZX`
%?n-,;O%6h)J\9.D!iS$Z[/;\uk+0@_BUIBEl!66,)LlZG7]u^Lf&0I>>4*rh,[r6cDJKj8khLoXm-?,U3p[!?%k&YrH2+<Qgb\XN
%GU(*![l8*3,t$p":&4nG^O>jB!'.KR`&'k#J:PVABisfh62KL-)[r\CXPVl7\mRr,LTj^:WP=>UHf+_Yrh%`-mqbR`fF_g^0N$BG
%r+^Hbm7itm8n5H=#-_1830T<;el92BS4<JMg%,W7d9_6hFh80:jXir]:2!QFe]eG((dV9^'K#&rjL5I^Z*t4,)lJr$!oMUu0uEC\
%i4,5qk.<,E+fEgC^,AV4kF+8u:\Ro.$\E>/[h^cJFrmdB%o6QknBs_LVUBXkcKmahc>=)i<9n9gKSo]a'G6#'_dI,2)]G,u.'?=#
%/ji'VpKb"a$%WV&C``2KK8ZD<QW!Jg0N%12:t3t"fSjbpA#N7.Elru9b2$.4[837E,i-%MA-S[&3]@mq=JGq/@g>Ho_mO0`'71DL
%7UdLNZf\.1%0gSkEPcO9SLa44F`(p2pRL(IJ!d,iThJo&D^J62^AY0<#n=8V/XEi%p!S(N414h))b7,M?3`l>jAjNH38fCO<P>ec
%TM#l*kj!E)<:!:m?.X`0fNJ%@DuAQGpV,X;fRF\,..+60S]qMc%O`*&J3<->;!hBQ9G%QPm"=WT23L5`%\BO]h?BRXMq1(9%c9GT
%aT.GLcr8i0UAFrB"a8PZ/ap4%hj^"(VVZGGEbthK-A'VMX+:"Ys'7U@FOS1:kY!9)N!)eEdj_WjSZk'GhR>^l/+P'frNM,A!Q#]<
%rj-A-YF365Je,8t[%V=Rl.&ASA;H^tDp<H9SZH@bJn\9+,D",6gYdN7`"t.Y-R0lq(tcWUSK#LkDsa=qB@^'`+k<s57]$?rs!QjI
%k,c>*a?P,db/8<g/t2e+1Ts@mahSS<Ql0#0=d?&4*C`;e,peG.L-:b#\ThYp&<OXc[;*6.pK$R.^f8JG/2gn_@7jscW,5R2%p2&t
%c5luqMI@AdZ5!(RmS+]'&Gf>7K#u'IRdJ*cIR6<X\N'hi$&('4j'0PHfk;j6j4%@1)BddR\=kn!=OB"W=,@NF"4,+:be0>L?f,(4
%iHVap]ie9-hYJjRWHIKkDtdTJ,:ENGiX9FAq0HsKOAi"?`qrq(WK10UfJSB69;Qq6b`ZP>J1Ju'S?6;eT?WOOZ97QVOK>h+\h&DO
%d+qbh*1Q)aHe&Bu9G1fIKGp4&bYPWqnfkP['uOXOBcLf+M:d3da[BeFDq<&:a3dK`&M-#2VWX(ak#.;8fdsPRcb^tLoV\8O%[J`_
%=9WF&]d`'QqpY!"NQj3CaA&kp[CMj0lN&AMP._Td9kG#<F#qd7+lg;;2`XVjks<4R[9\_tD9qg&`&C<'1K>PRN-""6iD8@TJaOK5
%G;>0Ic+'&A=2X=Zid56jj,HW+b*/gohe[Zf1%ZEJhQp=9O&6Gl8h3W,??3`!V/4_Ng[J11P!/8q!bKNod1<;.AXKb9at%ee0J.'T
%Qd40>(0n1'#EJ*+</Q5[%b=L!RdI5XJ+VpY?oO6&0]=L,II#Oq>bZr;fX<@>W0q!+8N]"8ch&agAB0qg=U'IH>IN6tN8ia.1NrPd
%R4L1IMf_o5(KsdK!A&r]i)4BM5\&7pE@eRO;eX_X04\E)a;FTb]ie;,@h84n%^Dk>R%;gXg'5tHp6@BiiFW[5-E:`^Cr#5OogdL'
%S?mcZfY+7/Qdl'/ArXsE\[.GXGM`qeaD%#)V^rCrB$*"J1s_<[=,1]*F4B40afEL3.:p0NmnF++N:0h`mYQl"j+,P?iStfigZe7"
%@9>QmMe,;d'rK@#7ZRZWH)>OS1_],[d6"QZUIQL7KH5sgq&A*.5k5M,*sV5RI/!e)H!$(g';/<N<:6h%qlh19@<.LS"$gk]VY\U1
%C>Yl9l2HIZr2BJH7cMDr7-Y>AMfBZN<fOO+?X7Hig9LK).Dr&<;H!RZ<sh\j&:%p)[\YMAc%q52m:Wu,Ep2T%BQuT5cTkg=1^,Fo
%Y*+&KU22X&'$KcQKX<5_5/a5(<X7V(l4JYg_l/M?FDs#R*CT9d-^0+gC+^;\&0fbpmK`Gt`R?\cn!.)?qTJ6C3d)hZX)_>:589sV
%i,*bF)*&/R7tkj'O0m330oSu?Kb->%rnG^\'e$Mt/1K/gA<WSKIV`rR?5]6K;Y3`WDS@3PF&M0;j^H^!:Wc9.NoBD:ZN&g`0Th*C
%VM$r0P:==8oanV0n+NYfR._d+_Kq"_Qs=2sJB#Bo0)aE/QoJP84&^eCWOXD5X[m$%(8=?/.ftGcQm[?M#dKj]nmEGs[i^3KT]g;E
%UP[>$Oq;<22u@grgM,%c=90q:mlM#C[tOd8mMrfI^DV/,W?H2G@PZ%aO0(I?YR:fr\`Ku`:ZLu5<IIqP9Q:FU9G<n7.nn4IQP`As
%69nR'_$2$J<./^CL>CfN#f`7on$9qq/GKp1N\`:L8B:-mqiT]=@o5K;=VMi4F3l&>+'G%[A5.:Bp-YRNHl1ffK;jp70q;"[=d(03
%RWXYUd0Bs`:QW@HiWC`ZEmPO'CGuWU2S2?TAo-TLK6XG@W;?9G(mh:L8+Vs!s-hmT5RW-m9K5,Ulf#3Ga+%4**a#CHRBYU@`QLG%
%O6KUEop(;h!'@1R>==$ZT&1:0UYbG%@Xe[J=(e8O=$R%Rr$5\`5lo2hCE$%TbCZsU8@a,q%T_Wg;2rBo@3V,\c3rfY+QdClDqD,g
%_kU2F>[u_`>DI;2j'&5YRpGMK?7")6YaX+*/'XO-\kY*Bk:G.Y/Yp<oBC-hlU&tBA-KQjWI:l/HG#m"S_eKgu88H2Z<$@OJD#B2P
%^0]B<)pc8?B'1NO4Eb"3p^'lUU#7Rp`_lgLF-1CY3dLOP2-IBZ1kH<CK(5st\Z*3NJ$BYFXfm\hPm<Fc=[C"2;pNCGKWN$u>bd&m
%^0]CFJZ_45r-PI)]BpDip:QeNVVJh:nC3,jB($bs/7BIMeUW6M$:]7RUkoeL;O6kCl!KKBs.cRTiGG[9`Hkn1bKg&:>QIV5>eodT
%Rae#5LjXU-9<M+AF3(tAn$F%*p7Jh;Ee!/Wr7'4ZbULfm_u*Fpem6hf]C:PPND$<5(F'cuh_*+N60RkeRW>FLqr:</8mXp!aEms6
%S]',h-OaD:l"%HXTG.lW@n5'L&.6]c+u!DTCtghFE#CE3UtNP6ppl9cQPK6Hl1:>OkK9f'%Ll@7n9(HP!/AT%mG_m2G*:;oJ%_A]
%\(RiH>o,P36(Q,HLpV%b]?YQ3mcM:@h<A^>(EP+-AG@L26"V<'LW+2;R=)ZFiVWW<MBo6?@Qr1dng'pUS)(W4Km)u:5`NNo=,9US
%2<p/..@U\eF=0P:],l1DLcD>0lR%rsT4!4JM:(+0&.a_FUJZogmplZrh%0E;ScCcUlqlS(=Gq[e>Q,e.icclVq$`50Ali)UYnig0
%#[Nl[_t:W2kmln0fC3b*fi(t)dIT2X_&L92;IhlXm>\=2VTd,91]`upA$3n[2O]AUG46R_j:HdlT:.51TRXde)u+YKLA7Pp/q8L&
%GQ2*e(4T1MHVXUUJ)]bnhuDtk=Msr1T,c$]dJVV>k.c>=q6-,"s+SM3s8$:K$+j^,IpW0OJ!TK:I>d(=s75Q,s$+B0s6F$os7gLc
%8TOhCs6kI7Dk@qrPGDT)G75R!->amVQ^*Th3[M"b&3]=[U'^U97E,a1DPlAq![B";p_tG9rjt#sZ5#no6HAhUp#(TS)+9RrZIHWp
%<:RD?s/acNU:#?Jm/*,Np@YK`oC]-?J#b*oe&1(O/=Q6JX#Bs-]6:$Wo\)2%aC-a-%Zi$MGmRd:S[?S4Mu=g6mE_:cVaH#JcfkGW
%FN_YObfWC^f>b0(8S]FAm_1l#T@*ef,ArH#h;jB"PXm><(:Lr[*gS+&1iD=dm--sT4-S)T(]1T9+"+l$j14`Z<VJAaS5t]Os-^Hj
%`r>pWT"J0bWj/T=nmgE(.:Tk4)XCkkI"/LABH9INN,+/V4'`p<?.=**+L-hCmZ+G7BC3J!jSH^DCZQr(bcK<0An@0'#_P`"oB8J$
%Un'toArQ((fB=tbjCP;Q#*3F<]X+=n7WneG;RA)lpj-(]S(d$Yq*jAY;Hb)@S6lp8#8fA1`&?5^31.Tb?no2Hr2drAPd4.[e<jl_
%Nlna5.YbVmZRGZ*U@7:!?$;5ejn'SN'^i!.SLU5Z$]hSf6dIE'^s-0/bh(%+Grp@pK*]hJ0p?8B:?95reF:&!rdLu*.2T!IKUIf;
%AWCK?!9j<A8`f`.hcQPl?/f<H3=YAa'cdd<bCf6B9RM,)C#gSI:T4>i:b1^Th<=9_b@>%:do"D!K^SQ&*L\W]\0F*d96A>%!3X6E
%W(,0`!P3Op%!"_l5"hV)X#SQ@o&m*U+O7>k>Q&_b2>R6f[djZH4rsSmT9bm+Ga6>Sm\oEPX!.8D@bEHbCZ[I83Ak5j#I]Ws6L*ng
%Y,.S-'We]&>dGUV$)TUd%]PIsVBIZ%UdSA.8]qehQMs1fjD#PnO;;+%1+6_&L)nFp&8mdAh(nP#c.eUW(%Mg2.R>MR2EAq@YmT$K
%2H+;)6]PNm9Jl5%5lPic=/2Va;roU`M`'JN<O)1Y$o6YeF:8c@;';`)e$=dKTd?p4a%YXl^B&#m3Y`3>^q%8qL+6I:#6PSL<Sl:N
%?8#9TO!Z$>!`0+lD7\".q0FdR"pb44G+SQZl<`.5"c^a`A^bSuL]c/30VoUSREQ(Drb_I(fMjBPoN;'YOH`V=>1"Lf##c.ZHWlT`
%pT*!AnduT11&CV$roa=Ms28jE(Z3j&n]j;;-'FA1mdTQWeeEZdK"9%O7*HaA@a\LUbp"gJo'l%s,\^DM!q):_)`CGC.lL5$;(#k4
%UCAUd;V.r.N3Rp8+9V6a+&&fJ"jEYMLuOTI.j-,sa2RuOrfokA#Ms1&_>_)dds5T.gN%*Sm_`e]Q6Qlq##ZaN6A!s2;KS"8R&Pml
%I`A7u("OL@7HS%`U[ZXe'lpQJ>'ohF8+uDPmHEAfrZjqAXeAs:63kY_:78Uh'1l4]>@H?L++WIJZm!H_$p=8Q>JGL84@O:qJ]cWp
%-D?\ZNBaEdVfPNdRDf7-)H*"sediuRmMk^[-/O.T.8(2+[@/Go+NBte>N_-afE52&Ua-;`N2Wj%0,kNVKp7=A%ke^hq3q!kM%&n(
%F`?Fb7-"o*X#2Z8\b%2t4W8CPZ2fsefoTeQ%Peb#Lt4ocQ\gBd3;CC!X;]S9jkg+gCDc&^`&PA*Jc1,c4sT"2S*^&_2Bf8n'@b0?
%*7228:"Bu7mHYrh;dosP`8(%bK=+5oGrGV<BL+3fJ.poMc.#?NI'#m`]%%E^EVncCMIGh*DC<YKI?ptI-66qQiNJ[TL&3O%jRA1I
%7cKr^e?EJQd0&W/)i3PL\(r=)ND^:?U(*X[%/.O>%=;3O;/cuC@V._$cI;7D$Y@7O9sp?%`<'9P)EK&OC-8i%EYZ761tcpPi8AFU
%I9Q"UYXW*(YA?q@YsD,JY'X\3Ydl_Pr_3erm)_62'"Znr7/"0DHe\j)6;2%28;C"[AZSUR(MJY``d[r_hsJ2T`$$M50*(L+]\E)&
%GmGB35`snQF!"qe/7LF&!NG=<+P2;ZW<c%$J/;U5WG&bsi%*o%MeelE1pegL,g"ffUf:FVC0^MNA3\"cUW)rH=fq*3E*/#pm?+YF
%PW#OPJI=m#c`MTuh>Y@a*2$mDMf.$koUOqM%n_rkdmR\Z*Dm&V:R39M&dlsJ$*?bog<SeDrul\Oq0q1A;%Pp1?XD*efK,_p3oT2+
%'4,L0'^9&-@q(g=mmXc+IWX6Lc!$#-Mk>AO2;0K$&4Ih"#3+;$+#3J$]-eSnW\aQ&9feQ"^kYu6bp8:c8N0+W7H/\0-P&n](-Q=<
%YW]2P<KX^0'botU=1sOL_1P)#@g8il=Q0Z0$clugdqR\2'I=DcE1&fXf]01<s.Rsr!&hon0%ue[:u0&7E=JW63,4P]"R3cj$!B8;
%QsaYYb+Kq-DF6I^B2=N&V)_4ugQK2"k2=P/6P$p0HnGiA)U$WC,P!>@FWp#CntEJFKk(m/Om*3LD;ij+U;<,A$[J*R,i6>6Zc0X5
%bW9O!QOiZbVs=Sbc;)W/2&5HUFj?EP$?^#^<.Lqc!>_a_3YD:YC,X.M3%n>5M#bT0Uq&:pg'k0ahu=6R+'Ap`UL?a%bMtLs:?;te
%k),c_#'or6fVVe=56lT)-8<2<f-<L7PSj[UFsuW.gbb5C.jmFZ04o(D1!GrCgmCK9`bqS)#4MHNORB8.581mnmh5)U]*'H==QJiV
%SZlK:6''Bu+o+4*TbR@8gjDj@NK@;"jS;5r*4DB)$RkYW5H^>t(`35)NfO!"n,;4:GH.?qTc;K'rW5ID?(W)I2V:[gJ,5V#'4AN9
%Q,9q<AB.(pj4PMJ.;W3*9NJYqMG:B^!K[O;8#)@GKmQ%%&5A"f&O_TK[',hKgf_n,*L%#eb+54MM(/9rkZ1qd7cPpP!]Q2A6HNrO
%X__mLZ'HEcN,jakUS*8Tn"LW)injE(^eaQ;LV.nUedR(C=@g_3Ef&C.mseF^X4HVN)/ma4$-jsTnTIq_P8H3Z>KCP:GQc'ZAP:[0
%>LIPn@?&q^ZFsGE#Clu[%V<e;`0LP$C>F+*BfnMYnu#(C<MnVO"1u!l%PbGuZbf\$YnIjBXrH=2U5&s97+t*[FT:*Ylo'G*11mOP
%B3AiFU)RAfNrbaU44CpUDcYXsMuBm6_#XmX%(M&&mnA>mQ-,$YreJ=WF"ie5??:AhL8g:gUMW@um/[^Y[QL#i<Tp#rSWOr<E+P<i
%Fb2[<cGJh\"Z<?n*!olI4IYnKp0Kona7h5kcCG'4kJ]h;)+.,\BmZDlg7UU#K793P6Fg6d8K]t5c&/i=X]^*_g,D8?J7SoYQ4<dd
%p?Y<468?1+B-Ua^g>OerGKm5]RisUs+_/6d3snAdX7&c]$j%2s55!Y@&S01]bRYg7fpcrM1hP@Q'p&!eNu0%dKX1pX+']HCVHUZ2
%E,ef<9!YoMQtLO^TVKr+6"$XFV&8IFf$3CJq##0H/$o$b"!>#EE>]]aID%[qn5d'RNU1%>,c5G=PahY/G%6*>TWH\qXE-/l'@;F[
%D22aWW0):iqjs)c;GDs_@GFPE%Gj)n9P]1McLbinm7'*[q]X`7=deu)"Ij7<:<g3MY!KI)K^Mm?jYhuP7_R_)W9pf-@c=JJ%!$S@
%pEn16X3BE[iH0Zc/V\9/jhkbZ^YS6?^S&D0/TO6=-\\i.iO&,mJ=@%_#afQ;ZQEB3R&2:WT)]]$X8Qmo(2&1tPctjU"?X77(Ln':
%7jQhqOV@>GPu0RE8@%N&^I0SIDo!:NRlnFYf=^V`F7>'XL<gV24qNgYg8INHN-TYHL@*O4W5+:?1Ma8^HL,:sJq4)&XHaS;o-dX$
%8FRnl7c8aCMk><f`JoBM2eu&mU[tUbZ*Q?gMC+If<-U^m`0np6_ShT*<kgAp-\4]Zo7o1?O`^p%5!6;c\G#c&Jpk5L1tt$\k!FbZ
%%As7qhTUnZjsA%MR"uWYP_o,CR#5UQ*,];*Bl74DU;a!R5:k4(e^DCh5dpRKr,g>L&'-QM@hE_,CfhbfSq:d7$Uu-3J7aJ7]D[&[
%RU`HHT*blg(cg6T!mK;NrB1P:n1=DM]$"ec\1j>d1egP++sXPoYU*%WhLY9cVN?l!\H]e89]*>Dd*=l2c]J2')ek,#"13VRGfqm8
%&@m*GCCl7&K]Q/*AMd'eZ6S\OS11*JT,)5F_<$o>j](T%8C5\j!Ib0`O7Kq@"qWgrj]@jAeO!rcj>Ep1b^H-YNuh3pK!VM"L#,-N
%OqmjeIA6-jUmbs!O%7u0.4O2\eu@(ZI&c&hAYm-Wp%<*jSt@"4A#I%VFl2pX]6`<3L/5,cLBt#,hA7K9P7@HWWn:t0]i,Bs+4lh6
%XtjHjK-^l%OJ2[)BF;04:M7aQTP0(YcYuNVJ^^Q"@HCc7^b1gm6[].YO68",?<1;bb4DO\U-l=j!I>!i"AllHfYD$-4qcY?"0s^*
%Qs`lk32?->!_#s:3k1VgplULm'cL`KS=Pt@B6I(`N6X;nmNQSrkt>j>Yu5LP'\3d$cu;h/1`4ERc"-qa7oS$3<_j4!FXUK,E49@b
%[%Sbq4>7PD:9Zqd94-GR*XmYPiP6Gi'g3?&fGL31Zqdo'T#N=!$IZ_P<LB[=3%r)@VVL6=<RuT%>`[#\`1h_:8+p'7O#66Q/lM:c
%c!0TufJ=Ab__;5>fk4FFKCQ7R@$lZP9=*AQ(De/X>H2;ab["9q&=!$I,q+kfR'ih@ABSXKlJQM4Sj!Q\DFXQP[XS8]p"dp]g65on
%X%O.I\iS4l:4HEuAR7==;WUoV2*%1e4sHM_-Dc=-5".9`Dr0A9fW>(fZ06ZAJb;8,(S>Q36L-Zn0pgHpY'`8!=gp;k8cC4Rgq!bY
%P>6&k[2Q6ipNnDipTQA`C_Vbac%q.!0$r;a#bAJI!nZ@J0^2Yt-!j[ROA<uaUUYT]1LZk7>Y[1Hbi$aZ'nuul^sh68<Dq`bIFW*<
%80jg4]-`Vl0R^QHlg&W57"Yro:EB;-_AjcO&(S&9)e<8l1,fEVCt@LFVOD(s.>(Z?$JA/I]Rt>.%;A[p*%]%M'(Q=q@)Z=^6(7Z`
%+>,BBpL\?_i$sM/='t0LBgqKl`/'oQf&19WPqSK[n0-NXkJuif621\CI?dt"+T^MZ!LED19.!=N6(:33A?@G1K-UBF5\4ii0X.hO
%_>pc\1e&I+`Q;+%ME8AI/`P3<a3sp2\]a$iiF%bTa6LEV6%Kl9n-LDj-2'lF(fCmhF\K866NmKQ2=gIq6ZkW[mEa2JZQ#e>d3C-n
%`^j`A,U\1os2D[/h5OXpET@#T5Gtf2r9bQ%R2&&_ch?1"K<6os#:<Ac5qh@4Nd@L&UXjF#9FBY+Uc$r,c6,@%oWc;#nX2_t;#fd=
%$>%GG[pki+8K_')e'4oM&d-fFpZWM=ODQFbem`kJ#.!i4S/tfP<PBA2c_ogNWcD%`?1ZhP5tA<7jZdHm*64cS6E?[d6/gN-i1/9$
%1dLV>Wm,$5"!Lp:=s!6kV-uKQ[!(UgNc_/9S*GC@",+lP$)nB$#iZ0iVoet)'R_YEF!K_#6up+S87-m/J/$Ji:*Z2--34E:0_K2.
%RFT7^F0f9^?t-4$q<U-VT;GY0G*'MM_k+HRR3AV"Z!Js0LM'ZViX+.]RV%o<CK-$LOAZnUNU>7uRI+qKLK;5dcArh3a%V>e2-KUQ
%QJ;,B2cA[5[H\Yc-e.ZcUOThUpiF"Q@i(R70<eG%D1NPOU(Ii:oe`'u&lTs<U2^^Xjcm8LeS+$E,g3V\NM]8Or!P.8f"!Ch?.[Kj
%*E3aTcH%2fhA=H-::[;npXOAapb1<IENDV)j%GU]Om,'<`N<&_-#K2L=7i;H.V1_GFcM9i(8d5,1I>Si6fl[-$>taf*hYdR2;<on
%LFEc4YZ*`X.)2he(:4$L1jfE3UInS%'&+tq5cR:r^2C;cHlq5[C"D*T0LG&o#a%FJo8p7RghF/fh8@n\qqcP)G](t5nU-_TgM1Ek
%!24:X'8GaY\8>Q-rdOEmcK9Hd<gYpQ#9b`EaQc'L'SC6oNsLb9c]9?nQ22$8=H,'/Y2DI:+^iml^DeMAg2L#uTVb0Yl<haRLE--G
%Z&[4rrQL<eBC[2aC"n@H,O*;+RXT)2Sd\PsdAKL`Vb`;$Ft^c!5=?F@;Gf)[F$7nh`G#b)elkO0WT:#TVsR-;>tLL5Qse_f*K0q3
%B3^P+QdI^,*l:P-DXH8N9,-l-:%->QW9uGP/Z]u9PQi(rnCS-^H6Qber*3-&/(lG[^:!>,msi<rLoi\L+0XY.m9CUHSN2oD@g.uB
%_RLH&3I<,@cHD%JM5ej?F!$uY<+^.9Cu-0uLbDkokquo\S8PHYZ05-,qd-uU>\8?T5"]ga<5[(RK<M9!H>)$==%>2sM7L$5@h;7M
%AiYjO!R=%!1).Ym$+'$<9cH;0Z87);@P^e3'd/Z&WHAQb6d9@hFm-_``OePc8X11%>k&`p`i7(eDKpWB#-S[:KjQ9I&GLjLG*Ef7
%B86.&59a-,W5Ji/7ED_='OZaRO>:X,+Ood$UKCN$!b;7[pfHI:./o>Y`!2g$L;q6@(*I139p\@2)LrUujee9bN3,pa/u`V!=_9-<
%r'>g**C.i`@5r)YlesGlDR6Xl@h30G1*kd"m\^i@`*pSK9SE:p.0biFn.7u0)^@h[Rk.H2GnE>D)YaJR;WLINT,#!88-_8g_AEf[
%V\VPS%)/&:Ws=.:>##%r?P,@HYRig2Fdj>#+AZDpEq5uI)UF5ak:GVRgrK%u0[6DplO$LPk1,UB4<#\8Jk;bp-@HfDP+bKhl[:ob
%#BS63bMf+kASn<FLO$W$_\;;^Z?@S<0_8$I#P6(6B6qc&0=UEDl/$f."@(%I*)$3F\(*C,Zdl!BTRQ.),8nSXs.IN%KE5,qaS,#R
%P4)f-0QnU0D9T8MD1N^>`Ue8ahdB*G#nTAoK)psECm];5A>VsYd&<UK6%WYYFV:<eo3DD9/YDGlcYWc</JuM.OHjNQ1?g#5#;WgD
%UQHTdYYHg$Q]"aK:>##brk2'G68@kaNDM\$Vdp!gZr2$ZUg79\TrsK\.+P5H@p.+=?InflIMuXeEHa"_h9$iWTR3%5p+F0_X.6f3
%dQ;EE2D+Bf4;F.^b`LYL/?,pLHTT!pf1PI'0TTso#&/IHZb=>jq2FF/!8g&i31m8Kp-_2Bp-Y8m4`IT?LAm%m"-F\WCSom449UY-
%qcpq#WdB5T,9OpioGlcBmq/-Q)5K`mqu#FQR:;"d#VO7lL2a3&cc1qBgQQ/_%pRPV2+NEU@Ou:%[Xgm%1M%$T984.m>73DdQ(h3H
%idr%'N(F#:e@&aQO%K.MlP<IT=q19306Qg\R[m@h:$[380H<.:a^_V;'tLp@bdjn)2B8:)5-/!,HAlG=bF?k.Pcek&5r0-c^]X[W
%]e_D#<\^YE[C9m:[V"dGnGe,Z%]8$>^db*D/`'Ke&XL7-OI`)T)MAUC\2W65)@gBZY,llCO[Grad[6m7T+[W_PaaPhds\pq)19?$
%fZsHggdM^VU%_bW(e)=UX$cIC\ui1C8bY;ul]7nO0hCuYc&.kp9,$E10OhotB.:+7]LRj(CVVgbZM0/Zkr%+pLPe<qT/_'bT15-(
%0lL?^HocpoZR]0Aq:ND?XNO>kqT"T]7UWPIKopbW7dDi0-=Ald0])I*.7t*KK7(JqC["[[?aKP<'48)^f@Gl#>OlK+I,hkB'/8q9
%BE^.!PQI(\Ck=X4$K#%l<K-Ng\8M%EP3[E,"_JU>$o,7Y(]BG1'DJA'I1*PfO^+b5@KEq&Hb3V:4);QaLj%@WT>t\Rb/4Bc136fH
%'aHUMlA\;^EblU[bkl:RW-Q$3;-Ajeh.(XnHS[>EZ9""$9:H(8DFe;3r$4MVc3b]#o(DFPUdco^d@7:CK7!fhW5<>IB%jc\L2TK=
%p@>1hi831B*]\r=oo>^PAc$]]/j9>Tn#ehKG";j:c?bD>)ufK47]o+\4tEZ/(JD2)%G!.D>o/nkg%9"i7;)SqD9FPod653G+@D7g
%i?!.6,(J+,@>R>^S$c@SK24Q41KKPuQk;"M)#^q!qEFT-6:]P(#B.fF_^p="4/fG[Gu"gRqAe@WKB[ehPjh=ha9%r`mdRQ!LIhMB
%W%1>jW-Ea,;na&tiPp8P_?6_R>QHcmF+Ulq)u.^9o_!/Q@9AuXMq>dPc=;0P_T`FM^:II\&KQq`G-kH%T"[[ed%*)K-Bfa,[<J8;
%9]nkP6qA9B&e#m:V9rS8"IqKpS@Mcq;&G8C4P[NZ&Kb/jPD]K\)d$jsns<&7>Jl>o'.lQ+RL3VJ*T>\^kM/b3OI1e&WE\?/"&KT+
%e`!Yo9+JdN28Te/8G^eD]Jc=F0^5aRn2IQJl$pHd0>(1Dim;!-11Uf]og'+d]ZlQf?b>18Z)7H?!Z4M_.YQ(P_iO(LVtnWdW@$kZ
%=M:K\0gGH>DK4c5_Tm'9"9'RmfklV_TBJX0=O6llRW>e]*FjPM#6Wh-,g&N=T;SmeQ=M6.CUe<g@Fp/EWJ;Z[2?.gtnBP4.:kUhi
%6/S*TpG2N\RX0(_@UHm<->1-=!l)@od!+%b0dM-o]jIV!ZQ?71Cb9@k4q9?0EAUE`s5'ip$RjJ='obgrR=IP6'BR.;$]1Xu\*b)(
%bh"B>c<;1hM`r2O's_NN9\,/oX6MnGh5>l:$?CrH,E#WPm0?Q`T$MPJ(f/rS*dAV'iH$F[h8JWnd6h!(i6f'1)Zh%qW3V%%V(AQL
%E=WR%-V;lDiW^i94-@=!>fn_n[3;-HkpI)"q:X[+n=Fj/W*tK5>WOI-nE$sacgg@>Ye&VA^k&8;*Yu6O17U10`3!Tlj$=n`jQ3\#
%kJl:paL^YE\LERdZ`gu=gRW2@&3;PP2;F>CB!hmZJqa=0!qVY>K6^">/aM2TiR];s_ac!tfqRLcDWM@0RkGq&2WKr<HqeCL_&_"$
%5i0;^.-nIRH>S#d;OBVX^Z,?\IBrQa3!?h'dl)pK]&pQ`JUSFj$@.rhM<25m_J9P\drkKOoMmml!Pg>kY)+>5N'2,e&^.T`9E>&,
%3$mW2bZmbC5Erf!*WaZ-H>UPG+^N('EJ>XVn"sJEJgt;$OWbg_B1/h]"=(ifN$j6R-_+MjJX._k$7K@nL9%XjUf-s.7%/1,5WNr<
%;qEt\H3EhB0Clba`i9-ZH5'o6Y&Ah9T^N<l)''%gPkTD%;hl"I^eB-f(qPEU?j*=1+Se[Dd;!a@dC`oQ\qq:;-6duVWRfD[,/Q#q
%%slS3jgIlh26e:=eG>o*/eCuXfih[Vc^"oeIW\H>:p#Gfp!11>MG$=c2OU*6TN(OT%U*MO@l*]c?9$upL6@.[+QnX^P"g.FedE$c
%E0go02k![5[-/'4KL22O-De!Kfi%Hr=D'L1>&$5=#C&aInqjZ+?ZD]P;j43a5QY?9aXO8/&r:MAd2GcGGd"k.E7"YR5uWg]V'$%8
%+/1Xsm*:0SH/+L)UJuZSeSOG#,I6CCm8b6Y(<DKb2^DcddKb_Gi;*HJ\]/n5X2H^1SB?&]N`1-dGpd7ZM^0Yh8D"2*!!Fps)Q+/-
%"C4#C2caK)^foN^/%Pn'km\!1G*GDDgrKV!031TnobJOoeT;fUAD6R=V<F/^0D[U!DHcclhcK%E-&Kpse4Lil+V<#=Cl.BjG4FAW
%BD46R14"*h`U5EsN:XKA6<?kb<5L70LfS`-(-Ejj_o1d?O!tj>X1<R>%dU,bB8VS,X28VPlL#P-%=onh5ksoj<l09-T6XrZ`0I\^
%1\+\%Wge1!'%_D=l'oLt@!0tY@Id73YLjl#5=`aF!?Edph:u8$(#C?>Y]"t/@(XD_T^s^'ZArh`C*e05E#WLY8-L04nA=hBM^80$
%gPqLX#[T:cIQ0%Z9f%T_&^m%aHd/u2qhDoAn:(*`HhQ_A)oF[RhN$rn:8C8gGVD`>Adcbj3=J/OHapTqZX\r?B^3MTNcC4c>/k#2
%SZEY3:itAe<MeR1EasaZjD@`7!`&*RUQ@O?[eSBl:#P]Rao?P:Kn'u]h?D`X6ERBmb1_tFFU,u!+5<I$Y=e.Do$GDrVPN3O#&"Ss
%d3R%$5RtN%T4X^IF.2jCBX9k*[i7jg)(_<YGb(O=_pcheXW&H;NiGk`_Tf[RBNUgX6^CSJDb8%27R^@9itk?"U#f_,T8fn@^omP>
%_(qfXepA!5^oEf"ai3[#kJ01m^sGb1'`f)3oJg!F8[uVfO7U:hC6HWWE*rP;p-Sjl+W-J'^tZ(M4aaft!,p+m=YQD%#.uDN*\pg5
%l3!n01D.IlLpcGS\QQ=1i8Yk5=pJY_j(M;RQ[-n`V%"p.ZtOu799*oU@u#\8`"2Yfh&$<J4$$FnXZ)C`ZV6fbb\8Cl]-W6HKe4ES
%CDf,0F)=]`:i)S/`Z0nCY=\>X;Oa-T1\qWoM%+;.Wg:G.?((NuVOE8nZGXn2hL>4<;LVFQ#sl-dK[j"aU+8Zd$.6oj]bq]PYn;aD
%O8rESi6bu>ZN?&a&V>Ij1k_M[UA3Bd>!]#cO!QWXfKWI=f2K-BX^]B%<[,N-LdTTcY[(c/.ZHr.gCamcJsWFWU%D<YlM4Oico3k+
%E-t^V&+#:ldH])ab'p09;jWi?'i*Sd9E?hkLs:/gj8EXKAXI`o_6R,P`afVW6cJP$;I!aF"Un.dMd:[$>?[(gotlphq]Us9@psQ%
%+@(`r>n(EsKQF<*)frC(\gODl`T7./^9DeW$5#[Q35>cuEeO4HGba5T1!loHJTs!:5ZiS<*i\HWD!-NNOE@'+83AF6QtFeZM8(Y=
%MT`@qE1h?%4%B"a+s/^T+ThJ6K&8LqbWfb%06ArK%&<TDd1L:]h\!&YeUI<5Q!sTjH%:S+^k"m/N6d.LDfmj92/V""?hehWK^9[P
%j<UP#&`"7c*Y>ZGWcLB,H4F*f>#UWL1<@1"=,@eG@Pf7bC%Xb;l(X'Ip&$2>r\IUIWTNYV?LudPmbHF;MZ9f]kqAS9SQC73BuK%7
%P9D*n^9#kf7[aaBR\m;!#dD!f#uU:;G5ps/ghj,V8;I"m_s6Y$@9ZLINTujf*@0s(64t<@V!ssf--*sY7B+%t-1GeSrup$lbi&hn
%f"_lJO!(JTE.H8K^Q$?3"rOHsCdATS8A8@Fqb%iKRNh3]VphCf*pS/:ocCU)X."'t+n(c(l,B_K=S36)!m7&A$Xm/E3KdJ3][je]
%>!HW,\HkdTA@lJh4kiIF6M2.;gms(If(qVk+T0'inGQhMKbnRqfa]GE"bS6jDM9DmL!h6#a9^A`XP]9m[b3'IJlru%6[aJqYkl]q
%Gcp&lA]8NC?[PHt]!%A;1h%I(;g;Pe"TUJ)7u(_>#M0Xu8Z43`4:Yh.,IDL/[Mh`?!$bSXfk1T<o+SgR+agHNFUrbE:*9%dj1\FG
%ku:XZQIF@5N)<M0?;B)'bK5&l_M23Q+.ahV@hU4Q=7EeNrdI`?]O'XYja,]H/pE`$#]H3^nbfm\,L=EpbG-"*n$jWZKpD;@0Ejc^
%@%)`M8,/^SIapn0Rm-m`RPp)!0_R4oW"[`=\64>CIqV3LL^V"]ltQu/NqB5`:&Y\NV%u]CHBV,/jH!B4miUmOIr(S!3tCJXQ@gPJ
%OIq?2M6hjpf-tKO'SmU'%V)AuNO:;?=b\b98ZC6_edOg/%F`f!]31#Z.es6a?^C+-iU^2n02P-HB/W'm6"WD+.>d<fCE!?)cu?8j
%?V\Q$#36XM`In@S$9tW#K4&>ZM(mr:T[9U]NRl5o,.LAJ=+j$b9gGaT'2Y+=^.YEr7LVcYq`nnrj,t"Di?lgV?uis^QBU]S>E:*E
%1.e:&08*T=/sqKf/]:X&<JZ:"2-uKXdaY%?'9:\MFaPE));PoQ><?d\Gip7'W"DF&P2/PoP7fSs6.&^g.@Q/3nCUG,;j!4k<Smm(
%>XNNV]l[0SrX0RVU4"1&gB#BjVE^PU$N<0Z?>f<X5;/.Fd6n30J/n4[VXTi\EkC8Ura$Fa7'qQd2A?A$A7#NYB9S=kR\3r$NkFU4
%-_3P-W(mek#pC_M(!nSQPR#X!TtkJCJThAH\RR9Uc@r^O"kFO]b.-`A2!/7W5^TO,C-]Q6dC6Kd3^1kOg#'jKo1R+<RN$R!Ck/]e
%m*qPuORHH7PnXJYK?<Kh;s%Z!OV$!eC0Gm:UC5g5Zr\Dj$?fWFM,A1gh%2sU:%Gi\I1$h3Z4f2,;lnO=^"cJpA%(Hf+fr6-B>[Dt
%WTugOZ@7Y0mH<VLCZd_Co*Afh$"4s[BZa*WEBnl,'u4_7.^7`F5Krni.=jC`bT&N8_TB[r`n?=TW>!<9ONh=+7DK]@_ZLQ^j8@A\
%f)ckO`"S=,"!C>nX&5QraN4nf+1jN7p"T/m]R/53\Q?9p9!]I='iuhX4j*4*!UJ4lQG1W*8sBcA+\K!G2CV-+-mY)=3&G2_:`0Yg
%:s@HUDI%p'(g&h98MW2P3Hqd)_?:;nINu;2Fi#+V[F'QFS!A:@^,Z=+aQf!*j5\@[d0\qQ\sm:WEc]`Pq'LAUVd*Rs.aKkY*O\\o
%0C'[:.9Inp86ca#Th(HR;E>+/1qTXY`(cUlY>!,ABb:0I2#n;#UL5"b$mWrHELqScF5WYEaB;f6UQ&C]QA5Z)^;_Lo<m1Q6,c2F0
%M6Z:dBY&V<7hd<!TsWBmkpt[*ib.H$4rL]m'VYi,p?Xsk4Ghb,hS?LLkhHEL6'iI2T=CL!']kDd^q_UlqmUn2rdE]hJ)m?N?F5]R
%k31V:Gn&o7Tq373>a^@U)_kagAu^/l9e_.'&"*IdOXm[2YV^1cgi>2"3q1fWFf%[uZghsj-r+@pEs`H1ZV9]!mW.PZRqB^19`<k<
%^DKke8WVk'e:TqdK',nRrU@nQ4\TStY3Q^V&2>auSpZp(/hSP1Z0d#KVXC<&ehX-@q8jp$Rc4&n>FWi`#p\ORpu6"NC-hrE6N[W&
%/imp;`VrEPTs*)71s*\D)K88MF(JXKd$Q]B.ONM3M,mn'Z^P:ZesuWk]K`JX?JQI7s(UPQ^TnEn*)PtE[M33nO';?(mJ1IERWBe3
%h9&Zt!]^t>F`lBff+l"JpJ9u/q5e8J@>E_4*ciFA9S<(0n\m0M3K3*K.hOUTj"N9n:R?$hs!m^Ik0#](lJWp%5f=)b)'dbV`Gge\
%ffRE"s6fd%3d,8J/7W5QGreW@:sFRBq78R.<d\9Kha7fsqY'mc`pE>niQJC:Y3/6a0;m'9s6kI9+9*5Yn%(]#5LsN$0C'n\WE,AI
%dn\EM^I&p[s7hZToUl0J>>1mKFmW8s+<VdFat__[#N!/C%aq?`(#Sa>?4Bal@-;Q[G7WTrF5OmE)Vt)UY"j1(]W9Roq7k=pJ'dTM
%X1d,=Jgm4he`8GV;j";"G-b*0OE=';7[iW",i_`JX;e%)S:(O,%Q[[ZG<i/?>jrTp!#WF]qce@]BVO^Y(p-]ueI)kV=H2gP&]Htn
%%g"'\+o#At-_uYBK@Ga"Y>ZSE%\q6a!.5Ss9urAL'.jsSEr%?"8:5U?9jbu1<PaU:++b,:Z6JU@`34db=N]'Z9nh3X8O>bKO[7Zk
%5(#WQ&K*paR+mY9mZUUnYjfBI,^)V2Br1,7R83AhAV_f)\iAp2:S\9V%?W5HGO+L!+3jc1]JKt775u3uqb6i(DK,3K%9$)PeO2*X
%48GN]qd$'bRccta5@VqB\X@gVO;u1bPf\q"bt<F^:p?1Qh1Y,7E3M#6JYnPD;*%LgYBa%g>A54WifnYSG1>b$s%9Y!Jo2`gOsO6a
%7Q@eDn2!VYNBntg_$9E<'@/Z`OE/OJP'n:u+XUjP!N?nVEQAmZ)Uh"f#gSn@:9hk2J_>p5H1eUf\p5HL>fWX(\+O\462gOTs,(AD
%I1$(.[V3Z--$b6Ao@a7)s"G0O8A5>V,<?X/Gat=p.8[fl0S^Sr>UZ[n`D[HYDe(WK<O8c*62_$1?RjV_D3DmF\"fYB$A0U$0GWuA
%'d<sYr(@guKPM:%j!`1ifa%,LP<O?NfFQlfT@Tc1&8`C,raZ!sFD_()DpiXVJmO\GG)Jg"'*`e^$,O(##mgE?]J&tK*hRpfX]b6?
%'(=@?_P)hIAL]P@%P],8X&R/#D:bK+Z8LgJ1@Gb>SY9/u\^W=r@"hKn2kP@QBsYu@rX6K>s7u:>qr'Kq@B]VM*>T5'iHEeFI92VV
%@je5#(d7J/o[eleLTAQKo4<'1rN\c5IT<5FdXV.>B$#a8^&>b.cS=*N%%X7[7lur#&KhS#LoEbV,q,Uj>Ytfl:^jiln=dp[QC-!-
%D6'?GLV+Xbr?9M(a)t*%F)H.mX!$h<?)Qo3d9@>Wq5b=ZC3^YJNbcRM<G+rNTMDB>+Qmcpc!!=@oD?EsME<\0Qgr!I;9fcTFfKKo
%/(2u?;mCh.[D)=f>3DHieg>;?/[S.JCW!;=fNG'"SJmE6_=;\-3%Y*`5nL#_j6GXf%OPrP0Qo0u'82Y?T_/ila5<tK5([6g/`k6'
%./"HO$'5WC\Oe#$`.]HFYpiR;a8ao37\4DpG$45DH+J@gk3;="RE*K(@^u1<8/8ZiB>.Nb9O.*SLSjh5E'A_oIaFV'.:-j6W-A,N
%=3stgNmPUkI+=aJi:X_E'P=QSl:uD"f$/)Om]@j`V&oe+V@!:%lK"YJb+!IPbkpFXA$XKBqpB6'%iY6HGGZr3?_ni]53]<I6r(*t
%Q-Sl&Z-o.Uh'sGGO3GMdB6RHaIXF3f&"eXUWWFU2WX;hHo:Z#Z]/)5."UOa;iiI[ec"P8?:[YorQA1HlIe;D?83@0S;FP_fA#Xh5
%YlkXZJ9G;I:"+T@d7#\WnHGf-XF0hBWBWKmqO5ok3@+qlg70R,7KdP)H&#ojpYbqd!N38_Q\%)%1Rq9j#$Fd.ON:usQlJ>6J\%r/
%#;b;D:<S)hX3:)61_/.[\g(KcNmEb2LjfcLI\?V/o/8I]\L6=""M5!6V;0mJ=lEc,[MB=*1am9QE-6WM>^ia6UY*4#]qJ!nCm]9Y
%`apMD2E<l:%31.BL*^qn>HO$b)Xq!X6pVKQ/F^mB*p0^RjBO7OYR8"oLQi9Dh`ai[Y6aYFL^+O_%QB&RZ@_;Sb.APF/ZCp4i,+SC
%61!hBJk`#p+Ka$^DS7]HkGAY2!@Ee)XUKqfk%o9YOC,r8Z0o"/[rX-P\Bs$JeYK3609Wn,9nmpc?gPA=/iUc726t)+gEU);b!1:O
%&&nO08)U;7&Lk^KDsnURiGZOrP&C$MRh:I3(cE)G=[ll;4_EDEPTX/5F1I@d!=g=ESc)6tnbdQ[^V&[C>ZboCrdNbrV1%(j/l0T)
%j42'=H?DI/>85)ui7g3T$3M*,U7I3*HVP@0AEC<O^^+Y^#)(:[jq#p99.#NRRO/1D2j7A)f:":859-^F((mCG]'h$6L\I#0iN[Y.
%_B7(\J+KXIki:(BUH8QS3,^$>D4V5M3Mt3[N?^L!$]68&ZU%kAJ)$@eI1TOCI'r$,:+8"HU'OZ0J6[F;hQ-&]f@i&WDT0'*b:si]
%e#'*c^@5$./6Z^6)[k0=>mZL.fm0fJ\[Sn6nJr.^Z5:VQlTf+GbdppXoZUe;\Wq^;-P7)aMqrR5%9NJLUe_3lRW;4_)V,=b'2'Xf
%ONm(bX'Q3>5"r"Oeqet-Hnh?Z3>_R&(Wk"4#DsHtM)IMR3>%]EI40dr\$iu#d^2sm,YKJB;UjY:IB(mqIjc4S(d]#:(9X32590*B
%b$Drk9\"tHB@XT*Y8Ue^(KGjrXSC@V?ZHs1U(\mOjot=^_g8h$Si^;3Hl+7q+<iM4EeCg"#=P9W>58j5q1<OOjo1uWH`kZkj/PI[
%5&1o,6oc[Zqun\(%Z++RJ[-8k6`FgS*hd%M=nh%&b?(/P;\6HiEdFerV.@meI(cVimt[eoWBGHJ;JWjI6S?I*BN:#fgHg:)`38Nd
%JY5:=>G/$#?6$0&VTT82]$\^U)Fq0KLg,4@19moJrN?%<RreFhO<TH`]ub$a39]lYb+(!ral]#;6W#Wq'pXTnF+sQjB%&12R-]S_
%n3Kem\7E)R+sN+ofNa%63>W)K6='_%=RV0alP]mIK49Q^n2O)CYfNUnK^M3#A$cS<pd&U$rj3OkpS)0##Nfg2ZJTuZrmHenX/#G#
%G65BC2C-mhJ[_T"QP6c\*faa]GgfO6_Pggp36PK>?-><DSs5IF-nj8U)Y8=L^0U%6U]^9rUkeI'.R@j[#FB'S]ZY=EAP)>j"Pa_6
%WD6?9Gult4/)4gf/r44ajeD@E8`t?=oq09B);<3KWHthYJ,`m]qZF`+Nj-%+p4uBqo#uLPXkP<.&U@T8j=8ODmT2UMiu7U6`*9g7
%aaZTblF!Fi5CrZg\/2t\Gu_`\$E@G3XW\7LGGgs_9'mPr/g1=8m3IuYRI3aVaR+bt"LUek0-IfaVNu/n)#VQ>*T"jE^Zq,%%n6>Y
%JBM+2)'ilQe+e+6f#Q^Bqt#8"lO1:K2.I7i;YmWe;/&/tl[=O4HLPM/e-F0r3GRsVQ2ERc5r]f,[$Mb?:MV^9,9\m@&7Lr6ThHmA
%/_Yuq+L("$/dt=Q@k9A"lY@;Mhc(c*XH)$dq^T<d<r>D-Ru-KZ^;SSAgUa-OBb?Dg9>0YT[/#C^X13;pI:^)jmMi#Me8"er&@fM-
%#[-uFVG$"\]1a=sjb?_/U9Su4lVK7<"4@P#aGfID-Q?$*q2H.IS_)Fp^0O_.\sI?+&gt0fN_@3a7m'qa0$Okck3dIb$9Vo.79Z<'
%lh^%h]4Sau)Nn<M,TmEG*o)HGdr$MT:XIThp+AqS>2N"_"REZu3sm=G6';$_<S5Ab<b=ZLS`'Q>_Fs`;<i%ql8]gPmM;`NaEJc&9
%A,RlQBtM5Cp_&/n!*lnTIg)9oF0AgYlPIjj;^8\!hY.7B'?F']YH9%REJ"<U](0YFABD):%=3[&^sBoBXAujG;)_`Sc;h;Bl5#V&
%5mdIJ1e[#c>n>01+.qB&N`D@Nj1\6h5PF4`CE-H>fYN2PeNa+lCr2L/Ai%k)'6u^fd-oMtmguW@G%l\GAjVe#9pQe*<=Yk"_5d)1
%GOVKTKJdF'=3@)o,=]k-71Xt]<bCu@9(qWt1?oDBAI1^/Q8q+O)HQ2@a)8F+e\Atjn3?9c`O29kCO-hOO5)kL>j0tu.'p>=mQ.*:
%r67\lIY\eM.nK#N>j/&8<XmeF+8Ue;2l(i=e;EZ)"/ir0c%QJPRR=E&rZP$Eqo`T_ScuXQcb08`9SP97<Oud=j$(LElY2.@n%gTF
%^9q]+Go@JQ9gs3=Dm*G;9[)RB7rf^3nLA[qE*ZeoXtFZ0f=]QQ8XI$+?0^^lFaZ%rQ3X\0_HgF=Y3poIgW^?0muH#P5JcI[hqW,=
%T1`-H>i:I$k3sbf&C':39S5YOCH)9OfPD_Z1$C)Ye@4b5e_L'/#I,*nc_^V3=REFD\5`)KWqD%jgUgZEjV.E]R];poil.PLR.^*c
%A9l5=g+XDBVmd_)rK5+$%;c_>Kbti6E$^b]fpGAe?lV'<dYW2J\A]be-"I#77%N40W[V.5Fb3Y^;MqXsH)gYoA[0!\Ck?<J-[<(`
%>m"bWW_+&2%EpA/.=M:X"e2csflMJG:Sn&ZTj]!n@6,MU<g(YR711FE/qa&IgS6Zu/,j]pm&q6Ej!WT%.[9uA.hu/gQQjd2mZWW-
%Z&FH;^YN?<_8AeDhbr'%jo2!jM/Ybd2AHI8G%'(Wkon2GJ<A1L\s;HI^Km0&.n5;54?Da_,,W7126_713Dc%O=:\g@*o-6l'lCsp
%2?LJJB8_$;@33Si25AXYeXM0#dLZ?F<oY/,-9_;#\<Wt\^Km0&91C9ql)RsJ1D/m-X`WNs/l`iD*ctuiXj^.r;#a+%pdgF,4Vdj0
%#,acth#&EWpB?;J2)Ke%$9`^kaE,V`0$F2.K>XU[Sne?gn%0Opf+?XO='EeDJ!2ZZV[KVDHaKd.Vc&"5;_fe4XF;bYa;((lB0MY'
%[^c2?h)u%o;b4Ktn\Je#_uY<:p=E!EF(O2M<ua6Ejp2$tFM:m&?UKOKQ/t:VJ'kQQ87doZ_VMOT->Q?AFke=iC%`Q[eD!uk^SWH6
%1tG!CYN9P:U".i9i)>)O4T1:=lKtn,?a4:+;GLqB>dDr;]'8QU$8(7(7_0nrE6KT9TM7e/<oZ>8[MQS^QMY*+Frl^+]A+<$js=&L
%?/(LDYl6WtD;"n)iP0^#kWl"nijkG<oH/#=3nESj"bJ(DUT7Q#](Y1F^HIY+jW8ETdOnQHXIVU!hLH3rm38^HH6QZX-Xe#h9.nf&
%4=+H[l@kRqpB+j9b')ep'Z]VSGeCn!?W8[2[4dm.5-tA!cu0Mp@S+Yq6fE:9^OFC34FCHfbC+%m2;eik5m(&9C>@,-j/IESpUI`2
%]Ngd"d#)RgLURitJZ#%dVd)DVY@$*%0D(USEZ\I^N>A5U(Ng<_;Ui4h5[If]0<WeXQfUE<&goGoPLP,eLrO>Q`aRc>]Q7=_:L5YH
%I;&RfGM'_6od-N[@97c)]E_rMU=Xhl2RIohhJHZPg\'Tdq2a^uA)E<.LV`iYW/UgBYa--5gjnJ$K'BZ.\(KRmXTE->[JhU!/]s/:
%NLC!X3VY@$l^dt^We*2.I2QM.T-+5c].!>B:@Sf(<hA<)1>0e\).Ys%DP\?N]At8Goue33Oj2_0rZLCs?t<uCa)fq6@nki59Dt"L
%\![K))A.%K,8,"<YT,4?pMZX<ES$/-5ra)TMcVJ[H"]Ut3PDH^mhg^bT0!F6Eb)[,XrWr['!X`qPt>=G.?\@'S%r7g(mgmi1-nPB
%EH^0o1.(/!HQ-.iSncrBn\F>&\=s9:aKERh/fH\7IBgQJolf/Y;[m(Tc]@[bs(#>_p'UYCG*M;i3`Ypl*G*PIJk0((NRSn_"sqI&
%$&P&K:jY-AQ7Z6Bo#-Z'c\Fl,=]8r!8_b]EWDmIVBS^bP6SA;l(aQse<uW&s(RRZH1\SeXF5%LL)<SOc3*5,<;13/;;F7=gkH,IC
%U^%Wd;LZs2r^\P96NY9Y(<'ct>o4$o(i$I2C)[fkX6`cAXrDGbiQK-HEnU?)X#5Bs>JSSG:6Mto$?I(p\M9$3Z*^))1"C<,GQ[*$
%c+<$#kV7-2ot2[pp=fh8aC.eZ7ds(8AK@5JI0O5!h0,=U3Y61!6\fERJNM&ddV$:<@B>;.1iqYtK#=UQ$6Y2VM$hG5!"=;]p9bBm
%U)q86+)2q[]D\]0kf]:;#\u.c7Y;OPN%?^&Xre:1I]hWV)YYV]r.SV8+*mcj0>$00kI][FWnQ2gp_skjqt("^#jQd^Qs.>S*l3,#
%Q2FUU?0:ZEj$uN"<F;L29/M*<C*==u=<*#t=,GRG=IUUG,6tEAWt*]q;Gt^i*;o,kkYFKU!'NEpm^@6;Ct8O57=23+qj5n.oo"1g
%os2kmX%W/EAjA+,_q'(Co,1qE^LaL4)eh3>/K;(5$ld."2^/IM'dOL,?'b=Sc^)ls5)3X!lhGRT]\.ZPBdi(&"S4mpR[(o'P2Eo6
%WK&@o'AJZ/QM:NMgSE5I7ltsU93)i2N,AE2^mnN0)6@QK:M8&MGV8^3brAFTpW!s26/rFi^7K,$S+6;'Fd`m1Q]pUO.[G5%WK:Ab
%hlO(MZ;aB0q0#q@h]FEaZW^rR`&e4l1LP.D<a<Tokb<[@qrjZXnm?_crP:,U/\uHR@0L@%:T`:*":.%_c*E2JrD<E:.jfVSXL[4H
%R:=BJYi8[+$I.P,YV*^-FaUm(\P;[R:\ekh^04\j3B-tA[m=ks3Nt'0%m+g`dM&NE/iEM,Rr[c-:1Nhr/OW.3Zss!=?N-rP>[lSC
%C3\Q'C=)cL^/*P9C--m=.T#,NghKTqBr6-HVQZ?8oQEW:2ZghN2qq].Dbp]p>h&8SL]2`+M/+B(-*o4F@$'MC?/%rk$6A7A,2!;J
%7DH6"mrs\J/`f*nh]JC#f>ldf;>KeHG0/KRE$BjjJ"`1Q&cuIX[_q6lTpmY_Rr5EQ96!B[dtg+o?#s+h/]NSUU*2Bt>>C#XVF_gK
%#e4WeJ^%jOn7:WEK#5**Z0NHKn))%-jnf9eb9,JUG+WID[@.VsLnc.@YAB@4*OIFGO4X]NB-"ND7W],5ltc>`mUZr@:Qb31N0Ks3
%[=[TCVV%nt=HNgh;^beG[Z39C><"m[BV-d&:-(MMQN'14`Jcn,8k^"0E;[tAO[5X*jst,+Y)ONheJlqV.%pSsdhH;:nHTu6c.L2E
%d]"/"&I\_'O<oDe!.CXlT2$^I;t6PK)oJHfB#=(R$]]TDS>$Z*!Ed4_3Y2)Y(3292@&D.u?AtjiR+3V/EIG%a[f^I<,!(K4a8!hH
%RiY1XhYEiU3C"g\VAQdO]*UO&Ydih%F!tWg91%T"LsCHUE#^FP\dD+e-)@hh'6:$,.G;%[bH6pR!eg'aB^F*GX'%gC3bnd'\E'1V
%_,M,pe*lBK"<T8MaD!d;qp=Do5i2-J$mhoR`pF;$TZ.'oDQ;9p>1O2if5N47\7Y4>86%"^Fl\qpVtmNnlJ.BHSfD#YhMPV1_>Z@G
%!1r=?o(c,Lg&qJg*&:S+YrWlR;>&a4HiHQ(+9"Ip?Qf8SKt>?!Xu[89+g>f3j/a]rLH)DOMQ,I$ah"ku=ll^WIgS<Zd>'hIO:3[@
%6R5.pZ8$/)JhEPk+iG_=\n1s>#?.k>3iYfX"(BWl5$KZ=Vnj((aFVr(J%$I)fd[5Y_f+_8I]3,4l-m+/8lkMlbfM.T$J*9CW$3<)
%-f6H\4(jt#c0l;O2A`c,I;IAC-BkmDpb&;r0_MDqF''5$=rK%b2-P;Qrt=j0Z`]_+`kJVdD(S:KFF]mlj%O:Um95XO@)IR^;cVCn
%Js-\ABP8]tOA8peCC+G2h#1$DM*3`=1.V>Jbq(U6D"X_M])";@MVkP4[1&tm*VPL[.sd%]C6(>a@7lj;$qXCQ/LQC@UeT[B0oVMX
%4%VAoZ!f,70.;KcT`GVON(r$a(#15&p)\s!N7Suo2It2i)M=BA$*Hp-S.WG/-KE?2:m.o\eA<<1M5r?!)JOT.Jal:2V*/TqQq//<
%ZGqa5mUT(Y`c5i;KdNT,S#Jj:;nSKE?ZXqm>KJmb2.&0pf1&TNNI^5;<TO8ZUW"i'Pp0G&RC&EWkeNW,Cf&8CN6NSgQ<-n>/%A&s
%B_Du9?$5]+i/G&-?o3Yl#4OGkqDKGDcq"Zq5I7k9X(uP_c+eV_g:u1Ep@%&@l'%Ee3p:'157Z8AWhj'BS73iH&j0kIcIb!g1!h>#
%\7>=50[c1.Hj9"pV:h!d#j//P_l-;>2&!L:#$-_`"8ac74QqQt2a+-]RnTt<?[A0ts37-flasF/`;QnYD`-H5TP(fKmZW]9kiUtU
%(==*1#7YGUg:ISs-b-o^Y@3jWL?Kc%%Dem5;q9"!`a7'obK<lumUAnm7!2r%GmKbdr.W+*-Bg30No7iXQdMsY!>4!BQlXLg>8X"`
%agNm2X`D58jbF5n18X:!?LB?SVQ>;Dp(o$Wme7,L?C.M?+ZIfa6&V12j0jNrV]3q`)UdtY!\uGT34r?\7W<k*]'6A;`M69iJrZaU
%OibmfGYFV$6(76%=gKCFGO.1UWS$eS=tr?7OCgmD0CA*1ni,@enBC:Kq_,67#R;:%%eJQ\%64kaG:RQl*=ldW7<Hnf'#52Sf7epA
%jS[d#hD]E/_LI(D9.Ik%_,T?1=Je*Ik'oWKeG%/NpGF>d\WuW,[7W&VD7aG"+!2C8GS;@>;_*?Ti#,RjH3,>qQQ;ALVb`,jH!ZID
%_>K*\S&WPC3&)frW&AMVSMi5'NcLWunMV>l`]8+d7VO#:9R2..o:i@:X68m-8,Wg]NU^uIJ4k>0XH'VuO2DONj]M*Y8dA;lKXZua
%YC%7j*OmGMG%d_m!*ol8;jQ"/]<T1K`@eOl4o->HC4?V+pFQFK#<hpWa"1SCEf2u$]j5^$hYTH8NEjB@`mV/Hf:oP6>dX4B_tMPo
%$[p8b$--FP?[p;fc-UcYfsRO/HlaJo<%A,j5#VYiB+]1ARN9;o&\0=`ceu5*#]<=iJkWi\0Z5GmC[+B14^9^]=/4H,!!PMhr9/jn
%Nh.^0GBBu>6hIL*]llOKp[>K=OBjeGJ-1"dHXH,pfSH^:9qNs,rijh0,4ONN+C@!@_VI%Wg0:Qf)L)SR4f[=Cf4WbiCUEGpFo'_i
%n[_bfjhL`%@c1T[X$fLB@X.:bf"VjZQnIu1>ehOcQ4>tNU*B&</KsuEasJTX4oX&5^*r_GkK6RR!k]@jpOq@FXg^+T<kf+K6q_(G
%[=pZjC<Nc5!lFbQ[&Vp="Om9BM"g<nUt@b/5>C0j2JWu+4TL=ZW$m<@o==QGp-kn>cS*K=IKHjuTrL@-Snd!H"`Wbjoo*c)h-]`c
%=HshQro`GNgr%As1:rCglm`NI5u5NMD^l"Ccas6>[53hD/+tEujR+N-17IC[a)LBl]U'VWZmu.h5El)W./3>^jM%6O0mKWIjG)g%
%WnhpO:E@-'nuDRam%\9h[o:J6IXq)<>jZ!P;'ZX5!g"S3QV@Sp'.ZCsKakh_.D)X'G,'Oh5D24YXLT5).'1s,"Daa8c-["I.`#\Q
%D51dR*m4GT$mRHEo8QT2J7*6Q=(#p..jGb#2uA=D]J.8k3,29c.j6t5r/9JeIs]t^;iT\;MZ&ZLA>XO5.64Ll\QpG:^fm#tI';UW
%4*pOH1`WDG`[#8;]Hrnp.WuI^=`reiB>IU#![ILM(AE0$d&u7`BRcPajWP`=B:$KoL5D\T5QtPsNCNQi3th#H@jqk*&\F>DBL5@5
%Td,$\V?6+Tdt-']Ep[,uPLi5,#]>OG@(kE=OF_r8BKHehlGFQ]dCN89h_'h8m_X3&*2c!?2"$1gnNdHW%m9i&F]*>No@S?4B(5N*
%RPCRKa^$jnG7EA8qs&]1;RAn9f$lmk?K,bE`-fs[@iYsh#bAHMcFQ/a9md*=3'T=HjZ\$:9["W"OW`#RF+_<].>F#NkJi/:SZ;U2
%=mg@_a+FCQFg>9'P0T`(-bD*Gj02k5-i<:M;Y&2'1&UONCu"It]0GNU=I0'$/h+TJrbVaF$An2-gpqiVrI9h2<[3a+'IQj&$h0-"
%-i:DJ.Y[.gY>oRI^cEh4*rsi&^$3k^rlCm-]oC/,c%IUMq),A?Jo+Y,#2.lIqo*QX`V\[62b[6>UqkLj2bmkX#D`qKQe.5oTg`9)
%P9Flc@1IWV'G>M(08Zuoc-6?0;%%XL>3hmaB[Q8#f3Nc0j,7sX$krW@FQ!a/554_(i^l0UO=/T;gXX09,63CZ4X$QRq$PQJBbWc_
%Td?\][UB;b(Zd,RJC"jgZ>jf0^FNh0SX[XfZ4N6SP42ss->gaiZ+D./-_BD..X::Iqe+e"$'MLFA(8I':C[;=BO[LmrRa>@Y.n^U
%.)>Es,-Z6]@=s8Tc(;9:59k7-\`,&Ng$VD%hui(Ki7qgm%fq3Tq\3@9QE(08Z`187`:OZH"")km/MG9&Fm>l;,5Nh.Y$RW[`-aLZ
%1`;O<^n\P")8`ppk9>`9;"(UmK/FhKOuuh(<3GB?q@CR+?4!k(rk2JQ]<ql0nrdcGC`ho2L0I;Z(j2C<4j.J[.e`SHd1(Yus3g!?
%JJdud0Vid4<\G:>$eG>,)JpFp&G<8"`'0'.m_7=H&+NS]!q5=C2UUsT]j=CCil:"dYbl-L>G__"aGUdRRq<c("TGc<q7[26rDOH,
%g_\caGe$@`q[`UZF,o;[A#4W`3CC'U:5Q6,:rhFAcjY"S"F$9MQq[i=;&>YN*ij':R4rK0r+P7kDi=GGa)iXK">86M"5j8[pC1_:
%Ck3E73MiG,D-TG1WPPJf#S[_1]6Z'0U8MJpS+b0cGHWA,mR=9/DA5VuRTq'C3()Abq0Er-;^(@ELs"l5KVts$phJ*nrlFcqk?ELs
%,'Ul:F1u2mp<GWNAm^WM*EJB0LY-k>dl30W\/%,Qk.5COLN5Vlr`hp`:)EDlpRD76<2EXC74r+OehP"M@3SANonrpd@u^2O0hHtn
%RM<\/WB^$6COC7JPVVaB_EX/Vb6;&iR?^4$L?E:#SoUjLqnq\cjCJ*?NB>gPp<sA*RXEqs-blXaLZ5<L(DWgF"m$V%/G9)@l0fLI
%5KI^=X/"O.WIVle>SopQ$ENfD4'pr<Ob=9knOikb8MIR>>(Fd71F.OQ,b>Ul;1=3!\ZY<#YQD>J/>_!+(M#$2RSl&/:e4n]/$B"_
%ch\e`:/@kmC1),'/ShD>[E6NQVI1d2mFt(a??Q'0WcZckWFaJ_,bu#JV._UX&uKF3Dqq>CAWiqAPbBsR/>JLK'@G/f:e).=5%CH[
%4WGBV5+0!qqB7:n@7nqm^'6$*ocl6QL8n@ueG_FiLtU$Vn`X@b/9)4J<;*&3Y@9Bga8b_P$OUq*Rbc>[$2o-1@qc8hPU77-bmGV7
%^V&Dq!6r]'8#qugS[Q8#X6r3#5J5f7<[C+t4"F*j[.?#0>DU9AM&eRL\HQl8OP+L]mW5YJI6meT*Od![]-G;2aP)`sPc?lC/&^Ue
%Mak.Q6'+1Z6*iu"*jU5s!:k_U>1Ohq(?l=drGQP\=!VE,m"=(/cDs]rpgjB&*Xk;."42Fuif,kUcW^9#-'%a8Sa^sY$#`&c$*T[1
%he)_OS;_q-*eI/rr+SDQn;"j?0S-+(lfdOVhgmOj2>R!,9XJi0,KIq*ZjirNJ%o7tRX(Eb#WST>hD0JUQ+s-os0q`>4dm\;EUNu(
%+8U\A/:d&t?QQ&0$lEZn#%Tn27!g'pQmN9"Pehk<MMS?Tl<Ln\44Cm5`U\Rj1ZgcAYH4h,bX_hGAOp:)jkDtrF#kJXs20&cMYMn(
%SbX=eoGio/VrnYd,]?04nS[9V<*k_f'gI]2!Yr$bbg@jf=p0<>`qU\+g)$b5^0<!adE#T*PK-O'7,Hf*ln\n5I>.$aY:jh\Wc<Pb
%eK[PC]5rD#Eu*ENcj:o@`Jog".t^9%6MO\i;Q=M3h6OnTPFm;F%MtD"#!Up&gWXf,RcZ@d2Th<t\SCK/`F^5NqjQ;!S>Hj7ab43@
%9isncg(6doC=j;62p`^#Mdr($FPBBG)EtY"G(=1K0(i=r:2R;jH`XZM@Z4NYZ#,*R)(Bu:N6bkD(n]]4MpA"rO;O^E&@5-Q:>U^e
%Yl_%'"*6[YmsFX)>kihUQO7A&H'P;2:[5S--W#H"Zr!XY0d/`BeOFo$87"?RZ*>,N9Q[C1-.Q..)!9nYNKlDm5tOiP./OXdIAL="
%AD-2OAiuq4%BdnQjEd*E5_asnokm(GU'seM+H<Z&WO"8_nu@C+^*1h:@0=]Rc$5M=qSTgq3\2J4M#iBl;^sr)XkU1,\(;""lZ!>I
%m9rPD'R,cO'TB>!$BCTr5KA0Ge\/S/c-,E)O%>Sao\43HoSABa"69epl1Al9rDEE45<nnE\S:jQ8f5TGV+.3/h-T:UR%J;-gO/Kk
%^tV.+e9-!:c?ui1>0T:Q>OI=0&JSL;5S*?+g/(]ZL9dUTFtNF.fa4"b]Y**=`)7sE-YP<lctmVP]npFn>3q=!S,:=<CWoMbJ\m;F
%f,u%b:"IT31c[daD34:re*K4^gUfT^VtaXiFMPj"aaTZdI6uu(!9AM_6Vf/BE\Ktu[!Q?**9oJUZ(LC;$=3tW%#A@&0os$4;l.^5
%\r^=5AU6S'[c!klfoQUl3`D/G(C)@?-u,90e#4f]!6ViS,)NQ8RR,2Wm0N*Mhr_4af"nKtW;C2F;Jt7q=`9I<#5=$.iZU.He42p-
%CaJjj(+7?,'?D2]HSD\ALl,8D!/9ZE!B'4HhhL(UFgH^g%o?465-i4S)jfjTjRO8!NB)HHR?=Z(4,5gu0G%oICt;L'#*"=FZc9X)
%2YQ":^`R/WUK42f$X*\02H04;1(n!",fr_2"/H7?Wq(JuW6ER9W4H](*1&6`mVeEKngOLfdFaf"8j>T,6qCH:?1o?'?5L*%Q(dIM
%C3H"cc;ll#h%Z=lF!^EU)VnL\S70qbMrL[(`TYS.>p^.m/hu&ufTm&\6/G]ZhB[BG>QT0=d9Md%1L?t;s'u3"^H=p^,gSFQ_:EV,
%HATNPD)n"m_r8.q9O#4M<+/H4*S7Y"N8"6#E@1tQ``F`#4fK`%?sj.QkXD*\^)ID`S"e9?@WJ+a=:4ZP&gt!4LW,p":N-oS*1QCD
%mLe7Nn=YF@mqpp08=4JIgDP)4ok,u%T([k?rAKg&c9#I\]lGs0TB7-A]+GB*=`orMVP'k2g*5rp"7q:Sr3u=3/Cp_dg*WT\*6M-Q
%]h2>0e2:imSc"]Y'Hr-OcNYOA>_MHJ^H$jEY`?"K:JY@8:Vbb,e)**9n&aB.V?FhUGVM:A1Sc@UZ702"-.uCgJK=tR<X)c/\Ir?H
%fEjI_C'Gm/%$"md8?;iBi7uM;9]$6sh,b,L@]iJPW5^VPLB6W?'HU4.E.)qWR`%ip$Zg`WBq1>.>_]&*o$^jsH27OSh'd(D0]h#t
%C"k@Mp'"?`T*>]LDI``OY%Ff7;1s^<ZI9G[hj1DjCiu2RNtl;qW:$+V,ossXZ>$NQDqWJ5f!T2*C6>DH12[kG*Qd!S-!+_O966rS
%!?B;!>QolGDB*A;l]:OK8XrECcW%u2DpsFlW84=&(!7,aCY(NVaChW,/9`QH!ED4bZ!>-Sb3D)8@3*s+,,J$^`->^>)Oad0DV!^W
%*h8S"Eco:N/1CqS]nYVSgZWHYF:\]$OQOer@req\hD@r[://5;B%q4*?rLM_>r6?\&=I6-9pR&XL]Hg"B=cEsj$9++`f^nh&ELRg
%r54,fR6\U1hotE4maU;'88]Si\b[c"Win<7Ob+TqCJDiI`*tF=*-"XhJRW2:WC4DhYb\e$XPC^\Ci@$E^=H#?2,fXA7$GPZ'uqh@
%jN.]XI@c+ggM';;qg$8lrZGB7Wb1l'RX=hVe+YpY=a%9>5P0SF'Sk7IU*[BI3#l'-UFVoCU*7VeTF$p2P7Q?V\Y7^:`(+OuR?5=u
%")Co(X<_kTVo^?kcDppZbD\riA2iUBD1k_>ID1d&DgmU'0fp!*R`48EL#.IVm&%71S<r%@!E^16!>B@u>;acIQO?,#,0S"XJB6#3
%BRJ5KFQdNi_8kJ1,6g3sM"Y[P!$n4>kI2=)0S"o%S59k\gCSEc4,G;GZAmaml]&TojXm\_`bE^hdfu+5IL=t-=V`LT%#I1oaYu$8
%VBKmeiY)k[SC$Dr:?9$sJO#+pPYsGRr26eG/r6LWj#j1O&%&9#SC^o+q/!GKWJi+m?*,.aCJ3BNB4IrDk&=<VQ8G:?KVR'4r`aoa
%@U=#]G8cd?LH^k-gCSVWdW)?,1.,P:S)a@\j-R5X)nRh>j?%88r0Da1'-66nBAA8QdlV`:(-uoqBFpQ`h7i9)IS9VC$Y\=JP<klE
%K%D*b"9]:`L@;GGhXe7ioX2on>ski870r&'\=neGX`8<4(8RhD'J``Kgh>q]&*$6KI8+0`,Rml)(s?8D1GlD]eK(0djOnp1dU[:>
%#KQ'JX$W5''0YeD[D$f/W^%EFF_]+Gm_mTd`4=fgHGF,T[QN1/O@<E7=dflF9MgZN8VE2?0PKO0!(Q!T.2n:HQI5j/VI$l/[kg)'
%!e)hmmMr86JX!iYaB58c"DXtA'hrM:WU9meA]AQH3Kg3B`Rr&cjl=6Q?f17p<8#fTX=rGU"gD>nP;!_Kc5;S'S`O!ui0"kO&HZBU
%2sCI0`uHaX:#_rsblU9RhDn_WaaFN[g?+e9oWSZ1B^CT9;5u[<@*@+1ngZ6"hW?ARdVJt@&kfGcV+MTlbMZ[>l0_c2VB=EF8A_nC
%,='j)o=W'L9T[.WL<-bFcNI#:md\@j=c#qd8T'RoC]bV#(4_'?N.%KF4qs(p<Q'E6S;11<g&p2hFkkCtp-<D>.hjcS:XCF*64f2-
%AXV1s+YFnfYh4<")?[mZc94FM?d60ng90Yo?:c9h7<-][4+Ruk8'%4=1&.t(;!9.%7Bk=ujG].lFp4,hV^8:l7EJf>Nmno##Za%H
%@c)iZ&[UI^]oH=`<]()j*?,bIEdO`)]i[cCih%bG)9L/YU8@@^Q^Do"ZdsLZ-mB1Yc!#>Jd%RQErih=U(D%:#/-8o'>Gf6fVjJ?N
%MIcbt,qQ'$3Gjm[Cd8Smdm]li7,0o]Y.f*C1XCKo>22CrlXIb_Xa+1DL-i8T%XL>_2%@lRENX3&-,d@`eN.LA(LSkL*+ll_j;$k`
%F*/:u1b`H:6<'=fk3@L0rN0'CM&F&Q4U$a:_&f$h/0m11rRma0*.hYT'[Ffl$W@a;S*QAlh8?oX)Diei)q8^$+HeuG%],6L*+g2_
%h^kqsLT>2Kj3ki&r#9IpPI)U,\>aN3L,]]P+5MUYj05@s1P\fd4Qi[E,JcCJ1J#En:&1KtmrrZDCh57#_1>6f*Xu958;RPgb44uX
%I[<CnL1Jc$)1hXcC%-F!L8PrKAh5NZdnK#[VJ9>kKQNadat'4j0*KcWEIOqV6hQaC![uc5eL8nC:iEK#i3$[3idPLJVJK1Um-aQ%
%`1)sk%*eD((;h7K&,S`V8f\`96N=4[+7^[k:b%EoHYDX&?U.MpkUd66Ktd%eW,A^P(Dcg8Z%Pl)7a%"-kGHl`<4:mZ(5OZOO(A+j
%nZBmpka7qQD=!@Sq6/;f%URr74l$3AB1gi3ibiQQgkb2mM^Zlu%g[L#qQRBs3>$I(l-`&Kg&RHmhW6*l./$5"*+4Ih+CmDDq_jHQ
%Bq,XSnk-/Dc`p7N!2MRF1TMa:,bsf[Mo?0tGVC<p&GSMtIMOb-<HMd^h*h'H<ut1.lBBH,o0"'R,5%lg+dc#l$?3<!l\C&Ea-qnW
%=Ls$_U@;Rl/imo*%S:roOF79NfTV&0#Ua+cXqCU?GY[^nI3jI1F+qJTAg1P8/.lqB>0s/<%oDb)U#5"n13lf?I;t3!Wem^QXZ]k%
%$OT,>+]M<aCneI0BHU!U!Eg/+[@0G((.<>rR.?$$BM0Gkr+Y;KATrN#H:+ikb.!W>iem5/&K@_bdH;.3BE=`FGZZH;HnR,`95?:S
%qWjYOCH35g&0kts3kL4;3BYhF"+_7+ZuLXNX"M_D4cQ61lb1I1pV2UVEHgj0=+1)D?QT44^]*a66ZIAGqg\I?Isc_Ee'#N*qtIl(
%_b#FS3WTe;__K%VdRqlQ/X)E?_Z5@(7Ef-pLV$b`IWACU=Vk8[q5:]=VX(P<%'LA53Csu'3G?t(97TpP"'(DB2MTbJK<(utSPa5e
%3$`T2iHC]_fepPk'r-GA6.ki4eX,l?OZJZMA\pf^;s^AIbQm^;iJ>nP?q.=ZI1.+&!%hR`+)a.1<P<O,T<+'ZD2"(d,>4j"W&PD`
%mdDQGA3<s=:>8M2>0Y!2^:o'>8#'k-f'!BA^]]?e<<mlcK\`*WKs'_V+nE?_M]dk"^-]"=W>C:RG`eGFGmW4]^u)nrr:56k?Q^s(
%gIs\dV3'_B<ah2rXo%[n<.ZQ9nR6-*0jd59;7C*uXkAMtpC;db*f`k90GG/HLBE2Y2'870+F_sdc]Bk\nAd\,FOB;6Uk3!/70[_^
%8`oN-."W$[+*CRT5+1NFdF@*iJ_uYrLT(EO"J9hQs)_?/<(VInM3j?E+4Y,l\CjfsS!4<D5NH"kHLat[b:E8P?n4:LTBuI;c%X`&
%lo4Q=l>5\JH6tY%lEufhD!8;C=60-M6b4scGoL[+JbVogSJH^?YX^6WFgai12&3)6;V3Z'?B4/e?3#c'$6f)5PNoHK8?6,)"BKUa
%&K.dnY^WB)F32r>QP,@'*m=GB?oN?f&"mV.kTuY^#gY*Gd59.u7fNfC(Bs?-lgYT"XtD<QHs5qoR?RR\=bOHd&4n3LK\9u0FMEAQ
%DQMSC$BNa^T8QT[Ep/7E+Bnc>OZ#!fKmgknG;nuO'GN,prl6u]77s=F,T`3BgntH=ce:HOI,sCY%LelRQQqCR3AQPUTr6,s+]5Eq
%cC6luEop(45s75\W7iTDIhu_RF64[@Vam7K4</aC<f#e+k3*ba.>`-<-X,Kl.[Rq)mfp&GO_&=MOtgWaFeS,fNW.Kl&0oXQE$'bM
%B?u$W\B`9&rMMCJ2ANkkqf\9?gM5>e2tC8=Q#<<U0oMV@1:AmL(Dj$l9S8oi.,Sl!3=BT90%>Yf%a$V)NNE5UW06:i<j@'K[hQ/`
%<2XsaP*+iX:B[9&jUDdfNIuMK!0rYo!b'tR6)h1YqdC6JU[069(YAnC07rEm4,VYHY+,-B@WT?Z'T/$)pG2jqi<2ip/g<lYE#^P+
%Oj;-YC8-@`lFe5G&MZ1s$4dLra*gi<ZhJ]+Vb^YO';utk^<LehlXZa"91:_[gFhPm=0ies742oOVS6-[fQiHG0[i3'i["%LPO'P)
%AC\:K*JEABYX"QYlh?E[_X&b_TF'=?GZZH3g<&ibgKT;C!D?"rZlE^S2r/rI,4mI3U+QNKehc+&(PqrR])?ak^IbuO-Ph\FKI;VD
%AbhK67[Al4MLjXK&L?$e*[#8'Kqg;7W1r3q3hi.NU:6gg@2t@41?gfrlM2Qa7_Ir)"0LOGTLU92WD"A0e(<1r/f*S[gAV7$^7-p4
%$tjoR1kEMc`>=C0LIdLl)<JIWI=VHfpT,r.MR0?S;-Ql'G+n3`\N'a%TYT\9FTXR2\A^YSVAdtG(_o:*,boLI`uV)o9@MN]3I:+7
%EgaSD<XLNX9eJ#de2.u[7,c^,De[VQQhbS.lX-n#ii@5<3ZXHq3$;D:'TEoVDk*ql)H5X7a20nWlrf@08NXkqSeEeD:.q&i?mn^-
%FE?.$_"uD^`RYkWJJ,Dh7r*@bl]m1_D&j%H.nRq?`dhT"/fu4;7[Y`EL@C\fqlhTK*fQ]*kG"FGiZ6H0%Z)rL]D)$:J;iG;`+TCH
%E=7ZnX^n,1)iC$5c4Ud72]0P,me_"(KCIRc4Wf&h;&X=>RaXsfRL!hCajG+5^tG94Ae.toSjbh3BRJVB25Nj7&<m5ACo&Z4rk"%\
%?.F<_>V]=cr3"EcZ_Mc5c8s)`[-Lj4FX/mfPE9dF/QP(IcIQjBMGgn)kocGr#QmrJH(r,&U+sJrlA$h!bh_=HN./H00W$<K^.^>R
%k:2m5d69qZd@?8*;]Y$R\rt6ac1=7#EL>5;k#fRthLQs.1-%&N*U]_o8Je^&eq;jiKrVTKUZQZmS1YPdK4(+#\T4kUl\6QtHXk,"
%.Oh\\Hn<9DQ-O10+TcgQ&A!f&DnIcc/OO$;i:1t-5=d2YUGR+<[ED(%:R"#Z;\^U(O9S(C15`O`MDp9@+]$#'<eQ9u<q=Y06"Z@k
%^IZV2"L@)od3bU9CS;XJrOP^PKfj45gTLY?phCCZe93D9035QWXe"cnTPSOJE,F:oeK%ifo&dGbWY*mD;gZ3-D\mgRKPuog-G-?'
%>nu)<jN\_91kB7WT$-1iRE[-9&;Rga?g[UB9g0?`p>FgEI;&nCmc,o@\p8>kA8sdY`7Fn)j#PhHm#JsQVqJVdQOl*mkF6Kl+ahh[
%\SK5k&8a@cG,:Y[+W'5sjV<[LJ-SG[>4GY/k`i:";tsV!oad`OX]gb$#/TkN7%q=sRgXY`bkB\QfcCqD>'R9@'=4>.V;/!'g8l06
%@Q/p7K5(*4d;[ngE*\qcn1E:nh-MFa5/kBdXm#$/7ke't^HRP;@[<PqSfnqJn[N#rHU]?'-9/#S7n&REf1s_D/gVVaU;UVRoX59K
%A)E@-[9//J6uAH9RU?%V$n'&,%mKb+#7IG(MEAm\f%uAt*eu9gfQ4MUQ'P(7Do9<6+M25rf?hp9Oo45pmIUtVHF=do"]r\I.`d%b
%oZDAC4a>8?:,G@3XBo9n[d.I1+S,s`2u3<f53BBn<#MqnAnrp"7l,\T,+/:ML1kW?@"BYOi@9/Do^[1`C@TeA('neYEq2Dg"e5pM
%RT&_"*9d!A4IWKCOFB(pg[Qf#ocqu,o`YLUo+cKR'&dhHLp>&R)lC"b62i[f5cWYkF+T%,79VW04#7D7%l4n*,QfRHTP@%??Vk"<
%BRPjZ.9Eo2*2JMK=Cqk&X5;70FSarub6B9JM:#q=[pa;*`S$A]fbL`2;k=5$m+tJW-M?L),rLU&)^:rV&Am58Z]=B#*^#A;I=jl&
%f9&6kal>^2q_%Dh&[X9^]0htUJ3c,H9TCSYV/IajW:2Hg3YXj--W<_l`C`2i_k4[>*dV_Y\]$eGD>r%s=mi==$'P>ar3'[K9C`Gr
%`/?90F0QKHC&>9%1h10n=`_]X'k`/OR0PNNQPof=[Q`&dqZsH2<arQZJfPjmIsb?J6',A\8DVi8;+Jh3-cm1[0U!E=jHs:GRLpUl
%OZ1@qbo7,Np;>n!OL/.q\Q0+3^gQ,LaB<GfPP)j&?T:$C'&"*fKuc8@>T6^O^7F^5h4f!ka$?XOdopdZ\N3=ZegZW:&m,seBu)pg
%/gK+&^HVHZ@aTVK8Xui5C<a>-S1s/nN/njRWdX=Q$LJAUl)-lTI#A8CFI)grXte*2`7Z2mC/XaL4<D$S/b5mpMV(5Y<OLE24tE9M
%U<oO[=mWa,.5dmfD0n9n?eDf&Z*/_JKKB$@=rNR@N^;._h+\$7h1X5MiNd/qT$9n$b_:1Gk*oE.QN#H_HCc0$p1S?5gYVC4k/"W1
%Jkb%TK=/\X]k`qk4h%K`II@,IqqkAj#UY<&E#eLb)$u,])G`RSY(`^ZR^Z(*[:;`pRWD].3O-tKXI'MdBi33OEEf(RDWaNGlbZ8Q
%GKY=<97XD)lbJLF!PEbhf""0EX?M&VCm)J6EgDu0?8%@`Ms03>;tJCIBIgO;G8+tdh9NsUA4$lLg)?<QF9LjGYt=RdU">4]ql*L7
%\gl%/aK-o_hKN?0$20bHm;fe2LdRS3hRs&:,p[t0B=[IWX/m1eC#$l4<TCq,D;7jrYG+s#XoDQ`Ergk1H`$i&6lDuZp#8;bK]4+Y
%hS+]-hkSofb&!QRlp7km>?Yd7Xi[a'[n`$+k('[?B%HE06a3:+;(kQ_R;"_`D2htsYB_l3eB>','_X=LpAE8'R.9,poRuSc+QC$+
%LJ\WuCN8lB0B7O>?jSD=2_r;gVee*VY2F<K_:<"tKs&M.(#neg''&ADn*$-F`M-N^!O%Y`OM=I2;)tuNo,PPA;%K_dZ>:S#(XpFG
%/ZcT7IL82A(,KuRcjo;/_1=.LgHgSB_bJ.@V1aYoA3#4If_<mq3%^^,=Wk!,N,rmZ)%f-Z44hE*K!qkm[`ti[@)-&/UK6aY$*$YQ
%?J_AmJ$I0)]$%)G?d$k3,@6b9BFO[G#:T*+Hi0#8D^"i;68,ZZN#nP<Z3FP!'hQLQD1-*6[hFF4c..;*!]sSTp7537S]j@I]e.n*
%0l:,L.")Z'JChLSG=MJ<UQ4BM':ONHe9Lgu'"QXu>e6mN&Kl.H]4K%$Zai`X26.lI%$9@I67qSXE,F6c]>'d''lB\sf]ia07f$,$
%NB'ZRY3#$,3m/9K[B>54U3XCW8fo@U&H>Np#\"XZVj@K(l]u%MX;\C#,'Lct1CBb/\fVceE^*I<!psOk7`5kOnd1JB/<arnO"Oj)
%8o/0Leh'JO]`\HBA2A+/bC-kCi43jteDt'f_*5VRrm\Vam]5Pp+'ef1[b%mo7Jq-=V&`V$_?#4hO-&,1/LaKI`uJ^G>i,@?`2u!q
%O3hU<Q/+J%"m(QE>?5.E*J,=)GgTa\J8Z[Lm$G^+Pdl'QAhdfrL$aU>lFVH`;9<hA$/)dF`-hDi'na\5>e?uE_ca81P2bLcD<"0k
%i$2=f!fA\,\J@5sh%('`LQtt[VgM"*LQQ>T";Ct[*qakq%b'#qOdf/<S;j:V=Uh9?o6@m753QG]P3Y59A5\nt(*5Q$qBs71HQ*<M
%AiBM%]`dihbj`A_\aO:B,1E6lZ";2m4u&g8D)sZ$<O&;:d@4b;fh3`4F6R=ZQMYR*9$O;-j'E5Z(H1]YgfMlt<ZV1IXDMtJatXTl
%cZ1USL]L)!h"E<fs4i]E[]QpDD9*]sXnOlc5h\7RcG26SIa'H`3sIbR+/#G?D!,,@5DK!/SpK4]=NVrtVKD<R:NRe<4UsUuqfZ5,
%iou4m`+a",rE:lLXPI-29Qb(`Phh:t^`jr-/Hm'2%S3#('0CN/n/ZA=cs!H*nE0t=j5-)Enj(K+`,W--EYN0C\e\&!k4*UDI@R+u
%Q$tM#`Po:`Nm]`>D4Zc6Qj$?L2t*OO"A;AEO,R#:[jorn=N9S,MlB5P)X+#fA\tl,p2,)D7k3"+WtWak-GUA!)oFpSH['gp>M>BT
%L(nsp:,W1%\.aSjJrqi![GOcaV3tgN/chB:2+sSuFR1UU2n$"((&BU]kGp`Pa6=%bN3UBU?9osKTjc+sgRW1T\<FOB9Sqes2AAGi
%p*u?=[GX/&T0C9._H,SV,aXq`T>u(Qq5MDd:K9e76U*h^,>A*S7R3^;^+n;3=oPI\n=D3-7Zf:]ANRfB$7"X[TjojY:e%S97Kf&X
%6+mV_[-dA;-D!DL>D)3,i$h/6jCHp?!.FR\r<s3?6"!p-C#\/HReN"_r_3a3DfF^-DgVKJbBs59g[Iq)rQJ0(9cBlPgSn5*,/mJ2
%Mp,/Fq4AWmk<JTJifUL@@k<ah5u*-p&;1kj5RWmCo"Z@J('I#n8N+T;#Td]54:3:NaB:e#VgMH,M.q]@:PEBBPG(i"ir2lpZld+/
%-j]1I2f7?Zmn^Cj2uE>bVX`*uQZmB?o=GP"o52[#Y+,6F"Zc0S^j_$;ap<I*aY+Q6-?[IPmL,6S&KUV/M)&'7d/oWR:Ue;\1\4(j
%V]U3j>n.)\6C3>CQC7:ZA=./Jai&f7_/LP(-%FCAgN#NVnNG<<$U<(&\.`qB$uBm:^+/H&*IN=GrN:Sr_(6iL6mBTdM_HA@4""3:
%YsAmS";db*6"4L1]>m/UimR`m:Z[&@<*WM@bNg\@[4\#=H,$psDu:D(U<=0o\Qpg`C5o.'(k9`0[6,T\X5I(u/AoeBo/saq+b]!Z
%Y8_]e7'H!IlKFA`HnJ,u<7%7NoA;h;rQLkfma%SP6c!q?#\GnZQ>fFc,sYqlNYiRFGm1at9Q"r5*#$<M8;M)cC^s]UDHcg_g[6Es
%<k)*deWE5"Cg2.]Xl3%nJ'Nk4*&JHDa/;h>oI?daUs44=k]G'&,4TN#)Q?p1e&'`k$kV)I!P(`SbtAH5LM6/'YpPY@VabN99?R+5
%$Zd&OkjY1c!mV2Fq0$37a,c&dAeC4P0uYG>>62e,h2]e<1l@f5VR\TGEX22,lODo"%TGZTB&9&j-[G%4S+A0NmR5--8fqD%$18>5
%RtL4p2/SKQbOjT\S^N&8nn%l)7?lu9RZ8<aIObrbRbmpPBW5K\S4V4^fP8fU7hZ=h1@$$TCtI$oB2-".k,LW)D*-ukl^3EZg.Y@!
%WfqVspkDcDL3\;64u'<%rSWm+HW4a#)FU,bFQ[O0YR#Dd]haFj%1teAgId6\39q%VRRlR*+c>M$8Ab'C;PHH&B-pTkV>)!&VdTB1
%'Ogj"8`\jjUiiP6%4!8,M=ue_P`_$a_Z,h#TTaQt61dB\ROuU`_,qXCOUs9r=b\3l"D+6>0iGVKSnG8R(,4CY?'K>p[+l@NgkFl0
%#.h=)GJ(3$i,,?><2t)E+L_>KK9JH[_92PC4IAN'<OI6j%"^T]8>:r8X[^FBlkSS*kt-ubKGN]BR:?4U1(''s10K6`pB@-N(dI@;
%\@$Kt[8,:R<JtER[jRi:F&_,%V`A4Eqh*Op1`OMu@&Fs<PX'!"BkpEB<RZ.I?3('m0oXQQV8S^oc3N"Fi`k:6^7>/udRSYF7)kW9
%e1+Pi5QQKm8C$utSBs[r-$.HOoh[qHoVrd"Ojl`)k5So6Tk'-X!SJE)]fJfHK[@!Z\[n6bIQ>HmU;]QRA-$U#L=eB.jJQL-)TN3&
%?FinqP1ebtQ"s<aII.F1<L3T#g:qgkOQr)4Ufk&B_Dmacb$3iZBH0j,qI)ukoLqWQ8.r^*VJ`\*[*0@Rn<YY)1adG!"_T%c1)WE$
%IQ=8F#n\S;'<PSO7!A8QnidX7.R&@r8tQ`MArK?;7L#IrVg)LU/s+cZdauN@gnOf?:'k!hq[3LZfZu6WcU!?9%JA^TK""pN:piD8
%Ps"N'$u2ceZqQl-8XY^LQ+rO'#E]3oI`K'\&A%Bp>L!pQM^5%)E`'\&f6KH0LIN^b<"t`!.jO/SmUj/uJRW"mM;:3j<hlTF7kt[X
%biTN/S`Y]bm`\5OlBV!V-k0inMhhb.H*I(5KY2Nk[@FaWJX5]JPpsaa!c8fFX'@;.knrr9AJIID3ebHPP"8gGX,aFhmX<FJ0TMQ&
%cj@(HWR![AAA6dDnW#;.EBItbb(M!?)NL6j&g;#>SLUS]k(lA>VT8eG=j'E[d`>`aa=E`PDqTS=[V84"4s'#`.,(sQO(f9eWptPp
%0gV$?VT8FBdCm^0Hg.?f&-9[7n6/jI0X463l]7LRMul8C/g+1RpmD7.,qe:KcOY0GAfYD4WEWgCY3nb<cb:\Qj),rc6%h7gi(hh!
%Ol@e'[1_DSb%c@#PA>b3"G`:J39`K!5Fi3,msN"OD;)buKOne$Z=.E+RpO$:etdf2mm5gO\5@Tkj4/H480Srn.=3+s-N+.JQQnpq
%;^a@(>QDmZV-;#n3eBYiNQA<.f>rQ(#:F+]A(iMp(t);B-JAolk=d3%/8+!FZ;hj.3"9+oL$`YJ*-p#h2bmK_V/aV00b5eBaHGQ'
%[leuc>cA%-.d`n5W#3i;\DiB%@tTP^jMfKE'+m9X]lbG!:F[;#F#HRPS6AZ(FnW5iX(TcTpFh$f-iDSE@gp+/kEiroBomn4-J]I:
%"J"m5^P6shhuDa*IfI"bpf['H((^Lm@f[so\/XuBZmHb;f__>"iY\-pZOH4q6XK0c0d8\XDIt-o,KN7j<j#/!dOPG!k,Z[C!r3uL
%<*LZ&b#8--QG[s<o<IC]Tl4+tqXs5hgmoU<+@&'E%`RNuQ-=f>`\BbRfp;GOeA#?npOd`In3B(A\j@bE?Z4G4hcf:%l61@]*r?"3
%m.h9^0[\FJ*8)-8A3;D;g(iK/lLn!)WiW.<6QP1tP_u_FH5KCNjBTl61pL<,iIW?rOA%MLs1dY@C1I*'%W-;1oVL5^oOp3:fegR+
%bfhmk,FtlO`urP8`d>qn`M*Q;,8O5[#d+nI?.29mIOb%lrgbY+n+C@?*Qj`#LV;mdA1[$nMO70HdL/e<>%Aj-Y>!@,]_HsGd<'5Y
%?2Ya4F>O%]gVua+]2%c5HrKIFXsl>!pMO'LN[l->NV=MNUY"ob81uFgPC:R/.,UD4SrZQT9l1n2Q2)^6lGjN&Dk6FqIrTams7m;l
%K<Nn0Nar)i!Y,'."qCKR4.r**3HSL)Y!2d*3qC2?cKn*S4)uj8JDWpE2!dsiWPKCmFBeZ/%2t,P5%B)=[epX8[HM+/[cc7d1I"t!
%07QnqCMd9a5>6O_/qTG!(X8Kb*CG*&7rQR89u:Obl:^7(D6p$NhoaO%fD]RA\<jEAYubgS/K/RQD#rP9>>=!Hing""`^]bS1uo[#
%anm%`Wm!-fnlfVV44XqWS=C9hUtBX.2!S2=::^pU*K]5@GPKE#4XG.$P>_u&B0Q1Z;1FBQZc\%A2kQsG\PG!pjqmGIclYd0bjaD'
%hZDt]R<REHN<so$)e]O0A&M[To3iQZn$UrKN==B>H-jEuD(4lAp(3uZb.u)mlck097aSU7;Sk\iT4BR@Eh=nuD3AY"c9!i'cjEP<
%+^.#GQT8<ZV3rHEHUD6<+208PR7n.V/"#R\PX#:L%&tRR@o=F4_NG]`DbPgjL9>N%_\5.NV?N#97;-(@_uV/J>%>_jEfD.`T8IV-
%mO0:C/S&6T1L)R?5Gnam+=I.Vo36*8$nq7q(dl-,5;X_LkrO\a50d\U9hpP"C`!`VLmOnPktmV9mtU>\`ru,j#@s-]J6+f*QSVec
%fs)+^Qg@;C<P"BR[F9cA%VEdOH:K,?0@/1/A2paXU'QX'oa&Lq/2:T5-#M3a([`%/c594k'I5Ti8mKc.i!;-3+_Ak%i;$cAef`-G
%Tnpp[/.jBZWu;f!e:A[lB$LK"!R:L$d*i'?j!t6^euD66lS*e7K\\l<fk12VG>#lb:bKU/C7u*E:4M%7pqetnMlE.*e]ess4C$9L
%'9[jAGmQVLqO'7D++>jY),DT!X5><5bWaf!L8]OVh"6YB'OQ[>F:aRH]-VqaWF"C3OjUbdqUR`F@1PdScJb^JC'$=DhTZlmfP+7c
%6jDF^)kV%Qrk@fQ+*:A-08%8e5[T29#63.*Al.i!M`#2$EF"m@_T\M@>3s;2]1_6=YI>0@62&<%paciL21'p'GcYO'EG".`J4PLc
%XBMWgnJNZk*A=PI_h9NO_17-H(M$$6YY,@rn!\*.`O-oUc`'d6Umj>FkATlE`@MRG<o;CNj99Vu"J'V@qO(B^$>%4S)kkDZVa(>E
%'/;mq;23d-B'O.Fmmh'bkYfmR!cr1Con]-[!)'!s^u\V[3*GRbKWL;`l@-0;S$kClh6Z4g+O;3RKl4kT\P2%?5+2Vin92C.&+.8)
%AL$;E0RT:LI(a=/ZmI4*H65++'1u:sBQfsRX[50LHNC/"PSp<C^(/Ede@_tIqF_U$%rc01<E=O)S+<UA^?Yb!'gN6e1W<B.o<Z1h
%=nY>N"!T9m>3#5EJB!_5[>RsXRtbZ\=3t4N&<=Xaq-9Q+_mhmH7o/=q.OlsJ9NE7tNgX\na<>-`,K1OAs4nQA4mb0^R\YbU/epc3
%A7-u$Psd1c&E>"EeO<k1^+Q=ti?t!G%YOfPB[#LWYFq3m=AT1c_n?I`'b']*Y%#I\=`pG?9r(;^9##X:V;mu7&8kj*3is*HC6iM'
%^82VulKR<5"6rI3;93f>c9=(`@EB*rE$2Z)ite6Ydr#,sL=lJR_si%8%%k7C(nPYMrZe!Whc)kb40/JpJ^P2GJLsGZ0pRS3Gkji,
%1pTQ"&rO&E!g-TS#lK#U<U^k-9!ht+.TNRH'tIIPZQG?qeI(Z%ZNa%a1:@G0E!>oS#J=d1ZBp'8c%"oYHti5r]/TT^]uTgA[c'I&
%Sbug[+S0o4iUg.<pfIc-PECs6gM>4A(n.-=g6kZHVEGk%KV>&VkcrddH+X*FIU%mA4.8pbM`&f!OS.?LMP2`+l50U:@]K;[G!;$Q
%3f(Mirgg*TmB-]tY3J_'2faX'%+N>N)t6VN#9OOPV<9jAA$ZoD'bQ4nDTi"BBt:=*Qe,<eCY_'0q0pl-hN<$G`FWbrgb,?LTd<:g
%7@<&WK6C2]l7Ve\FalQg[V(9AO%l>8M1X.&Po!F7A:hL/iH!lT1gC"*kM9b\_NYRS\A?FOW[fh6H.*isni.3G$ig@JC5b3E&-1sQ
%^f]b#MHmL]bD=q-6qC1qk.p6MVM3@*mFFV=WQ@2CCm=UjO@EA;Xe&J4`.`kj+2r8$]uC,>W9WPcS*;0#XdZ^2U/)t14J?i?k`Lf*
%X3^(XWJ1'k1cofYBo7dXX1"e%1nb(Jh6na!o9ubEa*%6+]2#j,.L7<5V^+qcef8R\9*=Vfk\p<Rb9Y+2T`VP51Y@SGY]u\/:)=rE
%CE.^r<is-@:X:fV<jJ6mp@5Pcir1493AmF8;`Ui1:;sZN=Lm?//F*Bfb!"#;UhHAYV^Qa='jstinr7r%^`BgX0Jqs<Q]4];LMeIN
%S-[83JuAl<Dmtk)!`W'LIb%bqMGN:;\S*aZDoe8`fUVX)!Va!3(dTlT&G;=]mT;Q`!FVT+)Sn@>4/,=aC'k6a>?ckrm=JNJHVeLt
%9EMRGliN:>=Veq]HUq$/"=2M*3E1._Ba*I5X;>%$7O]'da"nse&bQBXrCV,]`>t=@MdGY!q>t$(K',T+XB$U%G8."^497O#+NAcV
%cJ,GW.-59<#_sq%Q)*(-/T,H9\Q1mHd&M^Tl:;EVW;^Cjr=9Ut'sbF%L6IETWA,b74pU1X:&:C[.#893GUe4khm:&i_0NH.FZ(0F
%F4k,l@M-?_#aE9oDMrQ9_*Pj=*NuYk3p+?q%KZhGD^(S*`je\NF3dk:G(e=s_\=Mk3j:ZX:WX`NFWJ"pZjmFP5IE.+3I%;qhlpGV
%)V+1Q?b(j0pr-BQ#t=!/lO&#cO-m^U-["nHFC7^EG>-4^8``2H"jP2EO>$[0=E%DU*t-jhK'$H7CM,$$(Go.qP";q5VWE=:#mrW1
%<XHuM;;dUhJ*/AHAJ=A6=]+'Y%A(Tr_F%8M`Z+69;qc17K^4kgT5.9]hram<UB4RH,NgIDW\P8sO&KI4lJ[k*8RXk&O\25qKBO'\
%\`CU'qQ/Y"aBlp4A0a0IEIH!bO=2n=L6O97rQImP$NX:qEra*V&AF3V."thbhG_%I#4^u0a0QrLkP2)&2um.63EAOTK(q`*\P%-2
%2YOjspbHpCY`QX.L@I]e69aW9FeCE+@m!d.FZ0dQL+OY/0Pq$s.S5(q5j;]E[/-KW<VTp`q3)Au(a(iY!GXVOI1$8]DN0[?cB#q<
%jt;Zb+/bJ".*a!)S_q<A7L>B37V7abNkWK(5BK$S.h]+<&:b=<;&rSX\,!!j2YVd>$NP5RC+%jQ/$^5,b_@AIj]<eaEB5l5D2-h%
%"%@Y]q2h<m%69K*-J"(o-glfc3X&Q8;]iRuC@+:s"@>a]$X:&X1Loo)_K0#GkRBOOe?NJ6V]=/"D-Y'i3c!<F(1H^f\,g'U*VjNo
%&11)poPD\no-ObU!s/iqUqHknYn_d7V^4#>0,MZtn]K)SeD[tI8Uua$4Q_2;[(-[#34W1-lq37aZhWD?]KQ!dG0.VgAdp&m=+r]m
%-ieTK>osV6MII,q1p)^MCRThX57nZ4"l[-YCM<<E$d>D^q]WfR0Mm"=Tai]0(2_I;EBAJ^1&/;0?.YrHNg_%pRH)qq2r4GC*k6]h
%poco%;.rAQ!lgqL)Y9\/*ge)\[<Gls0Fm+qSk\"uIOqF0al)SThFnXJAiYUn;5?JqR1a^K_n%nHe$,"aV4)(PUNJ@QS,suRNeW_i
%_hN\P5p8m7NdG*''@;ihN:i@AN5bTpe\IQ@%H=Y-D[59#3/nS%e*DE]W0$'p3&#U8O6l!)5&Dp$k1p<#?`*]3#\hGgHK8V<[lZWm
%W%gVb5tJNJni-Z:M&2:%:ri+H37'\RP6QAi<1^K?4cfac</j_MY$li3Yk?_)cZtoq$=`#K)Tu#]6org8X=WQMFIG>l+^ONaLmM0^
%9U)`G5a)K#E/`."MVB=9Kjph4>eTB:Q;%Zne:ej,-'qp[LVML%2K%0'?@n^Jp+'[m%$lVrV+*,CTI:B$C20(%Vs?1Q]K2l1mZ*mZ
%0YICZVVan@DNR-O_S.EnjaL63`l<n_(eaRK!D?oEZ3PV*UW+.J`]/#k76/)q^2ED[[45Z_3_f!Y_f%SMk./pRh8iMoMNh9O&gsC_
%RH/WC!S3`6Ws`DI/X,i<=l\D\iHSjJ)sV%:HGL#G'G<E!nllN&!`ob=W:8Epd0Pb2:ZW-rRi#il6^Tikq=55]]6lB/.,S;akdZt.
%\t.&@\&CPa&N"TUYUZ?gA/WE0M6[aEC.h"FEV,n3nuUu>!SsU@Fr_&^/<@6j^;$sEduGQ?S*!#G8<4sQ%nqL.f"#Tl`BIQQrCo9C
%(QJDIIrdj6"2>lJJ_uGJMRa]#gZ"j6fYt$3I2%)grbD7?#12kO3Ddo&ZZ'.HhX]9$>/"AW?m^l<Ra4Vq%.cT$1<k1hPYUB*G/"cp
%U\sAbg^cP-nLd^[4RLsOl,pIqh;mJteF1[GW6nE+L6nTIl,HG7gQl`^G(i$gPr2+FJB6#_)BhS\WLrl>%.<,+"WM2-3\TDHT@7mD
%8D_XML;\+Ep;QhQ'Y2YdTB7[d>H[(:o5aeF"(B4Y+jZ[FWZ%TlFp,Hr(Xj7jE^Po2^t@bSi"VPBqKABl#FBaWpEi6\`BG;O4k$p,
%,R\k5o*FJC3"+oh93]>PCf:@<B0Y;m+GD-eF+_\\#IK*\&l>='4)G05<7U"tKl;%nnT6PTqgp>'<HlpAOT"rC0;^`!7EC*U=2p,J
%#gIOC`hf]i>JlIF(t1"3`"<HO+(?69GQ\/TA@0>)_&c.m@cBjYS<H6lmtMGmk[:TKec><k1(4KRgQ#*2<6b%%.";#[-pe3U+^A_'
%)qQ:hOC-:H*[7GXn6ONCX[@[$rsqiD0pmUV1Hc"MAUc39DVI8uC6XE&g\m+o]Wu/ZOjnG75fbDdkI^a(,5C-G&W?upWVj8X5a>.H
%bp1sEb9G2GY3:%s&=a<unr;tT-\2`FhR\O&TNDF!!?8O,*h[*G=uYL95r80KV[8/?9!kM;-lN19ce0)C^o%9*Id8DQI/dNsRJDO(
%"h\T[2Sju(4*%C@d08Ad,3%tR_iT/jbSs)r^=/?#91[3'JaCJ"*/V[$,st*'"+SfTmX(:JJ2*6E_=C+[g>jY)b>A7*j-m)cZ(H*G
%f.l5!%8=U[95<Z\aQ*BB$kQj?1RXKHa>-'s"h0`PmXi[QM7-T0U"e.N*EkSH)'m>dB_Y1IcOKnr>O:Np#G,7UlJkuXN\_;?8?s=7
%ihL./SlhNgru7/B)<`G`>4hO;Tuj,?]eoM>9ZiE:g)k3F2=V-u0bg-MBRrKdcS.Q+)H6g&)uIS&#g<U6g:T4OK$HAMpEjEVI?>u,
%Hh/;:h0aYP3bO=LJsGqk'gRA%;F'+`Sq*;>5AOg8EUUkIW-'=.Gsm]k:EY1=klX)b+'WdJh9bgeB<Eh6H?Ge6c2EuP-7,0hR&LiL
%22=4<]A5F`4<*aeMpsLnS!3=PO?'fAF`$ggMjuJMb_bPW(G<HdFJ]U0rjg$;>]+J/>OUF9Req5^QaSlE[!IoU)RDiH9[7,6jsU(<
%;_tSWSeACTG7M76]VF=D'Y[&eEa0Q'd=bZWr3pO'VV0nWR[;W1hI/,43nh[-55WgMO$8PXpV$K`rp\8d+K2"4&:9Y%G]OqCN%26k
%o2ZASXa5;A#MkC<&*gtiE`kFP%fc$I-Hrf)/1NDY[fWMo*:olR-$m#:OBg"p$C2'r3[*hR:h"EKc=HeU6qq_mi4IQ.(pTf9+\Kp5
%=:V9P^.[kD-=d4@*f\enH&B_/#u@YlAh<YnNpJoZ@YnechB&nE'HWOEbWGLa1^R11)7?/_;g\IPjjbSY3I4]3*jh<:43bb46chZ#
%i=M@Ek]8d;EYVWQ*Iq1j9,A`50]J`A4BE='82igH/.u``i7K_B_.AGB25\[0?AET\O:C!Ad2t/4aKDX&O.iQZC13H5`QQ!HkYT%U
%Ti.+cF\EhD**j+BYud_O"<8H=;0]aiCCt-']]^$oN'Z)H`UYSR/VHjGr>RBHHjFPuHPF*!L44fqO?.FhgekGuH)tNNn*nl8_7LgR
%h"::8!uKqEaaap^/OD/"[;IL(S>g#CiL&i^QHj/[4?tTW.-]'02I$8mi=G$-%6#d_Lfumna?Mi.[T&\<Blq.g!t+U@Jr(YYYX5#,
%$Hc;SU:>j<arb6kBJG>Tr%P;0rKtDa/`3L;/bG072C5tUNg4/#<%a'8?q!/I?2P#rU`@;9,?V8)@.e,.maT,YeDR"C$*!RMekl6U
%=5+1;d:^5_qO1)eph&e=bjiB9<6Sa[=uq>U:a*@c#Wf<egi%N<Z/VLp)_VG;.L&0T8%MWIfA/PLZaMK"!uJZ,j7`VZU3\qs.e\M,
%JTb'g/op;I3HBWQ-8D/5/.q@qU:YO?k4[ECfL):tfZf2SRV1:`U-Nee'e0_[oB\hq\SXN_E,#BL9NJ9%=nu/B[^eMq"&:EBLEkqF
%RgC?MV6(="[M1s@SS2'H'0qfh:?]\(&i/$2P9taCg[kst8q_U1d]pFZbDesjk@9"([`fdqiPaOtFp`-ZM>`Ef;*>@HpX1/7_'^J#
%<=Kj-ZbgoVkBCT/>!NAXJu@K-@E4gA>>UnRKg2Z03\:ONK'6gl5?9]4'h<^=N@$&Zk&qI",h2?LaPu:thSd_CBUj8.ru-Ob!uZ&S
%H#?UQY_UtGP)g)YfkYj-cX6V+MLq,-g2\0J\m4JLp0O-EOQ'7_ZWJ3@Z#n\,JIBK05(a\q[+Amj!?J@c9qO4?l4J_/C2^#m\]SDF
%U[XfH91-*_,5t2N<V+>*=LgaJ,*eUi&57N,`rl4=R$P=V!?pcW^AN),97jAP.gG[r`deus0>[,@cY=#^0FM6W>^BLb*!$'0J7*;;
%`DKkU`lEqJ=0>pQ5S'VOK+>RcldNN2\B;E,"]!b=]Ii[#K=c00B,2oY[G$;XK^C_[^3MqlT=u"-$<kYF%GCSEefp=7%#_ALggnko
%mKS\q"2&VK"9s5:VVY@3a#tlr>8te/[Ou"_Z3"=8<dA[jQOP:p"Hr;bF)Bk,D6p^FqNa_P]Nps*!fbdC;&<MnrC,=ndhI4n#+q[l
%@/\YjI-][t.3VsKQGKiQ+(:QYS+6&aH_HhIA@lfNOPY*P18Q',qF];W5(uSV'`Te6):#&o=pm#04)k@/b1Mpk/1MgQ@aNQ7kA,]-
%6J"9",KJA_dd;f@Y4bf+-5A07"(0BJO9)Aq=]eh+8j3F.V33au@2kW+9YF#RY3*Op@a,n8CO<QLn9/?D2qNBBc?F#eonRa,U(r_H
%KG7aMEs3@Z6,C.bmER1\iAKX\!T=u9JpjY1YX&q[V;&2B1U@Mp[oZMO]Y3E+)FmLnFN>!9^?C\!>%1JH:9k3%W\!@&T[b!3lH<T.
%NoAKpS-J,)>2E=mrCB>,T-_=f4G`hb_/;2\G0u>l>`6)%MRL$9M=$;ePL0Q7TlCJ1!QH8X2o);M99F\b'GJX,0?aTilK/Go!*8J:
%\=E,'iX:%"8LJ4Oo3pp!4^*\eO7+DdC.Xo*m&C3D-k%'[m66uDEAfYBHq$Ab:/qTh`/i81H4f.tY=Yj7gUR48jFHBH@f[8'>/^0*
%)JYS)Z&cDk1@I?FIgMJJ1L4&:T:&Jh$Np!TK"TK20Wibb.s7F$@6qqiipY/pi7'nlXXR'?h^1`t7m5l"jW77e/7)a:iMI&[DeRl`
%6JI]SdF!<%'8S85n32tI>+_udRr_u(k9EG?B/$k?3]rPe<IFF!,>\^VB65pk?>pHcX5.5=TI4;3_oIJ?pfC9_p`P0@[JD'[g8E[p
%l09uVXgrsD+BekO<PVp1DL">Q&KSJ>4<WsC%hfk`7d^9^ldZ!>Ritm7%$Y3VIHOK[$Lrr7EJ;VR6*p>$0VJb(LLh,qV,(NONRra`
%;5/+]Z-,QM9oaVd8@[$_(I$lpL5f`!fZ'Rdn`>N@!gJ*8>s97H="*Q(B_HA=$.Rb;ENLWigsF)=M'GYDB<JHd*N+6jTP'8!kYa@(
%@fmZY9+r==O_I\N/NKII`K2!HL"rPG/L[MZiEOTUel7VbUHdPXqm/<IrNjLFZj$j4kF;0"HGHc.%:nYl3nE&;!\3-9-PUOW>p880
%.N6PP*,RCam#"-g.@"6FX^]#NTT7Ec6nNA1T!bG3[7p5A&Oh_=c;d;g]qs-./jCG$$;JjBEK=:`g]\N1S8SZ9=SMEIXZLb,qB"2]
%V]?+5N3r0.fJP)mm#&[[Dl?m.mi,3.N8+%CG!7GQ3QkaN8<J/E;3O_eU1<p??r@&lSDW?[A38tl3M@]]EWn`DXeQY=VrDPDBB20d
%@L^=Km(43kCqiRC'F:1%1(5lQaI`LNNf!n1c[rs(--s()6l<+nif7GWNuL,PpFleL:*9`LNJL0<?\f.^jc+_@:Y+(Cb51MP?Pj?D
%pel\N(+@=fPi_;r=RAD'Yq'"m@p_<B]7[3u\r34150ed'c5GYPNR#]B6T?_dn7aJ*F+_SZ)$S%f]$d%KBP'G%N>6:?C#&f7E/q@-
%aq1tN`(\nH%C4AR1s@O9*%N;3\Y%e,YX6G+P&+ZP1r?PqJ_<=7f't6:PDT^o(tQWfEI<r*+<)3.TC:^%\u^SJqq'#?JP/@g#D`DI
%%!TA;DTD^3<2?*deKcXhYBu!!^\`m(:Nlio5T)<1$cHG$V)r&3$I/hTJDuq"Q*VD@Mn%7u+aiV65F9fM1>)q>,Zn;@@+,JMoe,IZ
%5f`6<EUCcR^WT3R[ONfYSYLatN)CH+4]32.*hB8NOC^+h'`@S/<CLW$'pBq7B!o'=#f$"N*/s40i#j6JJ=;1!TgPY<Rc"ra+.-i@
%ep-DqV6;gJ7.K1jkP!PgLuP,31qt(D`P_W1X0t>O?(qJ'En:i:%*5^9ndug>ld#g[fH/p)H-R#?,EHC4=B2ZFQN5@;Hr;rOcCX;)
%L"lt,=Fc0<4Jq^GnYF_5)*JGNBh*l;TA#TP+JO9EU5/gi4*F.BKSn!;(:LO^K=rO6d?r1<`Kl8s1A-lf_P0<s'&u4H_]8n0(aW[K
%M#XFP"<uj7mFVIKn_0$'TD>4Q%q#"u!b+o,e/4Q:2;0>4YQY/@7nDT@lXUVhJp7>rHj7DB=6oXJbSF3u71t2D*aQ+iDaMd*;4-Rr
%&Zm`'g,N&JPbRtr3#,:daaM;X58MtFnO%4YN'qY5==+aXQ(TJ-&G]aZrOuDFVZi8(Lk^sp%)a2Nm0hn;Lh25@B`Je`V^Pd<d<4Op
%.idS-?9o)Jm&dihn()rJ8jIO_auIjB3-GI3P]=GoP4Fb*aO'JukWDlO2ag6G*J?ldPnZZHF(2;[*W^QH&Ah'2\Q=1eQR-iR=7KMH
%c6=GW[?_ib;)\T%QodN.@IJ$/0'N012@T?D3d*Q/1/^P8eZQa='15i?J)fX!U4>:-W<)+cb7;lS;EG0DOegl'5#Uu?#t'PQX#9+o
%3YhMf_l"_oNHr*PpnsT["?.%PgL4A%0H2WRo]^lHk%OYg*kbj:Fh_\O,sc>`UfIk@7IeTkdaWD#2?Ja"RQ?-VW[-\:5r3U3[Xos7
%9&2cqH"S486R#r"hR4(2oM#IbJXnGg2*aBYg+pWf#M&VO1!i..ICc0c!G)cM/S0qfT&kA+3`^!>G(]Q=1:"<prc%<A"=@*.59Dp:
%EZBp5qMZ[5Qp.1P'VSIi#OCt:o#`=/\VqZ!Pf$JfTTiE1!a*]%E:A#V#2rslhGD9;U]a)*-)\XC?7,TKcbL&9jdZj>&/jcEAmnns
%$arSih?n%F'j[.QDAr#?Igo[V=B]j.hCNR6F,8msmg>f1>"XRQJ6PGS=,'^NF'i2Um0[^i@f`L#79R`HDjm>1^g#3c\dM\\2Mbd`
%m6,pa9+PYL9O[`FC(Z-]O)fDrek`b0\482=(*f&"Fjrk$Jnue"dPXmVVpY6`'='-qO4")uO;4Tl>UAZ=m4Mr&,OaZE4rr$VaPJcO
%7`Z(A"?QNJa<ETAq3@77&SPf?NEZ\2G]Z88W67jtWtm)K$Y2djJOoe):)fmQKJ)BX*1\%[c4Qd2MmMXY1-6`52.Rcl\A_KY2t1qB
%hLG?Cp\EW1"Xln/3)J#ef!5cbK\LUR_J5Lo],S?ZZI>0>'l<:7;W`k")25@(BkVQNTnbY]>(;Ui$4J1[`M:hsm'`X#G!h4c$XmA0
%@<NT<OK&(aG!dMnrN17L)k#\VU;*,P^^CrPC"UXI/%D))``6!+@<]%^9kC8MEAb$&nu:dU@UkL1Y"f\^-pTu@6^O[Z(#!MC/%QVU
%<m[pdJB[:0!uf1U[`'0*_O1:Lq:1]*lYXVnV\ou(hXjq(hH"=!]rgL9HWsA#hCs37U1$]K-8eO0K3_O4)gX5\S9jrRmZ;!PB(Fb)
%,d<OsHFLSik\b`76u\18N^2><7Rdm0RnX?oEK&=PNGh'dc1UQnGR9g!NjcD#fhHAm\67Z(bRADTMKe[;$%3"XVQQ'8%<#pbaEL_/
%)`l1h[XPr/)7-uXcu+-@fl<oA$0&fu%sK>(<k)%giYnemWo$UZ8ht:a>]_7pA+'JM@r4[[Ca_Y0>ThR)o55Ho>n\fXeHmjYco0n#
%&;sh<&q!A<%gJU`*R%'S"XIqLnqd-$<jIQ7!c%2l4aK6u7MAsq-L2.[$lbq0HX9Nj.ct2qAjV6g'rlL:dK0UkX.@0g(/\6fAP*7M
%f1WNpEP6R24g#UN)Y8(*n@MU)%PVe#Yg`/8a*m,O']/W09drfSjoR,X^D/WLCF+i*_9BL?]3&B2j\k[.LBsuerFD5G'jBnYdB.tR
%KECPfND"a;bNml^h=?He!`.O^%0b8*e0iH*MQDH8U!rQ>aH:CiRT.lsD3e8u9;G:_j3L25dWQk.j`Q+a,I+"UH"@DFX6n8f94)Tg
%YD>Hb,ol"Kb]CK<*p:U[hA7+]aka7?92il<TNup#_+htjRoA^T0a02O4\cm)l1c9]L?Ydmi6<mF9e:6#QG%E<n`e?e:Y(aF?,#2$
%iZ>d*%a91i-YnU%eqXDtK2\_L2._L8Tj#72kgM;U=!Pgjm34R;WHQkaGApFNYKaeF)gFk*mVn/&i9PObi.S@Eqo,l7VRuA6kW6YT
%)(l^7G"3&hm&dihDm[sTi'brjTdq0=hY!O60A+^7jm.9c[`WTT(^e;_>Kn_KJmU\cg&gosm?%K_Tbb_C2f8>5W3#2p(*XUYP7GAD
%0]VaR)"sO*d[Lpd"JpBWAZ77G__l(1%;6L1Oi8`UJ?fKTV"mVpVB4<U="=m;&)X]k%_pc0[$ZMIF>jM7S4_\):-_U1_@l%;Th/o8
%ou/151g&+[D'oqdmG].`-**F\TbZ9U645hK67AujK?uf=f@`>[g(lup'$KeV*re;sN4,J@4GS^3<4[%g/^SM@XJd/V/`HeT)FShY
%0(giPE!rm3Vo'#I**dPg%cJ.+lJ9jiJH=?Ock"sBoQN<Kf2h9oE/Pk8am7\)"t85#5_nidXFmdOo+4B*--R0&S??Xs[R7PJCo##2
%9sik"`Qasi6[4.l,I+"e#Qp4s^%^I5eXJA)iOP`U?*7Wr&fB6_Fk?grJhN7#e^I@!KDY-.d)/LMY@+CJgIkd;HB"Cia>=P]ki'!T
%e*k[gl'QJ4ZjZH3&hK[n#o[/6k"_\6TRl2Lp1ZIigLc(a*Gi.27aOD\BTJ`s,A=Taq#7Ld#Sq6c&2a06[6Boe/-HE^G)peRo<&:R
%l/<-gJsI9G[TWq:q)I9\BH^KOh*S??RtY5RbsDCYpTup:?rUl(RKsg6:hj=P-hZ*S`B+=?ckB,6UP3*0Fpl-DmM:BhQ%]3j=11U5
%?MlfFb[In_#geK)rn.1)R8,]AK`I$_;2>Gb_2@XrJd):CE3Km1P(Fc,"IQ[TrT]2K/#\_cK`D5-b%`)%OPN7-J=D7#_9>6m6ta&6
%#Z,)IB+%"8&qGVPcBC;Z=q9l]qfX[r_1M%IJa6@k\)Lb8JGsSMl)0"L^d%hmr0r33h>_s#m@V/n_lnMHJ7&<%hu;C)s6C31rBHpg
%s2-Mhmbe$(\,Z:&_f(&!]ANYY[t">Ts,MSTppWJ8ruZagr?&b'plBq)rVltOO1#RJq9+9`+91^EJ+rsD5Kn5(~>
%AI9_PrivateDataEnd
